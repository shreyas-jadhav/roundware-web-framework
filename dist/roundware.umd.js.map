{"version":3,"sources":["webpack://RoundwareWebFramework/webpack/universalModuleDefinition","webpack://RoundwareWebFramework/./node_modules/@turf/bbox/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/boolean-point-in-polygon/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/clone/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/distance/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/helpers/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/invariant/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/line-to-polygon/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/meta/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/point-to-line-distance/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/@turf/rhumb-distance/dist/js/index.js","webpack://RoundwareWebFramework/./node_modules/automation-events/build/es5/bundle.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/createClass.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://RoundwareWebFramework/./node_modules/automation-events/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://RoundwareWebFramework/./node_modules/loglevel/lib/loglevel.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/globals.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/constants.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-active-audio-node-input-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/audio-buffer-source-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/biquad-filter-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/constant-source-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/gain-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/oscillator-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/stereo-panner-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/deactivate-audio-graph.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/add-active-input-connection-to-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/add-passive-input-connection-to-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/delete-passive-input-connection-to-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/set-value-at-time-until-possible.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-dom-exception-constructor-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/module.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-active-input-connection-to-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-passive-input-connection-to-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/delete-active-input-connection-to-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-tail-time.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/delete-active-input-connection-to-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-connection-to-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/set-audio-node-tail-time.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-channel-splitter-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-periodic-wave-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-or-create-backup-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-post-message-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-active-audio-worklet-node-inputs.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/get-backup-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/set-active-audio-worklet-node-inputs.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/helpers/sanitize-audio-worklet-node-options.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-channel-count-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack://RoundwareWebFramework/./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","webpack://RoundwareWebFramework/./src/TrackStates.ts","webpack://RoundwareWebFramework/./src/api-client.ts","webpack://RoundwareWebFramework/./src/asset.ts","webpack://RoundwareWebFramework/./src/assetFilters.ts","webpack://RoundwareWebFramework/./src/assetPool.ts","webpack://RoundwareWebFramework/./src/assetSorter.ts","webpack://RoundwareWebFramework/./src/audiotrack.ts","webpack://RoundwareWebFramework/./src/envelope.ts","webpack://RoundwareWebFramework/./src/geo-position.ts","webpack://RoundwareWebFramework/./src/mixer.ts","webpack://RoundwareWebFramework/./src/mixer/AssetEnvelope.ts","webpack://RoundwareWebFramework/./src/mixer/TrackOptions.ts","webpack://RoundwareWebFramework/./src/playlist.ts","webpack://RoundwareWebFramework/./src/playlistAudioTrack.ts","webpack://RoundwareWebFramework/./src/project.ts","webpack://RoundwareWebFramework/./src/roundware.ts","webpack://RoundwareWebFramework/./src/session.ts","webpack://RoundwareWebFramework/./src/shims.ts","webpack://RoundwareWebFramework/./src/sortMethods.ts","webpack://RoundwareWebFramework/./src/speaker.ts","webpack://RoundwareWebFramework/./src/speaker_track.ts","webpack://RoundwareWebFramework/./src/timed_asset.ts","webpack://RoundwareWebFramework/./src/user.ts","webpack://RoundwareWebFramework/./src/utils.ts","webpack://RoundwareWebFramework/webpack/bootstrap","webpack://RoundwareWebFramework/webpack/runtime/define property getters","webpack://RoundwareWebFramework/webpack/runtime/hasOwnProperty shorthand","webpack://RoundwareWebFramework/webpack/runtime/make namespace object","webpack://RoundwareWebFramework/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","Object","defineProperty","value","meta_1","bbox","geojson","result","Infinity","coordEach","coord","default","invariant_1","inRing","pt","ring","ignoreBoundary","isInside","length","slice","i","j","xi","yi","xj","yj","point","polygon","options","Error","getCoord","geom","getGeom","type","polys","coordinates","inBBox","insidePoly","inHole","k","cloneFeature","cloned","keys","forEach","key","properties","cloneProperties","geometry","cloneGeometry","Array","isArray","map","item","geometries","g","deepSlice","coords","features","feature","cloneFeatureCollection","helpers_1","from","to","coordinates1","coordinates2","dLat","degreesToRadians","dLon","lat1","lat2","a","Math","pow","sin","cos","radiansToLength","atan2","sqrt","units","feat","id","isNumber","_i","coordinates_1","lineString","featureCollection","fc","multiLineString","multiPoint","multiPolygon","radians","factor","factors","lengthToRadians","distance","radiansToDegrees","PI","num","isNaN","earthRadius","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","yards","unitsFactors","areaFactors","acres","hectares","_options","points","polygons","lineStrings","geometryCollection","round","precision","multiplier","lengthToDegrees","bearingToAzimuth","bearing","angle","convertLength","originalUnit","finalUnit","convertArea","area","startFactor","finalFactor","isObject","input","constructor","validateBBox","validateId","indexOf","getCoords","containsNumber","geojsonType","name","featureOf","collectionOf","_a","getType","_name","__importDefault","mod","__esModule","bbox_1","clone_1","lineStringToPolygon","line","autoComplete","orderCoords","autoCompleteCoords","multiCoords","largestArea","west","south","east","north","abs","unshift","push","first","x1","y1","last","x2","y2","lines","mutate","undefined","helpers","callback","excludeWrapCoord","l","stopG","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","propEach","featureEach","geomEach","featureProperties","featureBBox","featureId","flattenEach","segmentEach","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","lineEach","coordReduce","initialValue","previousValue","propReduce","currentProperties","featureReduce","currentFeature","coordAll","geomReduce","currentGeometry","flattenReduce","segmentReduce","started","lineReduce","currentLine","findSegment","findPoint","distance_1","rhumb_distance_1","dot","u","v","calcDistance","b","method","p","segment","d","c1","c2","b2","distanceToSegment","origin","destination","distanceInMeters","radius","R","Number","phi1","phi2","DeltaPhi","DeltaLambda","DeltaPsi","log","tan","q","calculateRhumbDistance","_slicedToArray","_classCallCheck","_createClass","_interopDefaultLegacy","e","_slicedToArray__default","_classCallCheck__default","_createClass__default","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","target","timeConstant","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","getLinearRampValueAtTime","getValueCurveValueAtTime","theoreticIndex","lowerIndex","floor","upperIndex","ceil","interpolateValue","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","Symbol","iterator","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","remainingAutomationEvents","firstRemainingAutomationEvent","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","arr","len","arr2","instance","Constructor","TypeError","_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","_arr","_n","_d","_e","_s","next","done","err","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","toString","call","test","definition","noop","undefinedType","isIE","window","navigator","userAgent","logMethods","bindMethod","obj","methodName","bind","Function","apply","arguments","traceForIE","console","trace","realMethod","replaceLoggingMethods","level","loggerName","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","defaultLevel","currentLevel","self","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","location","encodeURIComponent","exec","levels","getLevel","setLevel","persist","toUpperCase","SILENT","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","WeakMap","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","handler","construct","IMPORT_STATEMENT_REGEX","splitImportStatements","source","url","importStatements","sourceWithoutImportStatements","replace","match","unresolvedUrl","importStatementWithResolvedUrl","URL","join","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","constructible","Proxy","isConstructible","getValueForKey","get","pickElementFromSet","set","predicate","matchingElements","filter","matchingElement","delete","deletePassiveInputConnectionToAudioNode","passiveInputs","output","passiveInputConnections","matchingConnection","passiveInputConnection","size","getEventListenersOfAudioNode","audioNode","setInternalStateToActive","has","add","eventListener","isAudioWorkletNode","setInternalStateToPassive","setInternalStateToPassiveWhenNecessary","activeInputs","every","connections","DEFAULT_OPTIONS","channelCount","channelCountMode","channelInterpretation","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","isOwnedByContext","nativeAudioNode","nativeContext","context","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","nativeAudioBuffer","copyToChannel","createIndexSizeError","DOMException","wrapAudioBufferGetChannelDataMethod","audioBuffer","getChannelData","channel","code","numberOfChannels","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","isActiveAudioNode","buffer","loop","loopEnd","loopStart","playbackRate","getAudioNodeConnections","getAudioParamConnections","audioParam","deactivateActiveAudioNodeInputConnections","includes","audioParams","isAudioBufferSourceNode","parameters","isBiquadFilterNode","Q","detune","frequency","gain","isConstantSourceNode","offset","isGainNode","isOscillatorNode","isStereoPannerNode","pan","audioParamConnections","deactivateAudioGraph","isValidLatencyHint","latencyHint","isAudioNode","audioNodeOrAudioParam","isAudioNodeOutputConnection","outputConnection","insertElementInSet","element","ignoreDuplicates","lmnt","addActiveInputConnectionToAudioParam","activeInputConnection","addPassiveInputConnectionToAudioParam","Set","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","connectNativeAudioNodeToNativeAudioNode","nativeSourceAudioNode","nativeDestinationAudioNode","fakeNativeDestinationAudioNode","inputs","connect","deleteActiveInputConnection","activeInputConnections","deleteEventListenerOfAudioNode","deletePassiveInputConnectionToAudioParam","disconnectNativeAudioNodeFromNativeAudioNode","disconnect","getNativeAudioNode","getNativeAudioParam","isPartOfACycle","isPassiveAudioNode","testAudioNodeDisconnectMethodSupport","nativeAudioContext","Promise","resolve","analyzer","createScriptProcessor","dummy","createGain","ones","createBuffer","channelData","createBufferSource","onaudioprocess","event","chnnlDt","inputBuffer","some","sample","start","visitEachAudioNodeOnce","cycles","visitor","counts","Map","cycle","count","isNativeAudioNode","nativeAudioNodeOrAudioParam","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","connection","destinationOrOutput","clear","filteredConnections","deleteInputsOfAudioNode","isOffline","listener","isActive","deleteInputConnectionOfAudioNode","deleteInputsOfAudioParam","deleteInputConnectionOfAudioParam","ReadOnlyMap","_map","entries","thisArg","numberOfInputs","numberOfOutputs","parameterData","processorOptions","copyFromChannel","parent","channelNumber","bufferOffset","byteLength","slicedInput","BYTES_PER_ELEMENT","createNestedArrays","x","y","arrays","array","processBuffer","async","proxy","renderedBuffer","nativeOfflineAudioContext","outputChannelCount","processorConstructor","exposeCurrentFrameAndCurrentTime","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","sampleRate","audioNodeConnections","audioWorkletProcessor","nodeToProcessorMap","nativeAudioWorkletNode","getAudioWorkletProcessor","outputs","prmtrs","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","error","dispatchEvent","ErrorEvent","colno","filename","lineno","message","disableNormalization","delayTime","maxDelayTime","getOutputAudioNodeAtIndex","outputAudioNodes","outputAudioNode","attack","knee","ratio","release","threshold","createInvalidStateError","createInvalidAccessError","filterBuffer","feedback","feedbackLength","feedforward","feedforwardLength","minLength","xBuffer","yBuffer","bufferIndex","bufferLength","inputLength","testPromiseSupport","uint32Array","Uint32Array","promise","decodeAudioData","catch","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","nativeAnalyserNode","getFloatTimeDomainData","assignNativeAudioNodeAudioParamValue","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","nativeAudioScheduledSourceNode","when","RangeError","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","computeBufferSize","baseLatency","max","min","log2","createNativeBiquadFilterNode","nativeBiquadFilterNode","createBiquadFilter","createNativeChannelSplitterNode","nativeChannelSplitterNode","createChannelSplitter","channelSplitterNode","wrapChannelSplitterNode","interceptConnections","original","interceptor","createNativeDelayNode","nativeDelayNode","createDelay","createNativeGainNode","nativeGainNode","divide","denominator","evaluatePolynomial","coefficient","z","createNativeScriptProcessorNode","bufferSize","createNotSupportedError","periodicWave","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationX","orientationY","orientationZ","panningModel","positionX","positionY","positionZ","refDistance","rolloffFactor","createUnknownError","curve","oversample","isDCCurve","overwriteAccessors","object","property","createGetter","createSetter","getPrototypeOf","hasOwnProperty","getOwnPropertyDescriptor","setValueAtTimeUntilPossible","setValueAtTime","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","nativeAudioBufferSourceNode","createOscillator","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","testDomExceptionConstructorSupport","testTransferablesSupport","arrayBuffer","ArrayBuffer","port1","port2","MessageChannel","onmessage","data","postMessage","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","removeEventListener","addEventListener","isStopped","wrapEventListener","defineProperties","currentTarget","handleEvent","addActiveInputConnectionToAudioNode","createAddActiveInputConnectionToAudioNode","addPassiveInputConnectionToAudioNode","createAddPassiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioNode","createDeleteActiveInputConnectionToAudioNode","audioNodeTailTimeStore","getAudioNodeTailTime","createGetAudioNodeTailTime","cacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","then","finalTestResult","createNativeAnalyserNode","createAnalyser","byteTimeDomainData","Uint8Array","getByteTimeDomainData","wrapAnalyserNodeGetFloatTimeDomainDataMethod","createNativeAnalyserNodeFactory","getAudioNodeRenderer","renderer","createGetAudioNodeRenderer","renderInputsOfAudioNode","nextTrace","all","audioNodeRenderer","renderedNativeAudioNode","render","allRenderingPromises","renderingPromises","createRenderInputsOfAudioNode","createAnalyserNodeRenderer","renderedNativeAnalyserNodes","renderedNativeAnalyserNode","createAnalyserNode","createAnalyserNodeRendererFactory","getNativeContext","contextStore","nativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOfflineAudioContextConstructor","isNativeOfflineAudioContext","anything","createIsNativeOfflineAudioContext","audioParamAudioNodeStore","eventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","createEventTargetConstructor","nativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioContextConstructor","isNativeAudioContext","createIsNativeAudioContext","AudioNode","createIsNativeAudioNode","isNativeAudioParam","AudioParam","createIsNativeAudioParam","audioNodeConstructor","addAudioNodeConnections","addConnectionToAudioNode","createIncrementCycleCounter","decrementCycleCounter","detectCycles","super","_context","_nativeAudioNode","state","isPassive","nativeAudioParam","eventListeners","partialConnection","deleteActiveInputConnectionToAudioParam","addConnectionToAudioParamOfAudioContext","destinations","audioNodeConnectionsOfSource","deleteAnyConnection","deleteConnectionAtOutput","deleteConnectionToDestination","createAudioNodeConstructor","audioNodeConnectionsStore","tailTime","setTimeout","createAddConnectionToAudioNode","cycleCounters","cycleCounter","nativeDestinationAudioParam","createIncrementCycleCounterFactory","createDecrementCycleCounter","chain","nextLink","isDelayNode","mergedCycles","nestedCycles","concat","createDetectCycles","analyserNodeConstructor","audionNodeConstructor","mergedOptions","_nativeAnalyserNode","frequencyBinCount","getByteFrequencyData","getFloatFrequencyData","createAnalyserNodeConstructor","audioBufferStore","nativeAudioBufferConstructor","AudioBuffer","createNativeAudioBufferConstructor","convertNumberToUnsignedLong","unit32Array","wrapAudioBufferCopyChannelMethods","channelNumberAsNumber","bufferOffsetAsNumber","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","createWrapAudioBufferCopyChannelMethodsOutOfBounds","audioBufferConstructor","testNativeAudioBufferConstructorSupport","hasInstance","createAudioBufferConstructor","createTestAudioBufferConstructorSupport","addSilentConnection","createAddSilentConnection","renderInputsOfAudioParam","createRenderInputsOfAudioParam","connectAudioParam","createConnectAudioParam","createNativeAudioBufferSourceNode","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","isScheduled","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","clampedOffset","createNativeAudioBufferSourceNodeFactory","nullifiedBuffer","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","renderAutomation","getAudioParamRenderer","replay","createRenderAutomation","createGetAudioParamRenderer","createAudioBufferSourceNodeRenderer","renderedNativeAudioBufferSourceNodes","renderedNativeAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","createAudioBufferSourceNode","createAudioBufferSourceNodeRendererFactory","createAudioParam","addAudioParamConnections","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","audioParamRenderer","exponentialRampToValueAtTime","linearRampToValueAtTime","setTargetAtTime","setValueCurveAtTime","currentTime","cancelAndHoldAtTime","flush","previousLastEvent","pop","currentLastEvent","cancelScheduledValues","isFinite","convertedValues","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","createAudioParamFactory","audioParamConnectionsStore","audioBufferSourceNodeConstructor","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","wrappedListener","onended","nativeOnEnded","resetInternalStateToPassive","createAudioBufferSourceNodeConstructor","audioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","nativeAudioDestinationNodePromise","createAudioDestinationNode","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","createAudioDestinationNodeConstructor","isNodeOfNativeOfflineAudioContext","gainNode","createNativeAudioDestinationNodeFactory","createBiquadFilterNodeRenderer","renderedNativeBiquadFilterNodes","renderedNativeBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","createBiquadFilterNode","createBiquadFilterNodeRendererFactory","setAudioNodeTailTime","createSetAudioNodeTailTime","biquadFilterNodeConstructor","_Q","_detune","_frequency","_gain","log10","_nativeBiquadFilterNode","getFrequencyResponse","frequencyHz","magResponse","phaseResponse","createBiquadFilterNodeConstructor","monitorConnections","whenConnected","whenDisconnected","wasDisconnected","wasConnected","isDisconnected","createMonitorConnections","wrapChannelMergerNode","channelMergerNode","audioBufferSourceNode","createWrapChannelMergerNode","createNativeChannelMergerNode","nativeChannelMergerNode","createChannelMerger","createNativeChannelMergerNodeFactory","channelMergerNodeConstructor","createChannelMergerNodeRenderer","createChannelMergerNodeConstructor","renderedNativeAudioNodes","createAudioNode","createChannelMergerNodeRendererFactory","channelSplitterNodeConstructor","createChannelSplitterNodeRenderer","sanitizeChannelSplitterOptions","createChannelSplitterNodeConstructor","createChannelSplitterNodeRendererFactory","createNativeConstantSourceNodeFaker","audioNodeOptions","nativeConstantSourceNodeFaker","args","createNativeConstantSourceNodeFakerFactory","createNativeConstantSourceNode","createConstantSource","nativeConstantSourceNode","createNativeConstantSourceNodeFactory","constantSourceNodeConstructor","createConstantSourceNodeRendererFactory","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","createConstantSourceNodeConstructor","renderedNativeConstantSourceNodes","renderedNativeConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","createConstantSourceNode","createNativeConvolverNode","nativeConvolverNode","createConvolver","normalize","createNativeConvolverNodeFactory","convolverNodeConstructor","createConvolverNodeRenderer","_nativeConvolverNode","createConvolverNodeConstructor","renderedNativeConvolverNodes","renderedNativeConvolverNode","createConvolverNode","createConvolverNodeRendererFactory","delayNodeConstructor","createDelayNodeRenderer","_delayTime","createDelayNodeConstructor","renderedNativeDelayNodes","renderedNativeDelayNode","nativeDelayNodeIsOwnedByContext","createDelayNode","createDelayNodeRendererFactory","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","createDynamicsCompressor","createNativeDynamicsCompressorNodeFactory","dynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeConstructor","renderedNativeDynamicsCompressorNodes","renderedNativeDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","createDynamicsCompressorNode","createDynamicsCompressorNodeRendererFactory","gainNodeConstructor","createGainNodeRenderer","createGainNodeConstructor","renderedNativeGainNodes","renderedNativeGainNode","nativeGainNodeIsOwnedByContext","createGainNode","createGainNodeRendererFactory","createNativeIIRFilterNodeFaker","convertedFeedback","Float64Array","convertedFeedforward","scriptProcessorNode","bufferIndexes","xBuffers","yBuffers","fill","outputBuffer","nyquist","omega","response","createNativeIIRFilterNodeFakerFactory","renderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","startRendering","createRenderNativeOfflineAudioContext","createTestOfflineAudioContextCurrentTimeSupport","createIIRFilterNodeRenderer","filteredBufferPromise","nativeIIRFilterNode","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","partialOfflineAudioContext","filteredBuffer","filterFullBuffer","createIIRFilterNodeRendererFactory","iIRFilterNodeConstructor","createNativeIIRFilterNode","wrapIIRFilterNodeGetFrequencyResponseMethod","_nativeIIRFilterNode","createIIRFilterNodeConstructor","createNativeIIRFilterNodeFactory","createAudioListener","nativeListener","forwardX","forwardY","forwardZ","upX","upY","upZ","createFakeAudioParam","constantSourceNode","lastOrientation","lastPosition","orientation","setOrientation","positon","setPosition","createFakeAudioParams","createAudioListenerFactory","unrenderedAudioWorkletNodeStore","minimalBaseAudioContextConstructor","_nativeContext","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalBaseAudioContextConstructor","createNativeOscillatorNode","nativeOscillatorNode","setPeriodicWave","createNativeOscillatorNodeFactory","createOscillatorNodeRenderer","renderedNativeOscillatorNodes","renderedNativeOscillatorNode","nativeOscillatorNodeIsOwnedByContext","createOscillatorNode","createOscillatorNodeRendererFactory","oscillatorNodeConstructor","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeConstructor","createConnectedNativeAudioBufferSourceNode","createConnectedNativeAudioBufferSourceNodeFactory","createNativeWaveShaperNodeFaker","negativeWaveShaperNode","createWaveShaper","positiveWaveShaperNode","inputGainNode","invertGainNode","outputGainNode","revertGainNode","disconnectNativeAudioBufferSourceNode","isConnected","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","centerIndex","createNativeWaveShaperNodeFakerFactory","createNativeWaveShaperNode","nativeWaveShaperNode","automationRate","createNativeWaveShaperNodeFactory","createNativePannerNode","createNativePannerNodeFaker","pannerNode","createPanner","SINGLE_CHANNEL_OPTIONS","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","nativePannerNodeFaker","createNativePannerNodeFakerFactory","nativePannerNode","createPannerNodeRenderer","renderedBufferPromise","renderedNativeGainNodeOrNativePannerNode","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","createPannerNodeRendererFactory","pannerNodeConstructor","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeConstructor","periodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","sanitizePeriodicWaveOptions","PeriodicWave","imag","real","createPeriodicWaveConstructor","convertedImag","convertedReal","nativePeriodicWave","createPeriodicWave","createNativePeriodicWaveFactory","createNativeStereoPannerNode","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraph","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForMono","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraphForStereo","nativeStereoPannerNodeFakerFactory","createNativeStereoPannerNodeFakerFactory","createStereoPannerNodeRenderer","renderedNativeStereoPannerNodes","renderedNativeStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","createStereoPannerNode","createStereoPannerNodeRendererFactory","stereoPannerNodeConstructor","_pan","createStereoPannerNodeConstructor","createWaveShaperNodeRenderer","renderedNativeWaveShaperNodes","renderedNativeWaveShaperNode","createWaveShaperNode","createWaveShaperNodeRendererFactory","waveShaperNodeConstructor","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeConstructor","isSecureContext","createIsSecureContext","fn","currentFrame","createExposeCurrentFrameAndCurrentTime","backupOfflineAudioContextStore","getOrCreateBackupOfflineAudioContext","backupOfflineAudioContext","createGetOrCreateBackupOfflineAudioContext","nativeAudioWorkletNodeConstructor","AudioWorkletNode","createNativeAudioWorkletNodeConstructor","addAudioWorkletModule","evaluateSource","fetchSource","ongoingRequests","resolvedRequests","testAudioWorkletProcessorPostMessageSupport","moduleURL","credentials","audioWorklet","absoluteUrl","isSupportingPostMessage","patchedSourceWithoutImportStatements","blob","Blob","createObjectURL","addModule","finally","revokeObjectURL","resolvedRequestsOfContext","ongoingRequestsOfContext","promiseOfOngoingRequest","evaluateAudioWorkletGlobalScope","_AWGS","SyntaxError","trim","nodeNameToProcessorConstructorMap","rslvdRqstsFCntxt","ngngRqstsFCntxt","createAddAudioWorkletModule","reject","head","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","src","href","onload","appendChild","createEvaluateSource","fetch","ok","text","offlineAudioContext","isEmittingMessageEvents","isEmittingProcessorErrorEvents","audioWorkletNode","oscillator","port","onprocessorerror","createTestAudioWorkletProcessorPostMessageSupport","isNativeContext","createIsNativeContext","createDataCloneError","createEncodingError","detachedArrayBuffers","anyContext","audioData","complete","detachArrayBuffer","fail","createDecodeAudioData","baseAudioContextConstructor","_audioWorklet","constraints","successCallback","errorCallback","createBaseAudioContextConstructor","mediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","createMediaElementSource","mediaElement","_nativeMediaElementAudioSourceNode","createMediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","createMediaStreamDestination","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","mediaStream","audioStreamTracks","getAudioTracks","sort","filteredAudioStreamTracks","createMediaStreamSource","MediaStream","_nativeMediaStreamAudioSourceNode","createMediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","mediaStreamTrack","createMediaStreamTrackSource","kind","createNativeMediaStreamTrackAudioSourceNodeFactory","audioContextConstructor","_baseLatency","_nativeAudioContext","_nativeGainNode","_state","revokeState","close","resume","resolvePromise","suspend","createAudioContextConstructor","getUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodes","createGetUnrenderedAudioWorkletNodes","addUnrenderedAudioWorkletNode","createAddUnrenderedAudioWorkletNode","connectMultipleOutputs","createConnectMultipleOutputs","deleteUnrenderedAudioWorkletNode","createDeleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","createDisconnectMultipleOutputs","activeAudioWorkletNodeInputsStore","getActiveAudioWorkletNodeInputs","createGetActiveAudioWorkletNodeInputs","createNativeAudioWorkletNodeFaker","numberOfParameters","messageChannel","gainNodes","inputChannelSplitterNodes","constantSourceNodes","inputChannelMergerNode","outputChannelSplitterNode","outputChannelMergerNodes","parameterMap","nativeAudioWorkletNodeFaker","_","patchedEventListeners","unpatchedEventListener","patchedEventListener","audioWorkletNodeOptions","audioWorkletProcessorPromise","onmessageerror","cloneAudioWorkletNodeOptions","createAudioWorkletProcessorPromise","createAudioWorkletProcessor","dWrkltPrcssr","disconnectOutputsGraph","outputChannelMergerNode","activeInputIndexes","disconnectFakeGraph","connectFakeGraph","createNativeAudioWorkletNodeFakerFactory","createNativeAudioWorkletNode","testClonabilityOfAudioWorkletNodeOptions","createNativeAudioWorkletNodeFactory","createAudioWorkletNodeRenderer","processedBufferPromise","renderedNativeAudioWorkletNodeOrGainNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","renderBuffer","nm","createAudioWorkletNodeRendererFactory","getBackupOfflineAudioContext","createGetBackupOfflineAudioContext","setActiveAudioWorkletNodeInputs","createSetActiveAudioWorkletNodeInputs","audioWorkletNodeConstructor","sanitizeAudioWorkletNodeOptions","nativeContextOrBackupOfflineAudioContext","_nativeAudioWorkletNode","_onprocessorerror","_parameters","nativeOnProcessorError","createAudioWorkletNodeConstructor","minimalAudioContextConstructor","createMinimalAudioContextConstructor","createNativeOfflineAudioContext","createCreateNativeOfflineAudioContext","createStartRendering","minimalOfflineAudioContextConstructor","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createMinimalOfflineAudioContextConstructor","offlineAudioContextConstructor","c","createOfflineAudioContextConstructor","isAnyAudioContext","createIsAnyAudioContext","isAnyAudioNode","audioNodeStore","createIsAnyAudioNode","isAnyAudioParam","createIsAnyAudioParam","isAnyOfflineAudioContext","createIsAnyOfflineAudioContext","isSupported","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testConvolverNodeChannelCountSupport","testDomExceptionContrucorSupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","createIsSupportedPromise","createTestAudioBufferCopyChannelMethodsSubarraySupport","audioContext","isAudioContextClosable","createTestAudioContextCloseMethodSupport","isPending","createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","createTestAudioContextOptionsSupport","createTestAudioNodeConnectMethodSupport","isCallingProcess","createTestAudioWorkletProcessorNoOutputsSupport","createTestChannelMergerNodeChannelCountSupport","POSITIVE_INFINITY","createTestConstantSourceNodeAccurateSchedulingSupport","createTestConvolverNodeBufferReassignabilitySupport","createTestConvolverNodeChannelCountSupport","createTestIsSecureContextSupport","createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","stereoPanner","createTestStereoPannerNodeDefaultValueSupport","track","trackOptions","asset","play","newState","loadNextAsset","assetEnvelope","AssetEnvelope","FadingInState","WaitingForAssetState","transition","pause","finish","skip","updateParams","LoadingState","windowScope","timerId","nextStateSecs","timeRemainingMs","trackId","timeRemainingSecs","toFixed","setNextStateTimer","nextStateMs","clearTimer","now","Date","timerApproximateEndingAtMs","clearTimeout","getTime","timeMs","setNextState","warn","setLoadingState","loadingState","params","deadAirSeconds","randomDeadAir","TimedTrackState","fadeInDuration","fadeInSecondsRemaining","fadeIn","pauseAudio","PlayingState","startFadingOutSecs","playAudio","FadingOutState","fadeOutDuration","remainingSeconds","fadeOut","DeadAirState","makeInitialTrackState","GENERIC_ERROR_MSG","baseServerUrl","_jQuery","jQuery","_serverUrl","_authToken","path","contentType","send","post","patch","urlOptions","requestInit","mode","body","headers","queryParams","URLSearchParams","append","stringData","JSON","stringify","search","status","json","tokenStr","ApiClient","PATH","projectId","apiClient","_projectId","_apiClient","project_id","Asset","ASSET_PRIORITIES","freeze","DISCARD","NEUTRAL","LOWEST","NORMAL","HIGHEST","alwaysLowest","allAssetFilter","filters","mixParams","isEmpty","stateParams","ranks","rank","find","r","rankForGeofilteringEligibility","listenerPoint","GeoListenMode","DISABLED","calculateDistanceInMeters","loc1","loc2","anyTagsFilter","listenTagIds","tagId","timedAssetFilter","elapsedSeconds","timedAssetPriority","timedAssetStart","timedAssetEnd","playCount","priorityEnumStr","assetShapeFilter","shape","distanceFixedFilter","geoListenMode","assetLocationPoint","recordingRadius","distanceRangesFilter","getListenMode","minDist","maxDist","locationPoint","timedRepeatFilter","bannedDuration","lastListenTime","dateRangeFilter","startDate","endDate","created","roundwareDefaultFilterChain","anyAssetFilter","assets","timedAssets","filterChain","sortMethods","updateAssets","ordering","assetSorter","AssetSorter","playingTracks","sortAssets","timedAssetLookup","lookupTable","timedAsset","asset_id","activeRegionLowerBound","activeRegionUpperBound","assetUrl","activeRegionLength","mp3Url","cleanAudioURL","decoratedAsset","coordsToPoints","latitude","longitude","file","end","assetDecorationMapper","nextForTrack","filterOutAssets","rankedAssets","rankings","rankingGroups","parseInt","priorityAssets","nextAsset","AssetPool","sortMethodCollection","sortByProjectDefault","sortMethod","active","Audiotrack","sessionId","geoPosition","roundware","_envelopeId","_sessionId","_geoPosition","_roundware","_assetId","session_id","upload","fileName","formData","FormData","getLastCoords","tag_ids","media_type","info","res","detail","updateAssetPool","Envelope","frameworkDefaultCoords","fastGeolocationPositionOptions","enableHighAccuracy","timeout","maximumAge","accurateGeolocationPositionOptions","_navigator","defaultCoords","initialCoords","_initialGeolocationPromise","_lastCoords","geolocation","isEnabled","AUTOMATIC","updateCallback","_geoWatchID","disable","clearWatch","geoUpdateCallback","enable","getCurrentPosition","initialPosition","watchPosition","updatedPosition","waitForInitialGeolocation","GeoPosition","MANUAL","client","listenerLocation","prefetchSpeakerAudio","speakerTracks","playing","_windowScope","_client","_prefetchSpeakerAudio","assetPool","playlist","skipTrack","replayTrack","initContext","buildAudioContext","speakers","getUrlParam","audioTracks","audiotracks","t","Playlist","speakerData","SpeakerTrack","prefetchAudio","toggle","s","Mixer","randomFadeInDuration","randomFadeOutDuration","fadeOutMultiplier","durationLowerBound","durationUpperBound","assetId","minDuration","maxDuration","random","latestStart","urlParamLookup","volumeRange","minvolume","maxvolume","minduration","maxduration","deadAir","mindeadair","maxdeadair","fadeInTime","minfadeintime","maxfadeintime","fadeOutTime","minfadeouttime","maxfadeouttime","repeatRecordings","repeatrecordings","tags","tag_filters","banned_duration","startWithSilence","start_with_silence","fadeOutWhenFiltered","fadeout_when_filtered","fadeOutMultiplierParam","volumeRangeLowerBound","volumeRangeUpperBound","deadAirLowerBound","deadAirUpperBound","fadeInLowerBound","fadeInUpperBound","durationHalfway","fadeOutLowerBound","fadeOutUpperBound","TrackOptions","playlistTrackOptions","elapsedTimeMs","timerSecs","elapsedSecs","_elapsedTimeMs","trackIdMap","trackMap","PlaylistAudiotrack","tracks","playlistLastStartedAt","getMilliseconds","lastStartedAt","elapsedSinceLastStartMs","forTrack","_triggerOnPlayAssets","LOGGABLE_AUDIO_ELEMENT_EVENTS","NEARLY_ZERO","timed_asset_priority","audioElement","Audio","crossOrigin","audioSrc","onAudioError","onAudioEnded","param","setInitialTrackState","evt","timestamp","holdGain","setZeroGain","fadeInDurationSeconds","currentAsset","volume","finalVolume","randomVolume","rampGain","durationSeconds","rampMethod","fadeOutDurationSeconds","newAsset","newProjectId","projectName","requestData","legalAgreement","legal_agreement","recording_radius","maxRecordingLength","max_recording_length","geo_listen_enabled","uiconfig","Project","serverUrl","speakerFilters","assetFilters","user","session","project","speaker","audiotrack","assetUpdateInterval","_speakerFilters","_initialParams","_onUpdateLocation","_onUpdateAssets","_assetData","_onPlayAssets","uiConfig","_speakerData","_audioTracksData","_timedAssetData","_assetFilters","_listenerLocation","_initialOptions","_assetUpdateInterval","_user","User","_session","Session","_project","_speaker","Speaker","_asset","_timed_asset","TimedAsset","_audiotrack","_mixer","updateLocation","currentlyPlayingAssets","enableGeolocation","disableGeolocation","newLocation","promises","audioTracksData","getAssets","getAssetsFromPool","assetFilter","extraParams","loadAssetPool","pool","existingAssets","_lastAssetUpdate","created__gte","toISOString","_assetDataTimer","setInterval","activateMixer","activationParams","firstPlayCallback","kill","clearInterval","update","saveAsset","makeEnvelope","envelope","findTagDescription","tagType","display_items","tag_id","tag_display_text","vote","voteType","vote_type","getAsset","getEnvelope","Roundware","geoListenEnabled","clientSystem","geoListenEnablement","client_system","sortRandomly","assetsArray","rand","sortByWeight","assetA","assetB","weight","sortByLikes","convertLinesToPolygon","speakerId","maxVolume","minVolume","attenuation_border","boundary","attenuationDistance","uri","prefetch","attenuationDistanceKm","attenuationBorderPolygon","attenuationBorderLineString","outerBoundary","currentVolume","outerBoundaryContains","attenuationShapeContains","attenuationRatio","atPoint","calculateVolume","range","buildAudio","audio","cleanURL","isPlaying","opts","updateVolume","newVolume","secondsFromNow","logline","deviceId","clientType","userName","device_id","client_type","responseData","username","authToken","token","MATCHES_URI_SCHEME","RegExp","MATCHES_WAV_FILE","propName","lower","upper","randomInt","UNLOCK_AUDIO_EVENTS","audioCtx","unlock","clean","unlockAudioContext","getHours","padStart","getMinutes","getSeconds","urlStr","paramName","NO_OP","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","prop","toStringTag"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAA+B,sBAAID,IAEnCD,EAA4B,sBAAIC,IARlC,CASGK,MAAM,WACT,O,mDCTAC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIC,EAAS,EAAQ,KAerB,SAASC,EAAKC,GACV,IAAIC,EAAS,CAACC,IAAUA,KAAU,KAAW,KAe7C,OAdAJ,EAAOK,UAAUH,GAAS,SAAUI,GAC5BH,EAAO,GAAKG,EAAM,KAClBH,EAAO,GAAKG,EAAM,IAElBH,EAAO,GAAKG,EAAM,KAClBH,EAAO,GAAKG,EAAM,IAElBH,EAAO,GAAKG,EAAM,KAClBH,EAAO,GAAKG,EAAM,IAElBH,EAAO,GAAKG,EAAM,KAClBH,EAAO,GAAKG,EAAM,OAGnBH,EAEXF,EAAc,QAAIA,EAClBT,EAAQe,QAAUN,G,iCCnClBJ,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIS,EAAc,EAAQ,KAgF1B,SAASC,EAAOC,EAAIC,EAAMC,GACtB,IAAIC,GAAW,EACXF,EAAK,GAAG,KAAOA,EAAKA,EAAKG,OAAS,GAAG,IACrCH,EAAK,GAAG,KAAOA,EAAKA,EAAKG,OAAS,GAAG,KACrCH,EAAOA,EAAKI,MAAM,EAAGJ,EAAKG,OAAS,IAEvC,IAAK,IAAIE,EAAI,EAAGC,EAAIN,EAAKG,OAAS,EAAGE,EAAIL,EAAKG,OAAQG,EAAID,IAAK,CAC3D,IAAIE,EAAKP,EAAKK,GAAG,GACbG,EAAKR,EAAKK,GAAG,GACbI,EAAKT,EAAKM,GAAG,GACbI,EAAKV,EAAKM,GAAG,GAIjB,GAHiBP,EAAG,IAAMQ,EAAKE,GAAMD,GAAMC,EAAKV,EAAG,IAAMW,GAAMX,EAAG,GAAKQ,IAAQ,IAC1EA,EAAKR,EAAG,KAAOU,EAAKV,EAAG,KAAO,IAC9BS,EAAKT,EAAG,KAAOW,EAAKX,EAAG,KAAO,EAE/B,OAAQE,EAEIO,EAAKT,EAAG,IAAOW,EAAKX,EAAG,IACnCA,EAAG,IAAOU,EAAKF,IAAOR,EAAG,GAAKS,IAAQE,EAAKF,GAAMD,IAEjDL,GAAYA,GAGpB,OAAOA,EAjCXrB,EAAQe,QA1CR,SAA+Be,EAAOC,EAASC,GAG3C,QAFgB,IAAZA,IAAsBA,EAAU,KAE/BF,EACD,MAAM,IAAIG,MAAM,qBAEpB,IAAKF,EACD,MAAM,IAAIE,MAAM,uBAEpB,IAAIf,EAAKF,EAAYkB,SAASJ,GAC1BK,EAAOnB,EAAYoB,QAAQL,GAC3BM,EAAOF,EAAKE,KACZ5B,EAAOsB,EAAQtB,KACf6B,EAAQH,EAAKI,YAEjB,GAAI9B,IAA6B,IAsErC,SAAgBS,EAAIT,GAChB,OAAQA,EAAK,IAAMS,EAAG,IAAMT,EAAK,IAAMS,EAAG,IAAMT,EAAK,IAAMS,EAAG,IAAMT,EAAK,IAAMS,EAAG,GAvEtEsB,CAAOtB,EAAIT,GACnB,OAAO,EAGE,YAAT4B,IACAC,EAAQ,CAACA,IAGb,IADA,IAAIG,GAAa,EACRjB,EAAI,EAAGA,EAAIc,EAAMhB,SAAWmB,EAAYjB,IAE7C,GAAIP,EAAOC,EAAIoB,EAAMd,GAAG,GAAIQ,EAAQZ,gBAAiB,CAIjD,IAHA,IAAIsB,GAAS,EACTC,EAAI,EAEDA,EAAIL,EAAMd,GAAGF,SAAWoB,GACvBzB,EAAOC,EAAIoB,EAAMd,GAAGmB,IAAKX,EAAQZ,kBACjCsB,GAAS,GAEbC,IAECD,IACDD,GAAa,GAIzB,OAAOA,I,+BC5BX,SAASG,EAAalC,GAClB,IAAImC,EAAS,CAAER,KAAM,WAerB,OAbAhC,OAAOyC,KAAKpC,GAASqC,SAAQ,SAAUC,GACnC,OAAQA,GACJ,IAAK,OACL,IAAK,aACL,IAAK,WACD,OACJ,QACIH,EAAOG,GAAOtC,EAAQsC,OAIlCH,EAAOI,WAAaC,EAAgBxC,EAAQuC,YAC5CJ,EAAOM,SAAWC,EAAc1C,EAAQyC,UACjCN,EASX,SAASK,EAAgBD,GACrB,IAAIJ,EAAS,GACb,OAAKI,GAGL5C,OAAOyC,KAAKG,GAAYF,SAAQ,SAAUC,GACtC,IAAIzC,EAAQ0C,EAAWD,GACF,iBAAVzC,EACO,OAAVA,EAEAsC,EAAOG,GAAO,KAETK,MAAMC,QAAQ/C,GAEnBsC,EAAOG,GAAOzC,EAAMgD,KAAI,SAAUC,GAC9B,OAAOA,KAKXX,EAAOG,GAAOE,EAAgB3C,GAIlCsC,EAAOG,GAAOzC,KAGfsC,GAxBIA,EA0Df,SAASO,EAAcD,GACnB,IAAIhB,EAAO,CAAEE,KAAMc,EAASd,MAI5B,OAHIc,EAAS1C,OACT0B,EAAK1B,KAAO0C,EAAS1C,MAEH,uBAAlB0C,EAASd,MACTF,EAAKsB,WAAaN,EAASM,WAAWF,KAAI,SAAUG,GAChD,OAAON,EAAcM,MAElBvB,IAEXA,EAAKI,YAAcoB,EAAUR,EAASZ,aAC/BJ,GASX,SAASwB,EAAUC,GACf,IAAIf,EAASe,EACb,MAAyB,iBAAdf,EAAO,GACPA,EAAOtB,QAEXsB,EAAOU,KAAI,SAAUzC,GACxB,OAAO6C,EAAU7C,MA1JzBT,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IA6JtDP,EAAQe,QAhJR,SAAeL,GACX,IAAKA,EACD,MAAM,IAAIuB,MAAM,uBAEpB,OAAQvB,EAAQ2B,MACZ,IAAK,UACD,OAAOO,EAAalC,GACxB,IAAK,oBACD,OAiFZ,SAAgCA,GAC5B,IAAImC,EAAS,CAAER,KAAM,qBAerB,OAbAhC,OAAOyC,KAAKpC,GAASqC,SAAQ,SAAUC,GACnC,OAAQA,GACJ,IAAK,OACL,IAAK,WACD,OACJ,QACIH,EAAOG,GAAOtC,EAAQsC,OAIlCH,EAAOgB,SAAWnD,EAAQmD,SAASN,KAAI,SAAUO,GAC7C,OAAOlB,EAAakB,MAEjBjB,EAjGQkB,CAAuBrD,GAClC,IAAK,QACL,IAAK,aACL,IAAK,UACL,IAAK,aACL,IAAK,kBACL,IAAK,eACL,IAAK,qBACD,OAAO0C,EAAc1C,GACzB,QACI,MAAM,IAAIuB,MAAM,2B,gCC/B5B5B,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIS,EAAc,EAAQ,KACtBgD,EAAY,EAAQ,KAqCxBhE,EAAQe,QAZR,SAAkBkD,EAAMC,EAAIlC,QACR,IAAZA,IAAsBA,EAAU,IACpC,IAAImC,EAAenD,EAAYkB,SAAS+B,GACpCG,EAAepD,EAAYkB,SAASgC,GACpCG,EAAOL,EAAUM,iBAAiBF,EAAa,GAAKD,EAAa,IACjEI,EAAOP,EAAUM,iBAAiBF,EAAa,GAAKD,EAAa,IACjEK,EAAOR,EAAUM,iBAAiBH,EAAa,IAC/CM,EAAOT,EAAUM,iBAAiBF,EAAa,IAC/CM,EAAIC,KAAKC,IAAID,KAAKE,IAAIR,EAAO,GAAI,GACjCM,KAAKC,IAAID,KAAKE,IAAIN,EAAO,GAAI,GAAKI,KAAKG,IAAIN,GAAQG,KAAKG,IAAIL,GAChE,OAAOT,EAAUe,gBAAgB,EAAIJ,KAAKK,MAAML,KAAKM,KAAKP,GAAIC,KAAKM,KAAK,EAAIP,IAAK1C,EAAQkD,S,+BC8D7F,SAASpB,EAAQ3B,EAAMc,EAAYjB,QACf,IAAZA,IAAsBA,EAAU,IACpC,IAAImD,EAAO,CAAE9C,KAAM,WASnB,OARmB,IAAfL,EAAQoD,IAAYpD,EAAQoD,MAC5BD,EAAKC,GAAKpD,EAAQoD,IAElBpD,EAAQvB,OACR0E,EAAK1E,KAAOuB,EAAQvB,MAExB0E,EAAKlC,WAAaA,GAAc,GAChCkC,EAAKhC,SAAWhB,EACTgD,EAqDX,SAASrD,EAAMS,EAAaU,EAAYjB,GAEpC,QADgB,IAAZA,IAAsBA,EAAU,KAC/BO,EACD,MAAM,IAAIN,MAAM,2BAEpB,IAAKoB,MAAMC,QAAQf,GACf,MAAM,IAAIN,MAAM,gCAEpB,GAAIM,EAAYjB,OAAS,EACrB,MAAM,IAAIW,MAAM,+CAEpB,IAAKoD,EAAS9C,EAAY,MAAQ8C,EAAS9C,EAAY,IACnD,MAAM,IAAIN,MAAM,oCAMpB,OAAO6B,EAJI,CACPzB,KAAM,QACNE,YAAaA,GAEIU,EAAYjB,GA6CrC,SAASD,EAAQQ,EAAaU,EAAYjB,QACtB,IAAZA,IAAsBA,EAAU,IACpC,IAAK,IAAIsD,EAAK,EAAGC,EAAgBhD,EAAa+C,EAAKC,EAAcjE,OAAQgE,IAAM,CAC3E,IAAInE,EAAOoE,EAAcD,GACzB,GAAInE,EAAKG,OAAS,EACd,MAAM,IAAIW,MAAM,+DAEpB,IAAK,IAAIR,EAAI,EAAGA,EAAIN,EAAKA,EAAKG,OAAS,GAAGA,OAAQG,IAE9C,GAAIN,EAAKA,EAAKG,OAAS,GAAGG,KAAON,EAAK,GAAGM,GACrC,MAAM,IAAIQ,MAAM,+CAQ5B,OAAO6B,EAJI,CACPzB,KAAM,UACNE,YAAaA,GAEIU,EAAYjB,GA6CrC,SAASwD,EAAWjD,EAAaU,EAAYjB,GAEzC,QADgB,IAAZA,IAAsBA,EAAU,IAChCO,EAAYjB,OAAS,EACrB,MAAM,IAAIW,MAAM,yDAMpB,OAAO6B,EAJI,CACPzB,KAAM,aACNE,YAAaA,GAEIU,EAAYjB,GAmDrC,SAASyD,EAAkB5B,EAAU7B,QACjB,IAAZA,IAAsBA,EAAU,IACpC,IAAI0D,EAAK,CAAErD,KAAM,qBAQjB,OAPIL,EAAQoD,KACRM,EAAGN,GAAKpD,EAAQoD,IAEhBpD,EAAQvB,OACRiF,EAAGjF,KAAOuB,EAAQvB,MAEtBiF,EAAG7B,SAAWA,EACP6B,EAoBX,SAASC,EAAgBpD,EAAaU,EAAYjB,GAM9C,YALgB,IAAZA,IAAsBA,EAAU,IAK7B8B,EAJI,CACPzB,KAAM,kBACNE,YAAaA,GAEIU,EAAYjB,GAoBrC,SAAS4D,EAAWrD,EAAaU,EAAYjB,GAMzC,YALgB,IAAZA,IAAsBA,EAAU,IAK7B8B,EAJI,CACPzB,KAAM,aACNE,YAAaA,GAEIU,EAAYjB,GAqBrC,SAAS6D,EAAatD,EAAaU,EAAYjB,GAM3C,YALgB,IAAZA,IAAsBA,EAAU,IAK7B8B,EAJI,CACPzB,KAAM,eACNE,YAAaA,GAEIU,EAAYjB,GA8DrC,SAAS+C,EAAgBe,EAASZ,QAChB,IAAVA,IAAoBA,EAAQ,cAChC,IAAIa,EAAS/F,EAAQgG,QAAQd,GAC7B,IAAKa,EACD,MAAM,IAAI9D,MAAMiD,EAAQ,qBAE5B,OAAOY,EAAUC,EAarB,SAASE,EAAgBC,EAAUhB,QACjB,IAAVA,IAAoBA,EAAQ,cAChC,IAAIa,EAAS/F,EAAQgG,QAAQd,GAC7B,IAAKa,EACD,MAAM,IAAI9D,MAAMiD,EAAQ,qBAE5B,OAAOgB,EAAWH,EAwCtB,SAASI,EAAiBL,GAEtB,OADcA,GAAW,EAAInB,KAAKyB,IAChB,IAAOzB,KAAKyB,GAqElC,SAASf,EAASgB,GACd,OAAQC,MAAMD,IAAgB,OAARA,IAAiBhD,MAAMC,QAAQ+C,GA7nBzDhG,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IAUtDP,EAAQuG,YAAc,UAOtBvG,EAAQgG,QAAU,CACdQ,YAAmC,IAAtBxG,EAAQuG,YACrBE,YAAmC,IAAtBzG,EAAQuG,YACrBG,QAAS1G,EAAQuG,YAAc,OAC/BI,KAA4B,QAAtB3G,EAAQuG,YACdK,OAA8B,MAAtB5G,EAAQuG,YAChBM,WAAY7G,EAAQuG,YAAc,IAClCO,WAAY9G,EAAQuG,YAAc,IAClCQ,OAAQ/G,EAAQuG,YAChBS,OAAQhH,EAAQuG,YAChBU,MAAOjH,EAAQuG,YAAc,SAC7BW,YAAmC,IAAtBlH,EAAQuG,YACrBY,YAAmC,IAAtBnH,EAAQuG,YACrBa,cAAepH,EAAQuG,YAAc,KACrCT,QAAS,EACTuB,MAAOrH,EAAQuG,YAAc,QAQjCvG,EAAQsH,aAAe,CACnBd,YAAa,IACbC,YAAa,IACbC,QAAS,EAAI,OACbC,KAAM,QACNC,OAAQ,MACRC,WAAY,KACZC,WAAY,KACZC,OAAQ,EACRC,OAAQ,EACRC,MAAO,EAAI,SACXC,YAAa,IACbC,YAAa,IACbC,cAAe,EAAI,KACnBtB,QAAS,EAAI9F,EAAQuG,YACrBc,MAAO,EAAI,QAQfrH,EAAQuH,YAAc,CAClBC,MAAO,UACPhB,YAAa,IACbC,YAAa,IACbE,KAAM,aACNc,SAAU,KACVb,OAAQ,eACRC,WAAY,KACZC,WAAY,KACZC,OAAQ,EACRC,OAAQ,EACRC,MAAO,OACPC,YAAa,IACbC,YAAa,IACbE,MAAO,aAmCXrH,EAAQ8D,QAAUA,EAmClB9D,EAAQmD,SAnBR,SAAkBd,EAAME,EAAamF,GAEjC,YADiB,IAAbA,IAAuBA,EAAW,IAC9BrF,GACJ,IAAK,QACD,OAAOP,EAAMS,GAAaY,SAC9B,IAAK,aACD,OAAOqC,EAAWjD,GAAaY,SACnC,IAAK,UACD,OAAOpB,EAAQQ,GAAaY,SAChC,IAAK,aACD,OAAOyC,EAAWrD,GAAaY,SACnC,IAAK,kBACD,OAAOwC,EAAgBpD,GAAaY,SACxC,IAAK,eACD,OAAO0C,EAAatD,GAAaY,SACrC,QACI,MAAM,IAAIlB,MAAMI,EAAO,iBAuCnCrC,EAAQ8B,MAAQA,EA2BhB9B,EAAQ2H,OANR,SAAgBpF,EAAaU,EAAYjB,GAErC,YADgB,IAAZA,IAAsBA,EAAU,IAC7ByD,EAAkBlD,EAAYgB,KAAI,SAAUK,GAC/C,OAAO9B,EAAM8B,EAAQX,MACrBjB,IAsCRhC,EAAQ+B,QAAUA,EAyBlB/B,EAAQ4H,SANR,SAAkBrF,EAAaU,EAAYjB,GAEvC,YADgB,IAAZA,IAAsBA,EAAU,IAC7ByD,EAAkBlD,EAAYgB,KAAI,SAAUK,GAC/C,OAAO7B,EAAQ6B,EAAQX,MACvBjB,IA+BRhC,EAAQwF,WAAaA,EA0BrBxF,EAAQ6H,YANR,SAAqBtF,EAAaU,EAAYjB,GAE1C,YADgB,IAAZA,IAAsBA,EAAU,IAC7ByD,EAAkBlD,EAAYgB,KAAI,SAAUK,GAC/C,OAAO4B,EAAW5B,EAAQX,MAC1BjB,IAqCRhC,EAAQyF,kBAAoBA,EA0B5BzF,EAAQ2F,gBAAkBA,EA0B1B3F,EAAQ4F,WAAaA,EA2BrB5F,EAAQ6F,aAAeA,EA2BvB7F,EAAQ8H,mBARR,SAA4BrE,EAAYR,EAAYjB,GAMhD,YALgB,IAAZA,IAAsBA,EAAU,IAK7B8B,EAJI,CACPzB,KAAM,qBACNoB,WAAYA,GAEKR,EAAYjB,IAwBrChC,EAAQ+H,MARR,SAAe1B,EAAK2B,GAEhB,QADkB,IAAdA,IAAwBA,EAAY,GACpCA,KAAeA,GAAa,GAC5B,MAAM,IAAI/F,MAAM,uCAEpB,IAAIgG,EAAatD,KAAKC,IAAI,GAAIoD,GAAa,GAC3C,OAAOrD,KAAKoD,MAAM1B,EAAM4B,GAAcA,GAqB1CjI,EAAQ+E,gBAAkBA,EAmB1B/E,EAAQiG,gBAAkBA,EAc1BjG,EAAQkI,gBAHR,SAAyBhC,EAAUhB,GAC/B,OAAOiB,EAAiBF,EAAgBC,EAAUhB,KAkBtDlF,EAAQmI,iBAPR,SAA0BC,GACtB,IAAIC,EAAQD,EAAU,IAItB,OAHIC,EAAQ,IACRA,GAAS,KAENA,GAcXrI,EAAQmG,iBAAmBA,EAY3BnG,EAAQsE,iBAJR,SAA0BoC,GAEtB,OADcA,EAAU,IACN/B,KAAKyB,GAAM,KAoBjCpG,EAAQsI,cARR,SAAuBhH,EAAQiH,EAAcC,GAGzC,QAFqB,IAAjBD,IAA2BA,EAAe,mBAC5B,IAAdC,IAAwBA,EAAY,gBAClClH,GAAU,GACZ,MAAM,IAAIW,MAAM,oCAEpB,OAAO8C,EAAgBkB,EAAgB3E,EAAQiH,GAAeC,IA2BlExI,EAAQyI,YAhBR,SAAqBC,EAAMH,EAAcC,GAGrC,QAFqB,IAAjBD,IAA2BA,EAAe,eAC5B,IAAdC,IAAwBA,EAAY,gBAClCE,GAAQ,GACV,MAAM,IAAIzG,MAAM,kCAEpB,IAAI0G,EAAc3I,EAAQuH,YAAYgB,GACtC,IAAKI,EACD,MAAM,IAAI1G,MAAM,0BAEpB,IAAI2G,EAAc5I,EAAQuH,YAAYiB,GACtC,IAAKI,EACD,MAAM,IAAI3G,MAAM,uBAEpB,OAAQyG,EAAOC,EAAeC,GAiBlC5I,EAAQqF,SAAWA,EAenBrF,EAAQ6I,SAHR,SAAkBC,GACd,QAASA,GAASA,EAAMC,cAAgB1I,QAwC5CL,EAAQgJ,aAhBR,SAAsBvI,GAClB,IAAKA,EACD,MAAM,IAAIwB,MAAM,oBAEpB,IAAKoB,MAAMC,QAAQ7C,GACf,MAAM,IAAIwB,MAAM,yBAEpB,GAAoB,IAAhBxB,EAAKa,QAAgC,IAAhBb,EAAKa,OAC1B,MAAM,IAAIW,MAAM,2CAEpBxB,EAAKsC,SAAQ,SAAUsD,GACnB,IAAKhB,EAASgB,GACV,MAAM,IAAIpE,MAAM,sCAkC5BjC,EAAQiJ,WARR,SAAoB7D,GAChB,IAAKA,EACD,MAAM,IAAInD,MAAM,kBAEpB,IAAiD,IAA7C,CAAC,SAAU,UAAUiH,eAAe9D,GACpC,MAAM,IAAInD,MAAM,qC,iCC/sBxB5B,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIyD,EAAY,EAAQ,KAmCxBhE,EAAQkC,SAtBR,SAAkBpB,GACd,IAAKA,EACD,MAAM,IAAImB,MAAM,qBAEpB,IAAKoB,MAAMC,QAAQxC,GAAQ,CACvB,GAAmB,YAAfA,EAAMuB,MACa,OAAnBvB,EAAMqC,UACkB,UAAxBrC,EAAMqC,SAASd,KACf,OAAOvB,EAAMqC,SAASZ,YAE1B,GAAmB,UAAfzB,EAAMuB,KACN,OAAOvB,EAAMyB,YAGrB,GAAIc,MAAMC,QAAQxC,IACdA,EAAMQ,QAAU,IACf+B,MAAMC,QAAQxC,EAAM,MACpBuC,MAAMC,QAAQxC,EAAM,IACrB,OAAOA,EAEX,MAAM,IAAImB,MAAM,uDAiCpBjC,EAAQmJ,UAlBR,SAAmBvF,GACf,GAAIP,MAAMC,QAAQM,GACd,OAAOA,EAGX,GAAoB,YAAhBA,EAAOvB,MACP,GAAwB,OAApBuB,EAAOT,SACP,OAAOS,EAAOT,SAASZ,iBAK3B,GAAIqB,EAAOrB,YACP,OAAOqB,EAAOrB,YAGtB,MAAM,IAAIN,MAAM,gEAqBpBjC,EAAQoJ,eAXR,SAASA,EAAe7G,GACpB,GAAIA,EAAYjB,OAAS,GACrB0C,EAAUqB,SAAS9C,EAAY,KAC/ByB,EAAUqB,SAAS9C,EAAY,IAC/B,OAAO,EAEX,GAAIc,MAAMC,QAAQf,EAAY,KAAOA,EAAY,GAAGjB,OAChD,OAAO8H,EAAe7G,EAAY,IAEtC,MAAM,IAAIN,MAAM,0CAyBpBjC,EAAQqJ,YAbR,SAAqB9I,EAAO8B,EAAMiH,GAC9B,IAAKjH,IAASiH,EACV,MAAM,IAAIrH,MAAM,0BAEpB,IAAK1B,GAASA,EAAM8B,OAASA,EACzB,MAAM,IAAIJ,MAAM,oBACZqH,EACA,eACAjH,EACA,WACA9B,EAAM8B,OAiClBrC,EAAQuJ,UAnBR,SAAmBzF,EAASzB,EAAMiH,GAC9B,IAAKxF,EACD,MAAM,IAAI7B,MAAM,qBAEpB,IAAKqH,EACD,MAAM,IAAIrH,MAAM,gCAEpB,IAAK6B,GAA4B,YAAjBA,EAAQzB,OAAuByB,EAAQX,SACnD,MAAM,IAAIlB,MAAM,oBAAsBqH,EAAO,oCAEjD,IAAKxF,EAAQX,UAAYW,EAAQX,SAASd,OAASA,EAC/C,MAAM,IAAIJ,MAAM,oBACZqH,EACA,eACAjH,EACA,WACAyB,EAAQX,SAASd,OAuC7BrC,EAAQwJ,aAzBR,SAAsB/D,EAAmBpD,EAAMiH,GAC3C,IAAK7D,EACD,MAAM,IAAIxD,MAAM,+BAEpB,IAAKqH,EACD,MAAM,IAAIrH,MAAM,mCAEpB,IAAKwD,GAAgD,sBAA3BA,EAAkBpD,KACxC,MAAM,IAAIJ,MAAM,oBAAsBqH,EAAO,gCAEjD,IAAK,IAAIhE,EAAK,EAAGmE,EAAKhE,EAAkB5B,SAAUyB,EAAKmE,EAAGnI,OAAQgE,IAAM,CACpE,IAAIxB,EAAU2F,EAAGnE,GACjB,IAAKxB,GAA4B,YAAjBA,EAAQzB,OAAuByB,EAAQX,SACnD,MAAM,IAAIlB,MAAM,oBAAsBqH,EAAO,oCAEjD,IAAKxF,EAAQX,UAAYW,EAAQX,SAASd,OAASA,EAC/C,MAAM,IAAIJ,MAAM,oBACZqH,EACA,eACAjH,EACA,WACAyB,EAAQX,SAASd,QA6BjCrC,EAAQoC,QANR,SAAiB1B,GACb,MAAqB,YAAjBA,EAAQ2B,KACD3B,EAAQyC,SAEZzC,GAiCXV,EAAQ0J,QAZR,SAAiBhJ,EAASiJ,GACtB,MAAqB,sBAAjBjJ,EAAQ2B,KACD,oBAEU,uBAAjB3B,EAAQ2B,KACD,qBAEU,YAAjB3B,EAAQ2B,MAA2C,OAArB3B,EAAQyC,SAC/BzC,EAAQyC,SAASd,KAErB3B,EAAQ2B,O,iCCrOnB,IAAIuH,EAAmBxJ,MAAQA,KAAKwJ,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDxJ,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIwJ,EAASH,EAAgB,EAAQ,MACjC5I,EAAc,EAAQ,KACtBgD,EAAY,EAAQ,KACpBgG,EAAUJ,EAAgB,EAAQ,MAuDtC,SAASK,EAAoBC,EAAMjH,EAAYkH,EAAcC,GACzDnH,EAAaA,IAEO,YAAdiH,EAAK7H,KACD6H,EAAKjH,WACL,IACV,IAAId,EAAOnB,EAAYoB,QAAQ8H,GAC3BtG,EAASzB,EAAKI,YACdF,EAAOF,EAAKE,KAChB,IAAKuB,EAAOtC,OACR,MAAM,IAAIW,MAAM,iCACpB,OAAQI,GACJ,IAAK,aAGD,OAFI8H,IACAvG,EAASyG,EAAmBzG,IACzBI,EAAUjC,QAAQ,CAAC6B,GAASX,GACvC,IAAK,kBACD,IAAIqH,EAAc,GACdC,EAAc,EAkBlB,OAjBA3G,EAAOb,SAAQ,SAAUjC,GAIrB,GAHIqJ,IACArJ,EAAQuJ,EAAmBvJ,IAE3BsJ,EAAa,CACb,IAAI1B,GA4ChB8B,GADe/J,EA3CsBsJ,EAAOhJ,QAAQiD,EAAUwB,WAAW1E,KA4C7D,GACZ2J,EAAQhK,EAAK,GACbiK,EAAOjK,EAAK,GACZkK,EAAQlK,EAAK,GACVkE,KAAKiG,IAAIJ,EAAOE,GAAQ/F,KAAKiG,IAAIH,EAAQE,IA/C5BjC,EAAO6B,GACPD,EAAYO,QAAQ/J,GACpByJ,EAAc7B,GAGd4B,EAAYQ,KAAKhK,QAGrBwJ,EAAYQ,KAAKhK,GAkCrC,IAAuBL,EACf+J,EACAC,EACAC,EACAC,KAnCW3G,EAAUjC,QAAQuI,EAAarH,GAC1C,QACI,MAAM,IAAIhB,MAAM,iBAAmBI,EAAO,sBAUtD,SAASgI,EAAmBzG,GACxB,IAAImH,EAAQnH,EAAO,GACfoH,EAAKD,EAAM,GACXE,EAAKF,EAAM,GACXG,EAAOtH,EAAOA,EAAOtC,OAAS,GAC9B6J,EAAKD,EAAK,GACVE,EAAKF,EAAK,GAId,OAHIF,IAAOG,GAAMF,IAAOG,GACpBxH,EAAOkH,KAAKC,GAETnH,EAgBX5D,EAAQe,QA7GR,SAAuBsK,EAAOrJ,QACV,IAAZA,IAAsBA,EAAU,IAEpC,IAAIiB,EAAajB,EAAQiB,WACrBkH,EAAenI,EAAQmI,aACvBC,EAAcpI,EAAQoI,YACtBkB,EAAStJ,EAAQsJ,OAQrB,OANAnB,OAAgCoB,IAAjBpB,GAA6BA,EAC5CC,OAA8BmB,IAAhBnB,GAA4BA,GAC1CkB,OAAoBC,IAAXD,GAAuBA,KAE5BD,EAAQrB,EAAQjJ,QAAQsK,IAEpBA,EAAMhJ,MACV,IAAK,oBACD,IAAIuB,EAAS,GAIb,OAHAyH,EAAMxH,SAASd,SAAQ,SAAUmH,GAC7BtG,EAAOkH,KAAK9J,EAAYmI,UAAUc,EAAoBC,EAAM,GAAIC,EAAcC,QAE3EpG,EAAU6B,aAAajC,EAAQX,GAC1C,QACI,OAAOgH,EAAoBoB,EAAOpI,EAAYkH,EAAcC,M,iCChDxE/J,OAAOC,eAAeN,EAAS,aAA/B,CAA+CO,OAAO,IAEtD,IAAIiL,EAAU,EAAQ,KAmCtB,SAAS3K,EAAUH,EAAS+K,EAAUC,GAEpC,GAAgB,OAAZhL,EA4BJ,IA3BA,IAAIe,EACFkB,EACAgJ,EACAxI,EACAyI,EACAhI,EACAiI,EAGAC,EAFAC,EAAa,EACbC,EAAa,EAEb3J,EAAO3B,EAAQ2B,KACf4J,EAA+B,sBAAT5J,EACtB6J,EAAqB,YAAT7J,EACZ8J,EAAOF,EAAsBvL,EAAQmD,SAASvC,OAAS,EAchD8K,EAAe,EAAGA,EAAeD,EAAMC,IAAgB,CAS9DR,GAHAE,KALAD,EAA0BI,EACtBvL,EAAQmD,SAASuI,GAAcjJ,SAC/B+I,EACAxL,EAAQyC,SACRzC,IAEiC,uBAAjCmL,EAAwBxJ,MAGxBwJ,EAAwBpI,WAAWnC,OACnC,EAEJ,IAAK,IAAI+K,EAAY,EAAGA,EAAYT,EAAOS,IAAa,CACtD,IAAIC,EAAoB,EACpBC,EAAgB,EAMpB,GAAiB,QALjBpJ,EAAW2I,EACPD,EAAwBpI,WAAW4I,GACnCR,GAGJ,CACAjI,EAAST,EAASZ,YAClB,IAAIiK,EAAWrJ,EAASd,KAQxB,OANA0J,GACEL,GACc,YAAbc,GAAuC,iBAAbA,EAEvB,EADA,EAGEA,GACN,KAAK,KACH,MACF,IAAK,QACH,IAOQ,IANNf,EACE7H,EACAoI,EACAI,EACAE,EACAC,GAGF,OAAO,EACTP,IACAM,IACA,MACF,IAAK,aACL,IAAK,aACH,IAAK7K,EAAI,EAAGA,EAAImC,EAAOtC,OAAQG,IAAK,CAClC,IAOQ,IANNgK,EACE7H,EAAOnC,GACPuK,EACAI,EACAE,EACAC,GAGF,OAAO,EACTP,IACiB,eAAbQ,GAA2BF,IAEhB,eAAbE,GAA2BF,IAC/B,MACF,IAAK,UACL,IAAK,kBACH,IAAK7K,EAAI,EAAGA,EAAImC,EAAOtC,OAAQG,IAAK,CAClC,IAAKkB,EAAI,EAAGA,EAAIiB,EAAOnC,GAAGH,OAASyK,EAAYpJ,IAAK,CAClD,IAOQ,IANN8I,EACE7H,EAAOnC,GAAGkB,GACVqJ,EACAI,EACAE,EACAC,GAGF,OAAO,EACTP,IAEe,oBAAbQ,GAAgCF,IACnB,YAAbE,GAAwBD,IAEb,YAAbC,GAAwBF,IAC5B,MACF,IAAK,eACH,IAAK7K,EAAI,EAAGA,EAAImC,EAAOtC,OAAQG,IAAK,CAElC,IADA8K,EAAgB,EACX5J,EAAI,EAAGA,EAAIiB,EAAOnC,GAAGH,OAAQqB,IAAK,CACrC,IAAKgJ,EAAI,EAAGA,EAAI/H,EAAOnC,GAAGkB,GAAGrB,OAASyK,EAAYJ,IAAK,CACrD,IAOQ,IANNF,EACE7H,EAAOnC,GAAGkB,GAAGgJ,GACbK,EACAI,EACAE,EACAC,GAGF,OAAO,EACTP,IAEFO,IAEFD,IAEF,MACF,IAAK,qBACH,IAAK7K,EAAI,EAAGA,EAAI0B,EAASM,WAAWnC,OAAQG,IAC1C,IAEE,IADAZ,EAAUsC,EAASM,WAAWhC,GAAIgK,EAAUC,GAG5C,OAAO,EACX,MACF,QACE,MAAM,IAAIzJ,MAAM,6BA8G1B,SAASwK,EAAS/L,EAAS+K,GACzB,IAAIjK,EACJ,OAAQd,EAAQ2B,MACd,IAAK,oBACH,IAAKb,EAAI,EAAGA,EAAId,EAAQmD,SAASvC,SACqB,IAAhDmK,EAAS/K,EAAQmD,SAASrC,GAAGyB,WAAYzB,GADNA,KAGzC,MACF,IAAK,UACHiK,EAAS/K,EAAQuC,WAAY,IAuFnC,SAASyJ,EAAYhM,EAAS+K,GAC5B,GAAqB,YAAjB/K,EAAQ2B,KACVoJ,EAAS/K,EAAS,QACb,GAAqB,sBAAjBA,EAAQ2B,KACjB,IAAK,IAAIb,EAAI,EAAGA,EAAId,EAAQmD,SAASvC,SACM,IAArCmK,EAAS/K,EAAQmD,SAASrC,GAAIA,GADSA,MAiHjD,SAASmL,EAASjM,EAAS+K,GACzB,IAAIjK,EACFC,EACAiC,EACAP,EACAyI,EACAC,EACAC,EACAc,EACAC,EACAC,EACAV,EAAe,EACfH,EAAuC,sBAAjBvL,EAAQ2B,KAC9B6J,EAA6B,YAAjBxL,EAAQ2B,KACpB8J,EAAOF,EAAsBvL,EAAQmD,SAASvC,OAAS,EAczD,IAAKE,EAAI,EAAGA,EAAI2K,EAAM3K,IAAK,CA4BzB,IA3BAqK,EAA0BI,EACtBvL,EAAQmD,SAASrC,GAAG2B,SACpB+I,EACAxL,EAAQyC,SACRzC,EACJkM,EAAoBX,EAChBvL,EAAQmD,SAASrC,GAAGyB,WACpBiJ,EACAxL,EAAQuC,WACR,GACJ4J,EAAcZ,EACVvL,EAAQmD,SAASrC,GAAGf,KACpByL,EACAxL,EAAQD,UACR8K,EACJuB,EAAYb,EACRvL,EAAQmD,SAASrC,GAAG4D,GACpB8G,EACAxL,EAAQ0E,QACRmG,EAIJK,GAHAE,IAAuBD,GACc,uBAAjCA,EAAwBxJ,MAGxBwJ,EAAwBpI,WAAWnC,OACnC,EAECoC,EAAI,EAAGA,EAAIkI,EAAOlI,IAMrB,GAAiB,QALjBP,EAAW2I,EACPD,EAAwBpI,WAAWC,GACnCmI,GAgBJ,OAAQ1I,EAASd,MACf,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,UACL,IAAK,kBACL,IAAK,eACH,IAOQ,IANNoJ,EACEtI,EACAiJ,EACAQ,EACAC,EACAC,GAGF,OAAO,EACT,MAEF,IAAK,qBACH,IAAKrL,EAAI,EAAGA,EAAI0B,EAASM,WAAWnC,OAAQG,IAC1C,IAOQ,IANNgK,EACEtI,EAASM,WAAWhC,GACpB2K,EACAQ,EACAC,EACAC,GAGF,OAAO,EAEX,MAEF,QACE,MAAM,IAAI7K,MAAM,8BA/ClB,IAOQ,IANNwJ,EACE,KACAW,EACAQ,EACAC,EACAC,GAGF,OAAO,EA0CbV,KA2GJ,SAASW,EAAYrM,EAAS+K,GAC5BkB,EAASjM,GAAS,SAAUyC,EAAUiJ,EAAcnJ,EAAYxC,EAAM2E,GAEpE,IAiBIoH,EAjBAnK,EAAoB,OAAbc,EAAoB,KAAOA,EAASd,KAC/C,OAAQA,GACN,KAAK,KACL,IAAK,QACL,IAAK,aACL,IAAK,UACH,OAKQ,IAJNoJ,EACED,EAAQ1H,QAAQX,EAAUF,EAAY,CAAExC,KAAMA,EAAM2E,GAAIA,IACxDgH,EACA,SAIJ,EAMJ,OAAQ/J,GACN,IAAK,aACHmK,EAAW,QACX,MACF,IAAK,kBACHA,EAAW,aACX,MACF,IAAK,eACHA,EAAW,UAIf,IACE,IAAIF,EAAoB,EACxBA,EAAoBnJ,EAASZ,YAAYjB,OACzCgL,IACA,CACA,IACInK,EAAO,CACTE,KAAMmK,EACNjK,YAHeY,EAASZ,YAAY+J,IAKtC,IAEE,IADAb,EAASD,EAAQ1H,QAAQ3B,EAAMc,GAAamJ,EAAcE,GAG1D,OAAO,MA6Gf,SAASU,EAAYtM,EAAS+K,GAC5BsB,EAAYrM,GAAS,SAAUoD,EAASsI,EAAcE,GACpD,IAAIW,EAAe,EAGnB,GAAKnJ,EAAQX,SAAb,CAEA,IAAId,EAAOyB,EAAQX,SAASd,KAC5B,GAAa,UAATA,GAA6B,eAATA,EAAxB,CAGA,IAAI6K,EACAC,EAAuB,EACvBC,EAAqB,EACrBC,EAAgB,EACpB,OAyCQ,IAxCNxM,EACEiD,GACA,SACEwJ,EACAtB,EACAuB,EACAC,EACAjB,GAGA,QACqBhB,IAAnB2B,GACAd,EAAee,GACfK,EAAsBJ,GACtBb,EAAgBc,EAOhB,OALAH,EAAiBI,EACjBH,EAAuBf,EACvBgB,EAAqBI,EACrBH,EAAgBd,OAChBU,EAAe,GAGjB,IAAIQ,EAAiBjC,EAAQhG,WAC3B,CAAC0H,EAAgBI,GACjBxJ,EAAQb,YAEV,IAOQ,IANNwI,EACEgC,EACArB,EACAE,EACAC,EACAU,GAGF,OAAO,EACTA,IACAC,EAAiBI,WAvCvB,OA+JJ,SAASI,EAAShN,EAAS+K,GAEzB,IAAK/K,EAAS,MAAM,IAAIuB,MAAM,uBAE9B8K,EAAYrM,GAAS,SAAUoD,EAASsI,EAAcE,GACpD,GAAyB,OAArBxI,EAAQX,SAAZ,CACA,IAAId,EAAOyB,EAAQX,SAASd,KACxBuB,EAASE,EAAQX,SAASZ,YAC9B,OAAQF,GACN,IAAK,aACH,IAAiE,IAA7DoJ,EAAS3H,EAASsI,EAAcE,EAAmB,EAAG,GACxD,OAAO,EACT,MACF,IAAK,UACH,IACE,IAAIC,EAAgB,EACpBA,EAAgB3I,EAAOtC,OACvBiL,IAEA,IAMQ,IALNd,EACED,EAAQhG,WAAW5B,EAAO2I,GAAgBzI,EAAQb,YAClDmJ,EACAE,EACAC,GAGF,OAAO,OA0TnBvM,EAAQa,UAAYA,EACpBb,EAAQ2N,YA1oCR,SAAqBjN,EAAS+K,EAAUmC,EAAclC,GACpD,IAAImC,EAAgBD,EAwBpB,OAvBA/M,EACEH,GACA,SACE4M,EACAtB,EACAI,EACAE,EACAC,GAGEsB,EADiB,IAAf7B,QAAqCT,IAAjBqC,EACNN,EAEA7B,EACdoC,EACAP,EACAtB,EACAI,EACAE,EACAC,KAGNb,GAEKmC,GAknCT7N,EAAQyM,SAAWA,EACnBzM,EAAQ8N,WA5hCR,SAAoBpN,EAAS+K,EAAUmC,GACrC,IAAIC,EAAgBD,EAOpB,OANAnB,EAAS/L,GAAS,SAAUqN,EAAmB3B,GAE3CyB,EADmB,IAAjBzB,QAAuCb,IAAjBqC,EACRG,EAEAtC,EAASoC,EAAeE,EAAmB3B,MAExDyB,GAqhCT7N,EAAQ0M,YAAcA,EACtB1M,EAAQgO,cAp8BR,SAAuBtN,EAAS+K,EAAUmC,GACxC,IAAIC,EAAgBD,EAMpB,OALAlB,EAAYhM,GAAS,SAAUuN,EAAgB7B,GAE3CyB,EADmB,IAAjBzB,QAAuCb,IAAjBqC,EACRK,EACGxC,EAASoC,EAAeI,EAAgB7B,MAExDyB,GA87BT7N,EAAQkO,SA56BR,SAAkBxN,GAChB,IAAIkD,EAAS,GAIb,OAHA/C,EAAUH,GAAS,SAAUI,GAC3B8C,EAAOkH,KAAKhK,MAEP8C,GAw6BT5D,EAAQ2M,SAAWA,EACnB3M,EAAQmO,WAhuBR,SAAoBzN,EAAS+K,EAAUmC,GACrC,IAAIC,EAAgBD,EAuBpB,OAtBAjB,EACEjM,GACA,SACE0N,EACAhC,EACAQ,EACAC,EACAC,GAGEe,EADmB,IAAjBzB,QAAuCb,IAAjBqC,EACRQ,EAEA3C,EACdoC,EACAO,EACAhC,EACAQ,EACAC,EACAC,MAIDe,GAysBT7N,EAAQ+M,YAAcA,EACtB/M,EAAQqO,cAzkBR,SAAuB3N,EAAS+K,EAAUmC,GACxC,IAAIC,EAAgBD,EAmBpB,OAlBAb,EACErM,GACA,SAAUuN,EAAgB7B,EAAcE,GAMpCuB,EAJiB,IAAjBzB,GACsB,IAAtBE,QACiBf,IAAjBqC,EAEgBK,EAEAxC,EACdoC,EACAI,EACA7B,EACAE,MAIDuB,GAsjBT7N,EAAQgN,YAAcA,EACtBhN,EAAQsO,cA5ZR,SAAuB5N,EAAS+K,EAAUmC,GACxC,IAAIC,EAAgBD,EAChBW,GAAU,EAwBd,OAvBAvB,EACEtM,GACA,SACE+M,EACArB,EACAE,EACAC,EACAU,GAGEY,GADc,IAAZU,QAAsChD,IAAjBqC,EACPH,EAEAhC,EACdoC,EACAJ,EACArB,EACAE,EACAC,EACAU,GAEJsB,GAAU,KAGPV,GAmYT7N,EAAQ0N,SAAWA,EACnB1N,EAAQwO,WAnRR,SAAoB9N,EAAS+K,EAAUmC,GACrC,IAAIC,EAAgBD,EAgBpB,OAfAF,EACEhN,GACA,SAAU+N,EAAarC,EAAcE,EAAmBC,GAEpDsB,EADmB,IAAjBzB,QAAuCb,IAAjBqC,EACRa,EAEAhD,EACdoC,EACAY,EACArC,EACAE,EACAC,MAIDsB,GAmQT7N,EAAQ0O,YA9NR,SAAqBhO,EAASsB,GAG5B,GADAA,EAAUA,GAAW,IAChBwJ,EAAQ3C,SAAS7G,GAAU,MAAM,IAAIC,MAAM,sBAChD,IAOIkB,EAPAiJ,EAAepK,EAAQoK,cAAgB,EACvCE,EAAoBtK,EAAQsK,mBAAqB,EACjDC,EAAgBvK,EAAQuK,eAAiB,EACzCU,EAAejL,EAAQiL,cAAgB,EAGvChK,EAAajB,EAAQiB,WAGzB,OAAQvC,EAAQ2B,MACd,IAAK,oBACC+J,EAAe,IACjBA,EAAe1L,EAAQmD,SAASvC,OAAS8K,GAC3CnJ,EAAaA,GAAcvC,EAAQmD,SAASuI,GAAcnJ,WAC1DE,EAAWzC,EAAQmD,SAASuI,GAAcjJ,SAC1C,MACF,IAAK,UACHF,EAAaA,GAAcvC,EAAQuC,WACnCE,EAAWzC,EAAQyC,SACnB,MACF,IAAK,QACL,IAAK,aACH,OAAO,KACT,IAAK,aACL,IAAK,UACL,IAAK,kBACL,IAAK,eACHA,EAAWzC,EACX,MACF,QACE,MAAM,IAAIuB,MAAM,sBAIpB,GAAiB,OAAbkB,EAAmB,OAAO,KAC9B,IAAIS,EAAST,EAASZ,YACtB,OAAQY,EAASd,MACf,IAAK,QACL,IAAK,aACH,OAAO,KACT,IAAK,aAEH,OADI4K,EAAe,IAAGA,EAAerJ,EAAOtC,OAAS2L,EAAe,GAC7DzB,EAAQhG,WACb,CAAC5B,EAAOqJ,GAAerJ,EAAOqJ,EAAe,IAC7ChK,EACAjB,GAEJ,IAAK,UAIH,OAHIuK,EAAgB,IAAGA,EAAgB3I,EAAOtC,OAASiL,GACnDU,EAAe,IACjBA,EAAerJ,EAAO2I,GAAejL,OAAS2L,EAAe,GACxDzB,EAAQhG,WACb,CACE5B,EAAO2I,GAAeU,GACtBrJ,EAAO2I,GAAeU,EAAe,IAEvChK,EACAjB,GAEJ,IAAK,kBAKH,OAJIsK,EAAoB,IACtBA,EAAoB1I,EAAOtC,OAASgL,GAClCW,EAAe,IACjBA,EAAerJ,EAAO0I,GAAmBhL,OAAS2L,EAAe,GAC5DzB,EAAQhG,WACb,CACE5B,EAAO0I,GAAmBW,GAC1BrJ,EAAO0I,GAAmBW,EAAe,IAE3ChK,EACAjB,GAEJ,IAAK,eAQH,OAPIsK,EAAoB,IACtBA,EAAoB1I,EAAOtC,OAASgL,GAClCC,EAAgB,IAClBA,EAAgB3I,EAAO0I,GAAmBhL,OAASiL,GACjDU,EAAe,IACjBA,EACErJ,EAAO0I,GAAmBC,GAAejL,OAAS2L,EAAe,GAC9DzB,EAAQhG,WACb,CACE5B,EAAO0I,GAAmBC,GAAeU,GACzCrJ,EAAO0I,GAAmBC,GAAeU,EAAe,IAE1DhK,EACAjB,GAGN,MAAM,IAAIC,MAAM,uBAkIlBjC,EAAQ2O,UA9FR,SAAmBjO,EAASsB,GAG1B,GADAA,EAAUA,GAAW,IAChBwJ,EAAQ3C,SAAS7G,GAAU,MAAM,IAAIC,MAAM,sBAChD,IAOIkB,EAPAiJ,EAAepK,EAAQoK,cAAgB,EACvCE,EAAoBtK,EAAQsK,mBAAqB,EACjDC,EAAgBvK,EAAQuK,eAAiB,EACzCP,EAAahK,EAAQgK,YAAc,EAGnC/I,EAAajB,EAAQiB,WAGzB,OAAQvC,EAAQ2B,MACd,IAAK,oBACC+J,EAAe,IACjBA,EAAe1L,EAAQmD,SAASvC,OAAS8K,GAC3CnJ,EAAaA,GAAcvC,EAAQmD,SAASuI,GAAcnJ,WAC1DE,EAAWzC,EAAQmD,SAASuI,GAAcjJ,SAC1C,MACF,IAAK,UACHF,EAAaA,GAAcvC,EAAQuC,WACnCE,EAAWzC,EAAQyC,SACnB,MACF,IAAK,QACL,IAAK,aACH,OAAO,KACT,IAAK,aACL,IAAK,UACL,IAAK,kBACL,IAAK,eACHA,EAAWzC,EACX,MACF,QACE,MAAM,IAAIuB,MAAM,sBAIpB,GAAiB,OAAbkB,EAAmB,OAAO,KAC9B,IAAIS,EAAST,EAASZ,YACtB,OAAQY,EAASd,MACf,IAAK,QACH,OAAOmJ,EAAQ1J,MAAM8B,EAAQX,EAAYjB,GAC3C,IAAK,aAGH,OAFIsK,EAAoB,IACtBA,EAAoB1I,EAAOtC,OAASgL,GAC/Bd,EAAQ1J,MAAM8B,EAAO0I,GAAoBrJ,EAAYjB,GAC9D,IAAK,aAEH,OADIgK,EAAa,IAAGA,EAAapI,EAAOtC,OAAS0K,GAC1CR,EAAQ1J,MAAM8B,EAAOoI,GAAa/I,EAAYjB,GACvD,IAAK,UAIH,OAHIuK,EAAgB,IAAGA,EAAgB3I,EAAOtC,OAASiL,GACnDP,EAAa,IACfA,EAAapI,EAAO2I,GAAejL,OAAS0K,GACvCR,EAAQ1J,MAAM8B,EAAO2I,GAAeP,GAAa/I,EAAYjB,GACtE,IAAK,kBAKH,OAJIsK,EAAoB,IACtBA,EAAoB1I,EAAOtC,OAASgL,GAClCN,EAAa,IACfA,EAAapI,EAAO0I,GAAmBhL,OAAS0K,GAC3CR,EAAQ1J,MAAM8B,EAAO0I,GAAmBN,GAAa/I,EAAYjB,GAC1E,IAAK,eAQH,OAPIsK,EAAoB,IACtBA,EAAoB1I,EAAOtC,OAASgL,GAClCC,EAAgB,IAClBA,EAAgB3I,EAAO0I,GAAmBhL,OAASiL,GACjDP,EAAa,IACfA,EACEpI,EAAO0I,GAAmBC,GAAejL,OAAS0K,GAC/CR,EAAQ1J,MACb8B,EAAO0I,GAAmBC,GAAeP,GACzC/I,EACAjB,GAGN,MAAM,IAAIC,MAAM,wB,iCCx3ClB,IAAI2H,EAAmBxJ,MAAQA,KAAKwJ,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDxJ,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IAEtD,IAAIqO,EAAahF,EAAgB,EAAQ,KACrC5F,EAAY,EAAQ,KACpBhD,EAAc,EAAQ,KACtBR,EAAS,EAAQ,KACjBqO,EAAmBjF,EAAgB,EAAQ,MA4F/C,SAASkF,EAAIC,EAAGC,GACZ,OAAOD,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAElC,SAASC,EAAavK,EAAGwK,EAAGlN,GACxB,MAA0B,WAAnBA,EAAQmN,OACTN,EAAiB9N,QAAQ2D,EAAGwK,EAAGlN,GAC/B4M,EAAW7N,QAAQ2D,EAAGwK,EAAGlN,GAEnChC,EAAQe,QA/ER,SAA6BG,EAAIgJ,EAAMlI,GAUnC,QATgB,IAAZA,IAAsBA,EAAU,IAE/BA,EAAQmN,SACTnN,EAAQmN,OAAS,YAEhBnN,EAAQkD,QACTlD,EAAQkD,MAAQ,eAGfhE,EACD,MAAM,IAAIe,MAAM,kBAWpB,GATIoB,MAAMC,QAAQpC,GACdA,EAAK8C,EAAUlC,MAAMZ,GAEJ,UAAZA,EAAGmB,KACRnB,EAAK8C,EAAUF,QAAQ5C,GAGvBF,EAAYuI,UAAUrI,EAAI,QAAS,UAElCgJ,EACD,MAAM,IAAIjI,MAAM,oBAEhBoB,MAAMC,QAAQ4G,GACdA,EAAOlG,EAAUwB,WAAW0E,GAET,eAAdA,EAAK7H,KACV6H,EAAOlG,EAAUF,QAAQoG,GAGzBlJ,EAAYuI,UAAUW,EAAM,aAAc,QAE9C,IAAIhE,EAAWtF,IACXwO,EAAIlO,EAAGiC,SAASZ,YASpB,OARA/B,EAAOwM,YAAY9C,GAAM,SAAUmF,GAC/B,IAAI3K,EAAI2K,EAAQlM,SAASZ,YAAY,GACjC2M,EAAIG,EAAQlM,SAASZ,YAAY,GACjC+M,EAiBZ,SAA2BF,EAAG1K,EAAGwK,EAAGlN,GAChC,IAAIgN,EAAI,CAACE,EAAE,GAAKxK,EAAE,GAAIwK,EAAE,GAAKxK,EAAE,IAE3B6K,EAAKT,EADD,CAACM,EAAE,GAAK1K,EAAE,GAAI0K,EAAE,GAAK1K,EAAE,IACfsK,GAChB,GAAIO,GAAM,EACN,OAAON,EAAaG,EAAG1K,EAAG,CAAEyK,OAAQnN,EAAQmN,OAAQjK,MAAO,YAE/D,IAAIsK,EAAKV,EAAIE,EAAGA,GAChB,GAAIQ,GAAMD,EACN,OAAON,EAAaG,EAAGF,EAAG,CAAEC,OAAQnN,EAAQmN,OAAQjK,MAAO,YAE/D,IAAIuK,EAAKF,EAAKC,EAEd,OAAOP,EAAaG,EADX,CAAC1K,EAAE,GAAK+K,EAAKT,EAAE,GAAItK,EAAE,GAAK+K,EAAKT,EAAE,IACf,CAAEG,OAAQnN,EAAQmN,OAAQjK,MAAO,YA9BhDwK,CAAkBN,EAAG1K,EAAGwK,EAAGlN,GAC/BsN,EAAIpJ,IACJA,EAAWoJ,MAGZtL,EAAUsE,cAAcpC,EAAU,UAAWlE,EAAQkD,S,iCC1EhE7E,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IAEtD,IAAIyD,EAAY,EAAQ,KACpBhD,EAAc,EAAQ,KAiF1BhB,EAAQe,QA1DR,SAAuBkD,EAAMC,EAAIlC,QACb,IAAZA,IAAsBA,EAAU,IACpC,IAAI2N,EAAS3O,EAAYkB,SAAS+B,GAC9B2L,EAAc5O,EAAYkB,SAASgC,GAGvC0L,EAAY,IACRA,EAAY,GAAKD,EAAO,GAAK,KACtB,IACDA,EAAO,GAAKC,EAAY,GAAK,IACzB,IACA,EACd,IAAIC,EAmBR,SAAgCF,EAAQC,EAAaE,GASjD,IAAIC,EAFJD,OAAoBvE,IAAXuE,EAAuB9L,EAAUuC,YAAcyJ,OAAOF,GAG3DG,EAAQN,EAAO,GAAKhL,KAAKyB,GAAM,IAC/B8J,EAAQN,EAAY,GAAKjL,KAAKyB,GAAM,IACpC+J,EAAWD,EAAOD,EAClBG,EAAezL,KAAKiG,IAAIgF,EAAY,GAAKD,EAAO,IAAMhL,KAAKyB,GAAM,IAEjEgK,EAAczL,KAAKyB,KACnBgK,GAAe,EAAIzL,KAAKyB,IAI5B,IAAIiK,EAAW1L,KAAK2L,IAAI3L,KAAK4L,IAAIL,EAAO,EAAIvL,KAAKyB,GAAK,GAAKzB,KAAK4L,IAAIN,EAAO,EAAItL,KAAKyB,GAAK,IACrFoK,EAAI7L,KAAKiG,IAAIyF,GAAY,MAASF,EAAWE,EAAW1L,KAAKG,IAAImL,GAIrE,OAFYtL,KAAKM,KAAKkL,EAAWA,EAAWK,EAAIA,EAAIJ,EAAcA,GAC/CL,EA3CIU,CAAuBd,EAAQC,GAEtD,OADe5L,EAAUsE,cAAcuH,EAAkB,SAAU7N,EAAQkD,S,qBCpCvE,SAAWlF,EAAS0Q,EAAgBC,EAAiBC,GAAgB,aAEzE,SAASC,EAAuBC,GAAK,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAAE,QAAWA,GAE5G,IAAIC,EAAuCF,EAAsBH,GAC7DM,EAAwCH,EAAsBF,GAC9DM,EAAqCJ,EAAsBD,GAE3DM,EAAsD,SAA6D3Q,EAAO4Q,EAASC,GACrI,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZ/O,KAAM,yBACN9B,MAAOA,IAIP8Q,EAAiD,SAAwD9Q,EAAO4Q,EAASC,GAC3H,MAAO,CACLD,QAASA,EACTC,WAAYA,EACZ/O,KAAM,oBACN9B,MAAOA,IAIP+Q,EAAgC,SAAuC/Q,EAAOgR,GAChF,MAAO,CACLA,UAAWA,EACXlP,KAAM,WACN9B,MAAOA,IAIPiR,EAAqC,SAA4CC,EAAQF,EAAWG,GACtG,MAAO,CACLA,SAAUA,EACVH,UAAWA,EACXlP,KAAM,gBACNoP,OAAQA,IAIRE,EAAuB,SAA8BC,EAAMC,EAAkBC,GAC/E,IAAIP,EAAYO,EAAKP,UACjBQ,EAASD,EAAKC,OACdC,EAAeF,EAAKE,aACxB,OAAOD,GAAUF,EAAmBE,GAAUpN,KAAKsN,KAAKV,EAAYK,GAAQI,IAG1EE,EAA0C,SAAiDC,GAC7F,MAAgC,2BAAzBA,EAAgB9P,MAGrB+P,EAAqC,SAA4CD,GACnF,MAAgC,sBAAzBA,EAAgB9P,MAGrBgQ,EAAkC,SAAyCF,GAC7E,OAAOD,EAAwCC,IAAoBC,EAAmCD,IAGpGG,EAA4B,SAAmCH,GACjE,MAAgC,aAAzBA,EAAgB9P,MAGrBkQ,EAAiC,SAAwCJ,GAC3E,MAAgC,kBAAzBA,EAAgB9P,MAGrBmQ,EAAyC,SAASA,EAAuCC,EAAkBC,EAAOd,EAAMe,GAC1H,IAAIR,EAAkBM,EAAiBC,GACvC,YAA2BnH,IAApB4G,EAAgCQ,EAAeN,EAAgCF,IAAoBG,EAA0BH,GAAmBA,EAAgB5R,MAAQgS,EAA+BJ,GAAmBA,EAAgBV,OAAOU,EAAgBV,OAAOnQ,OAAS,GAAKqQ,EAAqBC,EAAMY,EAAuCC,EAAkBC,EAAQ,EAAGP,EAAgBZ,UAAWoB,GAAeR,IAGpaS,EAA8C,SAAqDH,EAAkBC,EAAOG,EAAwBC,EAAqBH,GAC3K,YAAkCpH,IAA3BsH,EAAuC,CAACC,EAAoB1B,WAAYuB,GAAgBN,EAAgCQ,GAA0B,CAACA,EAAuB1B,QAAS0B,EAAuBtS,OAAS+R,EAA0BO,GAA0B,CAACA,EAAuBtB,UAAWsB,EAAuBtS,OAASgS,EAA+BM,GAA0B,CAACA,EAAuBtB,UAAYsB,EAAuBnB,SAAUmB,EAAuBpB,OAAOoB,EAAuBpB,OAAOnQ,OAAS,IAAM,CAACuR,EAAuBtB,UAAWiB,EAAuCC,EAAkBC,EAAQ,EAAGG,EAAuBtB,UAAWoB,KAGjqBI,EAAiC,SAAwCZ,GAC3E,MAAgC,kBAAzBA,EAAgB9P,MAGrB2Q,EAAyC,SAAgDb,GAC3F,MAAgC,0BAAzBA,EAAgB9P,MAGrB4Q,EAAe,SAAsBd,GACvC,OAAIY,EAA+BZ,IAAoBa,EAAuCb,GACrFA,EAAgBe,WAGrBhB,EAAwCC,IAAoBC,EAAmCD,GAC1FA,EAAgBhB,QAGlBgB,EAAgBZ,WAGrB4B,EAAgC,SAAuCvB,EAAML,EAAWM,EAAkBC,GAC5G,IAAIX,EAAUW,EAAKX,QACf5Q,EAAQuR,EAAKvR,MAEjB,OAAIsR,IAAqBtR,EAChBA,EAGL,EAAIsR,GAAoB,EAAItR,GAASsR,EAAmB,GAAKtR,EAAQ,EAChEsR,EAAmBlN,KAAKC,IAAIrE,EAAQsR,GAAmBD,EAAOL,IAAcJ,EAAUI,IAGxF,GAGL6B,EAA2B,SAAkCxB,EAAML,EAAWM,EAAkBC,GAGlG,OAAOD,GAAoBD,EAAOL,IAFpBO,EAAKX,QAEuCI,IAD9CO,EAAKvR,MAC+DsR,IAc9EwB,EAA2B,SAAkCzB,EAAME,GACrE,IAAIJ,EAAWI,EAAKJ,SAChBH,EAAYO,EAAKP,UACjBE,EAASK,EAAKL,OAElB,OAhBqB,SAA0BA,EAAQ6B,GACvD,IAAIC,EAAa5O,KAAK6O,MAAMF,GACxBG,EAAa9O,KAAK+O,KAAKJ,GAE3B,OAAIC,IAAeE,EACVhC,EAAO8B,IAGR,GAAKD,EAAiBC,IAAe9B,EAAO8B,IAAe,GAAKE,EAAaH,IAAmB7B,EAAOgC,GAQxGE,CAAiBlC,GADFG,EAAOL,GAAaG,GAAYD,EAAOnQ,OAAS,KAIpEsS,EAA6B,SAAoCzB,GACnE,MAAgC,cAAzBA,EAAgB9P,MAGrBwR,EAAmC,WACrC,SAASA,EAAoBlB,GAC3B3B,EAAkC,QAAE5Q,KAAMyT,GAE1CzT,KAAK0T,kBAAoB,GACzB1T,KAAK2T,YAAc,EACnB3T,KAAK4T,cAAgBrB,EA2JvB,OAxJA1B,EAA+B,QAAE4C,EAAqB,CAAC,CACrD7Q,IAAKiR,OAAOC,SACZ3T,MAAO,WACL,OAAOH,KAAK0T,kBAAkBG,OAAOC,cAEtC,CACDlR,IAAK,MACLzC,MAAO,SAAa4R,GAClB,IAAIgC,EAAYlB,EAAad,GAE7B,GAAIY,EAA+BZ,IAAoBa,EAAuCb,GAAkB,CAC9G,IAAIO,EAAQtS,KAAK0T,kBAAkBM,WAAU,SAAUvB,GACrD,OAAIG,EAAuCb,IAAoBI,EAA+BM,GACrFA,EAAuBtB,UAAYsB,EAAuBnB,UAAYyC,EAGxElB,EAAaJ,IAA2BsB,KAG7CE,EAAyBjU,KAAK0T,kBAAkBpB,GAMpD,IAJe,IAAXA,IACFtS,KAAK0T,kBAAoB1T,KAAK0T,kBAAkBvS,MAAM,EAAGmR,IAGvDK,EAA+BZ,GAAkB,CACnD,IAAImC,EAAsBlU,KAAK0T,kBAAkB1T,KAAK0T,kBAAkBxS,OAAS,GAEjF,QAA+BiK,IAA3B8I,GAAwChC,EAAgCgC,GAAyB,CACnG,GAAIT,EAA2BU,GAC7B,MAAM,IAAIrS,MAAM,mCAGlB,IAAIsP,EAAYgB,EAA+B+B,GAAuBA,EAAoB/C,UAAY+C,EAAoB5C,SAAWuB,EAAaqB,GAC9IC,EAAahC,EAA+B+B,GAAuBA,EAAoB7C,OAAO6C,EAAoB7C,OAAOnQ,OAAS,GAAKgT,EAAoB/T,MAC3JA,EAAQ2R,EAAwCmC,GAA0BlB,EAA8BgB,EAAW5C,EAAWgD,EAAYF,GAA0BjB,EAAyBe,EAAW5C,EAAWgD,EAAYF,GAC/NG,EAA2BtC,EAAwCmC,GAA0BnD,EAAoD3Q,EAAO4T,EAAW/T,KAAK2T,aAAe1C,EAA+C9Q,EAAO4T,EAAW/T,KAAK2T,aAEjQ3T,KAAK0T,kBAAkBhJ,KAAK0J,QAGFjJ,IAAxB+I,GAAqCV,EAA2BU,IAClElU,KAAK0T,kBAAkBhJ,KAAKwG,EAA8BlR,KAAKqU,SAASN,GAAYA,SAG1D5I,IAAxB+I,GAAqC/B,EAA+B+B,IAAwBA,EAAoB/C,UAAY+C,EAAoB5C,SAAWyC,IAC7J/T,KAAK0T,kBAAkB1T,KAAK0T,kBAAkBxS,OAAS,GAAKkQ,EAAmC,IAAIkD,aAAa,CAAC,EAAG,IAAKJ,EAAoB/C,UAAW4C,EAAYG,EAAoB/C,iBAGvL,CACL,IAAIoD,EAASvU,KAAK0T,kBAAkBM,WAAU,SAAUvB,GACtD,OAAOI,EAAaJ,GAA0BsB,KAG5CS,GAAsC,IAAZD,EAAgBvU,KAAK0T,kBAAkB1T,KAAK0T,kBAAkBxS,OAAS,GAAKlB,KAAK0T,kBAAkBa,EAAS,GAE1I,QAAgCpJ,IAA5BqJ,GAAyCrC,EAA+BqC,IAA4B3B,EAAa2B,GAA2BA,EAAwBlD,SAAWyC,EACjL,OAAO,EAGT,IAAIU,EAA4B3C,EAAwCC,GAAmBjB,EAAoDiB,EAAgB5R,MAAO4R,EAAgBhB,QAAS/Q,KAAK2T,aAAe3B,EAAmCD,GAAmBd,EAA+Cc,EAAgB5R,MAAO4T,EAAW/T,KAAK2T,aAAe5B,EAE9W,IAAgB,IAAZwC,EACFvU,KAAK0T,kBAAkBhJ,KAAK+J,OACvB,CACL,GAAItC,EAA+BJ,IAAoBgC,EAAYhC,EAAgBT,SAAWuB,EAAa7S,KAAK0T,kBAAkBa,IAChI,OAAO,EAGTvU,KAAK0T,kBAAkBgB,OAAOH,EAAQ,EAAGE,IAI7C,OAAO,IAER,CACD7R,IAAK,QACLzC,MAAO,SAAeqR,GACpB,IAAIc,EAAQtS,KAAK0T,kBAAkBM,WAAU,SAAUvB,GACrD,OAAOI,EAAaJ,GAA0BjB,KAGhD,GAAIc,EAAQ,EAAG,CACb,IAAIqC,EAA4B3U,KAAK0T,kBAAkBvS,MAAMmR,EAAQ,GAEjEsC,EAAgCD,EAA0B,GAE1DnB,EAA2BoB,IAC7BD,EAA0BlK,QAAQyG,EAA8BkB,EAAuCpS,KAAK0T,kBAAmBpB,EAAQ,EAAGsC,EAA8BzD,UAAWnR,KAAK4T,eAAgBgB,EAA8BzD,YAGxOnR,KAAK0T,kBAAoBiB,KAG5B,CACD/R,IAAK,WACLzC,MAAO,SAAkBqR,GACvB,GAAsC,IAAlCxR,KAAK0T,kBAAkBxS,OACzB,OAAOlB,KAAK4T,cAGd,IAAIM,EAAsBlU,KAAK0T,kBAAkB1T,KAAK0T,kBAAkBxS,OAAS,GAE7EoR,EAAQtS,KAAK0T,kBAAkBM,WAAU,SAAUjC,GACrD,OAAOc,EAAad,GAAmBP,KAGrCkB,EAAsB1S,KAAK0T,kBAAkBpB,GAC7CG,EAAyBI,EAAaqB,IAAwB1C,EAAO0C,EAAsBlU,KAAK0T,kBAAkBpB,EAAQ,GAE9H,QAA+BnH,IAA3BsH,GAAwCe,EAA2Bf,UAAoDtH,IAAxBuH,IAAsCT,EAAgCS,IAAwBA,EAAoB1B,WAAaQ,GAChO,OAAOD,EAAqBC,EAAMY,EAAuCpS,KAAK0T,kBAAmBpB,EAAQ,EAAGG,EAAuBtB,UAAWnR,KAAK4T,eAAgBnB,GAGrK,QAA+BtH,IAA3BsH,GAAwCP,EAA0BO,UAAoDtH,IAAxBuH,IAAsCT,EAAgCS,IACtK,OAAOD,EAAuBtS,MAGhC,QAA+BgL,IAA3BsH,GAAwCN,EAA+BM,UAAoDtH,IAAxBuH,IAAsCT,EAAgCS,IAAwBD,EAAuBtB,UAAYsB,EAAuBnB,SAAWE,GACxQ,OAAIA,EAAOiB,EAAuBtB,UAAYsB,EAAuBnB,SAC5D2B,EAAyBzB,EAAMiB,GAGjCA,EAAuBpB,OAAOoB,EAAuBpB,OAAOnQ,OAAS,GAG9E,QAA+BiK,IAA3BsH,GAAwCR,EAAgCQ,UAAoDtH,IAAxBuH,IAAsCT,EAAgCS,IAC5K,OAAOD,EAAuBtS,MAGhC,QAA4BgL,IAAxBuH,GAAqCZ,EAAwCY,GAAsB,CACrG,IAAImC,EAAwBrC,EAA4CxS,KAAK0T,kBAAmBpB,EAAQ,EAAGG,EAAwBC,EAAqB1S,KAAK4T,eACzJkB,EAAyBnE,EAAiC,QAAEkE,EAAuB,GACnF1D,EAAY2D,EAAuB,GACnC3U,EAAQ2U,EAAuB,GAEnC,OAAO/B,EAA8BvB,EAAML,EAAWhR,EAAOuS,GAG/D,QAA4BvH,IAAxBuH,GAAqCV,EAAmCU,GAAsB,CAChG,IAAIqC,EAAyBvC,EAA4CxS,KAAK0T,kBAAmBpB,EAAQ,EAAGG,EAAwBC,EAAqB1S,KAAK4T,eAC1JoB,EAAyBrE,EAAiC,QAAEoE,EAAwB,GACpFE,EAAaD,EAAuB,GACpCE,EAASF,EAAuB,GAEpC,OAAOhC,EAAyBxB,EAAMyD,EAAYC,EAAQxC,GAG5D,OAAO1S,KAAK4T,kBAITH,EAjK8B,GA2MvC7T,EAAQ6T,oBAAsBA,EAC9B7T,EAAQuV,mCAxCiC,SAA4CrC,GACnF,MAAO,CACLA,WAAYA,EACZ7Q,KAAM,kBAsCVrC,EAAQwV,2CAlCyC,SAAoDtC,GACnG,MAAO,CACLA,WAAYA,EACZ7Q,KAAM,0BAgCVrC,EAAQyV,4CA5B0C,SAAqDlV,EAAO4Q,GAC5G,MAAO,CACLA,QAASA,EACT9O,KAAM,yBACN9B,MAAOA,IAyBXP,EAAQ0V,uCArBqC,SAAgDnV,EAAO4Q,GAClG,MAAO,CACLA,QAASA,EACT9O,KAAM,oBACN9B,MAAOA,IAkBXP,EAAQ2V,+BAd6B,SAAwC5D,EAAQR,EAAWS,GAC9F,MAAO,CACLT,UAAWA,EACXQ,OAAQA,EACRC,aAAcA,EACd3P,KAAM,cAUVrC,EAAQsR,8BAAgCA,EACxCtR,EAAQwR,mCAAqCA,EAE7CnR,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IAtWSR,CAAQC,EAAS,EAAQ,KAAyC,EAAQ,KAA0C,EAAQ,O,gBCS/LC,EAAOD,QAVP,SAA2B4V,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAItU,UAAQuU,EAAMD,EAAItU,QAE/C,IAAK,IAAIE,EAAI,EAAGsU,EAAO,IAAIzS,MAAMwS,GAAMrU,EAAIqU,EAAKrU,IAC9CsU,EAAKtU,GAAKoU,EAAIpU,GAGhB,OAAOsU,I,gBCHT7V,EAAOD,QAJP,SAAyB4V,GACvB,GAAIvS,MAAMC,QAAQsS,GAAM,OAAOA,I,gBCKjC3V,EAAOD,QANP,SAAyB+V,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,uC,gBCFxB,SAASC,EAAkBnE,EAAQoE,GACjC,IAAK,IAAI3U,EAAI,EAAGA,EAAI2U,EAAM7U,OAAQE,IAAK,CACrC,IAAI4U,EAAaD,EAAM3U,GACvB4U,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDlW,OAAOC,eAAeyR,EAAQqE,EAAWpT,IAAKoT,IAUlDnW,EAAOD,QANP,SAAsBgW,EAAaQ,EAAYC,GAG7C,OAFID,GAAYN,EAAkBF,EAAYU,UAAWF,GACrDC,GAAaP,EAAkBF,EAAaS,GACzCT,I,gBCcT/V,EAAOD,QA3BP,SAA+B4V,EAAKpU,GAClC,GAAsB,oBAAXyS,QAA4BA,OAAOC,YAAY7T,OAAOuV,GAAjE,CACA,IAAIe,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKvL,EAET,IACE,IAAK,IAAiCwL,EAA7BzR,EAAKsQ,EAAI3B,OAAOC,cAAmB0C,GAAMG,EAAKzR,EAAG0R,QAAQC,QAChEN,EAAK7L,KAAKiM,EAAGxW,QAETiB,GAAKmV,EAAKrV,SAAWE,GAH8CoV,GAAK,IAK9E,MAAOM,GACPL,GAAK,EACLC,EAAKI,EACL,QACA,IACON,GAAsB,MAAhBtR,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIuR,EAAI,MAAMC,GAIlB,OAAOH,K,gBCpBT1W,EAAOD,QAJP,WACE,MAAM,IAAIiW,UAAU,+I,oBCDtB,IAAIkB,EAAiB,EAAQ,KAEzBC,EAAuB,EAAQ,KAE/BC,EAA6B,EAAQ,KAErCC,EAAkB,EAAQ,KAM9BrX,EAAOD,QAJP,SAAwB4V,EAAKpU,GAC3B,OAAO2V,EAAevB,IAAQwB,EAAqBxB,EAAKpU,IAAM6V,EAA2BzB,EAAKpU,IAAM8V,M,oBCTtG,IAAIC,EAAmB,EAAQ,KAW/BtX,EAAOD,QATP,SAAqCwX,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOD,EAAiBC,EAAGC,GACtD,IAAIC,EAAIrX,OAAOqW,UAAUiB,SAASC,KAAKJ,GAAGjW,MAAM,GAAI,GAEpD,MADU,WAANmW,GAAkBF,EAAEzO,cAAa2O,EAAIF,EAAEzO,YAAYO,MAC7C,QAANoO,GAAqB,QAANA,EAAoBrU,MAAMY,KAAKuT,GACxC,cAANE,GAAqB,2CAA2CG,KAAKH,GAAWH,EAAiBC,EAAGC,QAAxG,K,mBCRF,SAMC,SAAU3X,EAAMgY,GACb,kBAEqB,0BAAjB,EAMA,WAIJ,IAAIC,EAAO,aACPC,EAAgB,YAChBC,SAAeC,SAAWF,UAA0BE,OAAOC,YAAcH,GACzE,kBAAkBH,KAAKK,OAAOC,UAAUC,WAGxCC,EAAa,CACb,QACA,QACA,OACA,OACA,SAIJ,SAASC,EAAWC,EAAKC,GACrB,IAAIrJ,EAASoJ,EAAIC,GACjB,GAA2B,mBAAhBrJ,EAAOsJ,KACd,OAAOtJ,EAAOsJ,KAAKF,GAEnB,IACI,OAAOG,SAAShC,UAAU+B,KAAKb,KAAKzI,EAAQoJ,GAC9C,MAAOzH,GAEL,OAAO,WACH,OAAO4H,SAAShC,UAAUiC,MAAMA,MAAMxJ,EAAQ,CAACoJ,EAAKK,cAOpE,SAASC,IACDC,QAAQxI,MACJwI,QAAQxI,IAAIqI,MACZG,QAAQxI,IAAIqI,MAAMG,QAASF,WAG3BF,SAAShC,UAAUiC,MAAMA,MAAMG,QAAQxI,IAAK,CAACwI,QAASF,aAG1DE,QAAQC,OAAOD,QAAQC,QAK/B,SAASC,EAAWR,GAKhB,MAJmB,UAAfA,IACAA,EAAa,cAGNM,UAAYd,IAEG,UAAfQ,GAA0BP,EAC1BY,OACwBtN,IAAxBuN,QAAQN,GACRF,EAAWQ,QAASN,QACJjN,IAAhBuN,QAAQxI,IACRgI,EAAWQ,QAAS,OAEpBf,GAMf,SAASkB,EAAsBC,EAAOC,GAElC,IAAK,IAAI3X,EAAI,EAAGA,EAAI6W,EAAW/W,OAAQE,IAAK,CACxC,IAAIgX,EAAaH,EAAW7W,GAC5BpB,KAAKoY,GAAehX,EAAI0X,EACpBnB,EACA3X,KAAKgZ,cAAcZ,EAAYU,EAAOC,GAI9C/Y,KAAKkQ,IAAMlQ,KAAKiZ,MAKpB,SAASC,EAAgCd,EAAYU,EAAOC,GACxD,OAAO,kBACQL,UAAYd,IACnBiB,EAAsBrB,KAAKxX,KAAM8Y,EAAOC,GACxC/Y,KAAKoY,GAAYG,MAAMvY,KAAMwY,aAOzC,SAASW,EAAqBf,EAAYU,EAAOC,GAE7C,OAAOH,EAAWR,IACXc,EAAgCX,MAAMvY,KAAMwY,WAGvD,SAASY,EAAOlQ,EAAMmQ,EAAc1Z,GAClC,IACI2Z,EADAC,EAAOvZ,KAGPwZ,EAAa,WAyBjB,SAASC,IACL,IAAIC,EAEJ,UAAW5B,SAAWF,GAAkB4B,EAAxC,CAEA,IACIE,EAAc5B,OAAO6B,aAAaH,GACpC,MAAOI,IAGT,UAAWF,IAAgB9B,EACvB,IACI,IAAIiC,EAAS/B,OAAOgC,SAASD,OACzBE,EAAWF,EAAO/Q,QAClBkR,mBAAmBR,GAAc,MACnB,IAAdO,IACAL,EAAc,WAAWO,KAAKJ,EAAO1Y,MAAM4Y,IAAW,IAE5D,MAAOH,IAQb,YAJiCzO,IAA7BoO,EAAKW,OAAOR,KACZA,OAAcvO,GAGXuO,GAlDS,iBAATxQ,EACTsQ,GAAc,IAAMtQ,EACK,iBAATA,IAChBsQ,OAAarO,GAwDfoO,EAAKrQ,KAAOA,EAEZqQ,EAAKW,OAAS,CAAE,MAAS,EAAG,MAAS,EAAG,KAAQ,EAAG,KAAQ,EACvD,MAAS,EAAG,OAAU,GAE1BX,EAAKP,cAAgBrZ,GAAWwZ,EAEhCI,EAAKY,SAAW,WACZ,OAAOb,GAGXC,EAAKa,SAAW,SAAUtB,EAAOuB,GAI7B,GAHqB,iBAAVvB,QAA2D3N,IAArCoO,EAAKW,OAAOpB,EAAMwB,iBAC/CxB,EAAQS,EAAKW,OAAOpB,EAAMwB,kBAET,iBAAVxB,GAAsBA,GAAS,GAAKA,GAASS,EAAKW,OAAOK,QAUhE,KAAM,6CAA+CzB,EAJrD,GALAQ,EAAeR,GACC,IAAZuB,GAtEZ,SAAgCG,GAC5B,IAAIC,GAAaxC,EAAWuC,IAAa,UAAUF,cAEnD,UAAWxC,SAAWF,GAAkB4B,EAAxC,CAGA,IAEI,YADA1B,OAAO6B,aAAaH,GAAciB,GAEpC,MAAOb,IAGT,IACI9B,OAAOgC,SAASD,OACdG,mBAAmBR,GAAc,IAAMiB,EAAY,IACvD,MAAOb,MAwDDc,CAAuB5B,GAE3BD,EAAsBrB,KAAK+B,EAAMT,EAAO5P,UAC7BwP,UAAYd,GAAiBkB,EAAQS,EAAKW,OAAOK,OACxD,MAAO,oCAOnBhB,EAAKoB,gBAAkB,SAAU7B,GACxBW,KACDF,EAAKa,SAAStB,GAAO,IAI7BS,EAAKqB,UAAY,SAASP,GACtBd,EAAKa,SAASb,EAAKW,OAAOW,MAAOR,IAGrCd,EAAKuB,WAAa,SAAST,GACvBd,EAAKa,SAASb,EAAKW,OAAOK,OAAQF,IAItC,IAAIU,EAAetB,IACC,MAAhBsB,IACAA,EAA+B,MAAhB1B,EAAuB,OAASA,GAEnDE,EAAKa,SAASW,GAAc,GAS9B,IAAIC,EAAgB,IAAI5B,EAEpB6B,EAAiB,GACrBD,EAAcE,UAAY,SAAmBhS,GACzC,GAAqB,iBAATA,GAAqC,iBAATA,GAA+B,KAATA,EAC5D,MAAM,IAAI2M,UAAU,kDAGtB,IAAIsF,EAASF,EAAe/R,GAK5B,OAJKiS,IACHA,EAASF,EAAe/R,GAAQ,IAAIkQ,EAClClQ,EAAM8R,EAAcb,WAAYa,EAAchC,gBAE3CmC,GAIX,IAAIC,SAAetD,SAAWF,EAAiBE,OAAO5H,SAAM/E,EAiB5D,OAhBA6P,EAAcK,WAAa,WAMvB,cALWvD,SAAWF,GACfE,OAAO5H,MAAQ8K,IAClBlD,OAAO5H,IAAMkL,GAGVJ,GAGXA,EAAcM,WAAa,WACvB,OAAOL,GAIXD,EAAuB,QAAIA,EAEpBA,IAvQc,kCAHzB,I,82CCNO,MCAMO,EAA0B,IAAIC,QAC9BC,EAA+B,IAAIC,QACnCC,EAAmB,IAAID,QACvBE,EAAgC,IAAIF,QACpCG,EAAoB,IAAIH,QACxBI,EAAgB,IAAIJ,QACpBK,EAAkB,IAAIL,QACtBM,EAAiB,IAAIN,QAErBO,EAA0C,IAAIP,QAC9CQ,EAAyB,IAAIR,QCVpCS,EAAU,CACZC,UAAS,IACED,GCUTE,EAAyB,uPAClBC,EAAwB,CAACC,EAAQC,KAC1C,MAAMC,EAAmB,GACzB,IAAIC,EAAgCH,EAAOI,QAAQ,SAAU,IACzDpc,EAASmc,EAA8BE,MAAMP,GACjD,KAAkB,OAAX9b,GAAiB,CACpB,MAAMsc,EAAgBtc,EAAO,GAAGY,MAAM,GAAI,GACpC2b,EAAiCvc,EAAO,GACzCoc,QAAQ,cAAe,IACvBA,QAAQE,EAAe,IAAIE,IAAIF,EAAeL,GAAKjF,YACxDkF,EAAiB/R,KAAKoS,GACtBJ,EAAgCA,EAA8Bvb,MAAMZ,EAAO,GAAGW,QAAQyb,QAAQ,SAAU,IACxGpc,EAASmc,EAA8BE,MAAMP,GAEjD,MAAO,CAACI,EAAiBO,KAAK,KAAMN,ICvBlCO,EAA8BC,IAChC,QAA6B/R,IAAzB+R,IAAuCja,MAAMC,QAAQga,GACrD,MAAM,IAAIrH,UAAU,wFAGtBsH,EAAuBC,IACzB,IFJ2B,CAACC,IAC5B,IAEI,IADc,IAAIC,MAAMD,EAAelB,GAG3C,MACI,OAAO,EAEX,OAAO,GEJFoB,CAAgBH,GACjB,MAAM,IAAIvH,UAAU,8DAExB,GAAgC,OAA5BuH,EAAc9G,WAAyD,iBAA5B8G,EAAc9G,UACzD,MAAM,IAAIT,UAAU,+DCbf2H,EAAiB,CAACra,EAAKP,KAChC,MAAMzC,EAAQgD,EAAIsa,IAAI7a,GACtB,QAAcuI,IAAVhL,EACA,MAAM,IAAI0B,MAAM,kDAEpB,OAAO1B,GCLEud,EAAqB,CAACC,EAAKC,KACpC,MAAMC,EAAmB5a,MAAMY,KAAK8Z,GAAKG,OAAOF,GAChD,GAAIC,EAAiB3c,OAAS,EAC1B,MAAMW,MAAM,oCAEhB,GAAgC,IAA5Bgc,EAAiB3c,OACjB,MAAMW,MAAM,yBAEhB,MAAOkc,GAAmBF,EAE1B,OADAF,EAAIK,OAAOD,GACJA,GCREE,EAA0C,CAACC,EAAe3B,EAAQ4B,EAAQzV,KACnF,MAAM0V,EAA0BZ,EAAeU,EAAe3B,GACxD8B,EAAqBX,EAAmBU,GAA0BE,GAA2BA,EAAuB,KAAOH,GAAUG,EAAuB,KAAO5V,IAIzK,OAHqC,IAAjC0V,EAAwBG,MACxBL,EAAcF,OAAOzB,GAElB8B,GCNEG,EAAgCC,GAClCjB,EAAezB,EAAiB0C,GCD9BC,EAA4BD,IACrC,GAAIlD,EAAwBoD,IAAIF,GAC5B,MAAM,IAAI5c,MAAM,oCAEpB0Z,EAAwBqD,IAAIH,GAC5BD,EAA6BC,GAAW9b,SAASkc,GAAkBA,GAAc,MCPxEC,EAAsBL,GACxB,SAAUA,ECCRM,EAA6BN,IACtC,IAAKlD,EAAwBoD,IAAIF,GAC7B,MAAM,IAAI5c,MAAM,gCAEpB0Z,EAAwByC,OAAOS,GAC/BD,EAA6BC,GAAW9b,SAASkc,GAAkBA,GAAc,MCJxEG,EAAyC,CAACP,EAAWQ,MACzDH,EAAmBL,IAAcQ,EAAaC,OAAOC,GAAqC,IAArBA,EAAYZ,QAClFQ,EAA0BN,ICL5BW,EAAkB,CACpBC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBC,QAAS,KACTC,aAAc,GACdC,aAAc,IACdC,sBAAuB,ICPdC,EAAmB,CAACC,EAAiBC,IACvCD,EAAgBE,UAAYD,ECD1BE,EAAuDC,IAChE,IACIA,EAAkBC,cAAc,IAAI5L,aAAa,GAAI,GAAI,GAE7D,MACI,OAAO,EAEX,OAAO,GCPE6L,EAAuB,IAAM,IAAIC,aAAa,GAAI,kBCClDC,EAAuCC,IACnB,IAAEC,EAA/BD,EAAYC,gBAAmBA,EAY5BD,EAAYC,eAXHC,IACJ,IACI,OAAOD,EAAe/I,KAAK8I,EAAaE,GAE5C,MAAO1J,GACH,GAAiB,KAAbA,EAAI2J,KACJ,MAAMN,IAEV,MAAMrJ,MCThB,EAAkB,CACpB4J,iBAAkB,GCHTC,GAA8B,qBAC9BC,GAA8BD,ECA9BE,EAAqBpC,GAAclD,EAAwBoD,IAAIF,GCGtE,EAAkB,CACpBqC,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WAEvBwB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,GCXLC,EAA2B1C,GAC7BjB,EAAe/B,EAA8BgD,GCD3C2C,EAA4BC,GAC9B7D,EAAe5B,EAA+ByF,GCQ5CC,EAA4C,CAAC7C,EAAW9F,KACjE,MAAM,aAAEsG,GAAiBkC,EAAwB1C,GACjDQ,EAAatc,SAASwc,GAAgBA,EAAYxc,SAAQ,EAAE4Z,MACnD5D,EAAM4I,SAAS9C,IAChB6C,EAA0C/E,EAAQ,IAAI5D,EAAO8F,SAGrE,MAAM+C,EClB6B,CAAC/C,GAC7B,iBAAkBA,EDiBLgD,CAAwBhD,GACtC,CAEEA,EAAUyC,cAEZpC,EAAmBL,GACfxb,MAAMY,KAAK4a,EAAUiD,WAAWrQ,UExBZ,CAACoN,GACxB,cAAeA,GAAa,SAAUA,EFwBnCkD,CAAmBlD,GACf,CAACA,EAAUmD,EAAGnD,EAAUoD,OAAQpD,EAAUqD,UAAWrD,EAAUsD,MG1B7C,CAACtD,GAC1B,WAAYA,EH0BLuD,CAAqBvD,GACjB,CAACA,EAAUwD,QI5BP,CAACxD,KACd,cAAeA,IAAc,SAAUA,EJ4B9ByD,CAAWzD,GACP,CAACA,EAAUsD,MK9BL,CAACtD,GACtB,WAAYA,GAAa,cAAeA,EL8BzB0D,CAAiB1D,GACb,CAACA,EAAUoD,OAAQpD,EAAUqD,WMhCzB,CAACrD,GACxB,QAASA,ENgCU2D,CAAmB3D,GACf,CAACA,EAAU4D,KACX,GAC9B,IAAK,MAAMhB,KAAcG,EAAa,CAClC,MAAMc,EAAwBlB,EAAyBC,QACzBlW,IAA1BmX,GACAA,EAAsBrD,aAAatc,SAAQ,EAAE4Z,KAAY+E,EAA0C/E,EAAQ5D,KAG/GkI,EAAkBpC,IAClBM,EAA0BN,IO1CrB8D,EAAwBxC,IACjCuB,EAA0CvB,EAAQvQ,YAAa,KCFtDgT,EAAsBC,QACPtX,IAAhBsX,GACmB,iBAAhBA,GACiB,iBAAhBA,IAA6C,aAAhBA,GAA8C,gBAAhBA,GAAiD,aAAhBA,GCH/FC,EAAeC,GACjB,YAAaA,ECAXC,EAA+BC,GACjCH,EAAYG,EAAiB,ICF3BC,EAAqB,CAACnF,EAAKoF,EAASnF,EAAWoF,KACxD,IAAK,MAAMC,KAAQtF,EACf,GAAIC,EAAUqF,GAAO,CACjB,GAAID,EACA,OAAO,EAEX,MAAMnhB,MAAM,kDAIpB,OADA8b,EAAIiB,IAAImE,IACD,GCTEG,EAAuC,CAACjE,EAAc1C,GAAS4B,EAAQU,GAAgBmE,KAChGF,EAAmB7D,EAAc,CAAC1C,EAAQ4B,EAAQU,IAAiBsE,GAA0BA,EAAsB,KAAO5G,GAAU4G,EAAsB,KAAOhF,GAAQ6E,ICDhKI,EAAwC,CAAClF,GAAgB3B,EAAQ4B,EAAQU,GAAgBmE,KAClG,MAAM5E,EAA0BF,EAAcT,IAAIlB,QAClBpR,IAA5BiT,EACAF,EAAcP,IAAIpB,EAAQ,IAAI8G,IAAI,CAAC,CAAClF,EAAQU,MAG5CiE,EAAmB1E,EAAyB,CAACD,EAAQU,IAAiBP,GAA2BA,EAAuB,KAAOH,GAAQ6E,ICPlIM,EAA0BC,GAC5B,WAAYA,ECAVC,EAA0C,CAACC,EAAuBC,EAA4BvF,EAAQzV,KAC/G,GAAI4a,EAAuBI,GAA6B,CACpD,MAAMC,EAAiCD,EAA2BE,OAAOlb,GAEzE,OADA+a,EAAsBI,QAAQF,EAAgCxF,EAAQ,GAC/D,CAACwF,EAAgCxF,EAAQ,GAGpD,OADAsF,EAAsBI,QAAQH,EAA4BvF,EAAQzV,GAC3D,CAACgb,EAA4BvF,EAAQzV,ICRnCob,EAA8B,CAACC,EAAwBxH,EAAQ4B,KACxE,IAAK,MAAMgF,KAAyBY,EAChC,GAAIZ,EAAsB,KAAO5G,GAAU4G,EAAsB,KAAOhF,EAEpE,OADA4F,EAAuB/F,OAAOmF,GACvBA,EAGf,OAAO,MCNEa,EAAiC,CAACvF,EAAWI,KAEtD,IADuBL,EAA6BC,GAChCT,OAAOa,GACvB,MAAM,IAAIhd,MAAM,yCCFXoiB,EAA2C,CAAC/F,EAAe3B,EAAQ4B,KAC5E,MAAMC,EAA0BZ,EAAeU,EAAe3B,GACxD8B,EAAqBX,EAAmBU,GAA0BE,GAA2BA,EAAuB,KAAOH,IAIjI,OAHqC,IAAjCC,EAAwBG,MACxBL,EAAcF,OAAOzB,GAElB8B,GCPE6F,EAA+C,CAACT,EAAuBC,EAA4BvF,EAAQzV,KAChH4a,EAAuBI,GACvBD,EAAsBU,WAAWT,EAA2BE,OAAOlb,GAAQyV,EAAQ,GAGnFsF,EAAsBU,WAAWT,EAA4BvF,EAAQzV,ICJhE0b,EAAsB3F,GACxBjB,EAAe7B,EAAkB8C,GCD/B4F,GAAuBhD,GACzB7D,EAAe3B,EAAmBwF,GCFhCiD,GAAkB7F,GACpBzC,EAAe2C,IAAIF,GCDjB8F,GAAsB9F,IACvBlD,EAAwBoD,IAAIF,GCF3B+F,GAAwCC,GAC1C,IAAIC,SAASC,IAChB,MAAMC,EAAWH,EAAmBI,sBAAsB,IAAK,EAAG,GAC5DC,EAAQL,EAAmBM,aAE3BC,EAAOP,EAAmBQ,aAAa,EAAG,EAAG,OAC7CC,EAAcF,EAAKzE,eAAe,GACxC2E,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjB,MAAM3I,EAASkI,EAAmBU,qBAClC5I,EAAOuE,OAASkE,EAChBzI,EAAOwE,MAAO,EACdxE,EAAOsH,QAAQe,GAAUf,QAAQY,EAAmBjV,aACpD+M,EAAOsH,QAAQiB,GACfvI,EAAO4H,WAAWW,GAElBF,EAASQ,eAAkBC,IACvB,MAAMC,EAAUD,EAAME,YAAYhF,eAAe,GAC7Ctd,MAAMqT,UAAUkP,KAAKhO,KAAK8N,GAAUG,GAAsB,IAAXA,IAC/Cd,GAAQ,GAGRA,GAAQ,GAEZpI,EAAOxQ,OACP6Y,EAASQ,eAAiB,KAC1B7I,EAAO4H,WAAWS,GAClBA,EAAST,WAAWM,EAAmBjV,cAE3C+M,EAAOmJ,WC7BFC,GAAyB,CAACC,EAAQC,KAC3C,MAAMC,EAAS,IAAIC,IACnB,IAAK,MAAMC,KAASJ,EAChB,IAAK,MAAMnH,KAAauH,EAAO,CAC3B,MAAMC,EAAQH,EAAOrI,IAAIgB,GACzBqH,EAAOnI,IAAIc,OAAqBtT,IAAV8a,EAAsB,EAAIA,EAAQ,GAGhEH,EAAOnjB,SAAQ,CAACsjB,EAAOxH,IAAcoH,EAAQpH,EAAWwH,MCR/CC,GAAqBC,GACvB,YAAaA,ECAXC,GAAiCvG,IAC1C,MAAMV,EAAc,IAAI4G,IACE,IAAElC,EAiBGM,EAjB/BtE,EAAgBgE,SAAYA,EAgBzBhE,EAAgBgE,QAAQxL,KAAKwH,GAdrB,CAACrQ,EAAa2O,EAAS,EAAGzV,EAAQ,KACrC,MAAM2d,EAAcH,GAAkB1W,GAAeqU,EAAQrU,EAAa2O,EAAQzV,GAASmb,EAAQrU,EAAa2O,GAE1GmI,EAA2BnH,EAAY1B,IAAIjO,GASjD,YARiCrE,IAA7Bmb,EACAnH,EAAYxB,IAAInO,EAAa,CAAC,CAAE9G,QAAOyV,YAGnCmI,EAAyBpH,OAAOqH,GAAeA,EAAW7d,QAAUA,GAAS6d,EAAWpI,SAAWA,KACnGmI,EAAyB5b,KAAK,CAAEhC,QAAOyV,WAGxCkI,IAGfxG,EAAgBsE,YAAeA,EA6C5BtE,EAAgBsE,WA5CR,CAACqC,EAAqBrI,EAAQzV,KAEjC,GADAyb,EAAW5L,MAAMsH,QACW1U,IAAxBqb,EACArH,EAAYsH,aAEX,GAAmC,iBAAxBD,EACZ,IAAK,MAAOhX,EAAa8W,KAA6BnH,EAAa,CAC/D,MAAMuH,EAAsBJ,EAAyBxI,QAAQyI,GAAeA,EAAWpI,SAAWqI,IAC/D,IAA/BE,EAAoBxlB,OACpBie,EAAYnB,OAAOxO,GAGnB2P,EAAYxB,IAAInO,EAAakX,QAIpC,GAAIvH,EAAYR,IAAI6H,GACrB,QAAerb,IAAXgT,EACAgB,EAAYnB,OAAOwI,OAElB,CACD,MAAMF,EAA2BnH,EAAY1B,IAAI+I,GACjD,QAAiCrb,IAA7Bmb,EAAwC,CACxC,MAAMI,EAAsBJ,EAAyBxI,QAAQyI,GAAeA,EAAWpI,SAAWA,IAAWoI,EAAW7d,QAAUA,QAAmByC,IAAVzC,KACxG,IAA/Bge,EAAoBxlB,OACpBie,EAAYnB,OAAOwI,GAGnBrH,EAAYxB,IAAI6I,EAAqBE,IAKrD,IAAK,MAAOlX,EAAa8W,KAA6BnH,EAClDmH,EAAyB3jB,SAAS4jB,IAC1BL,GAAkB1W,GAClBqQ,EAAgBgE,QAAQrU,EAAa+W,EAAWpI,OAAQoI,EAAW7d,OAGnEmX,EAAgBgE,QAAQrU,EAAa+W,EAAWpI,cCkBlEwI,GAA0B,CAACpK,EAAQqK,EAAWpX,EAAa2O,EAAQzV,KACrE,MAAOme,EAAUC,GAnBoB,EAACvK,EAAQ/M,EAAa2O,EAAQzV,KACnE,MAAM,aAAEuW,EAAY,cAAEf,GAAkBiD,EAAwB3R,GAC1D2T,EAAwBW,EAA4B7E,EAAavW,GAAQ6T,EAAQ4B,GACvF,OAA8B,OAA1BgF,EAEO,CADwBlF,EAAwCC,EAAe3B,EAAQ4B,EAAQzV,GACvE,IAAI,GAEhC,CAACya,EAAsB,IAAI,IAYL4D,CAAiCxK,EAAQ/M,EAAa2O,EAAQzV,GAO3F,GANiB,OAAbme,IACA7C,EAA+BzH,EAAQsK,IACnCC,GAAaF,GAActC,GAAe/H,IAC1C2H,EAA6CE,EAAmB7H,GAAS6H,EAAmB5U,GAAc2O,EAAQzV,IAGtHmY,EAAkBrR,GAAc,CAChC,MAAM,aAAEyP,GAAiBkC,EAAwB3R,GACjDwP,EAAuCxP,EAAayP,KAGtD+H,GAA2B,CAACzK,EAAQqK,EAAWpX,EAAa2O,KAC9D,MAAO0I,EAAUC,GAvBqB,EAACvK,EAAQ/M,EAAa2O,KAC5D,MAAM,aAAEc,EAAY,cAAEf,GAAkBkD,EAAyB5R,GAC3D2T,EAAwBW,EAA4B7E,EAAc1C,EAAQ4B,GAChF,OAA8B,OAA1BgF,EAEO,CADwBc,EAAyC/F,EAAe3B,EAAQ4B,GAChE,IAAI,GAEhC,CAACgF,EAAsB,IAAI,IAgBL8D,CAAkC1K,EAAQ/M,EAAa2O,GACnE,OAAb0I,IACA7C,EAA+BzH,EAAQsK,IACnCC,GAAaF,GAActC,GAAe/H,IAC1C6H,EAAmB7H,GAAQ4H,WAAWE,GAAoB7U,GAAc2O,KChG7E,MAAM+I,GACTve,YAAY+Y,GACR1hB,KAAKmnB,KAAO,IAAIpB,IAAIrE,GAExB,WACI,OAAO1hB,KAAKmnB,KAAK5I,KAErB6I,UACI,OAAOpnB,KAAKmnB,KAAKC,UAErBzkB,QAAQ0I,EAAUgc,EAAU,MACxB,OAAOrnB,KAAKmnB,KAAKxkB,SAAQ,CAACxC,EAAOyC,IAAQyI,EAASmM,KAAK6P,EAASlnB,EAAOyC,EAAK5C,QAEhFyd,IAAIvU,GACA,OAAOlJ,KAAKmnB,KAAK1J,IAAIvU,GAEzByV,IAAIzV,GACA,OAAOlJ,KAAKmnB,KAAKxI,IAAIzV,GAEzBxG,OACI,OAAO1C,KAAKmnB,KAAKzkB,OAErB2O,SACI,OAAOrR,KAAKmnB,KAAK9V,UCrBzB,MAAM,GAAkB,CACpBgO,aAAc,EAEdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB,EAChBC,gBAAiB,EACjBC,cAAe,GACfC,iBAAkB,ICVf,SAASC,GAAgBpH,EAEhCqH,EAAQ/kB,EAAKglB,EAAeC,GACxB,GAA2C,mBAAhCvH,EAAYoH,gBAEY,IAA3BC,EAAO/kB,GAAKklB,aACZH,EAAO/kB,GAAO,IAAI0R,aAAa,MAEnCgM,EAAYoH,gBAAgBC,EAAO/kB,GAAMglB,EAAeC,OAGvD,CACD,MAAM3C,EAAc5E,EAAYC,eAAeqH,GAE/C,GAA+B,IAA3BD,EAAO/kB,GAAKklB,WACZH,EAAO/kB,GAAOsiB,EAAY/jB,MAAM0mB,EAAcA,EAAe,SAE5D,CACD,MAAME,EAAc,IAAIzT,aAAa4Q,EAAYpE,OAAQ+G,EAAevT,aAAa0T,kBAAmB,KACxGL,EAAO/kB,GAAK+a,IAAIoK,KCnBrB,MAAM7H,GAAgB,CAACI,EAAaqH,EAAQ/kB,EAAKglB,EAAeC,KAC1B,mBAA9BvH,EAAYJ,cAEY,IAA3ByH,EAAO/kB,GAAKklB,YACZxH,EAAYJ,cAAcyH,EAAO/kB,GAAMglB,EAAeC,GAM3B,IAA3BF,EAAO/kB,GAAKklB,YACZxH,EAAYC,eAAeqH,GAAejK,IAAIgK,EAAO/kB,GAAMilB,ICX1DI,GAAqB,CAACC,EAAGC,KAClC,MAAMC,EAAS,GACf,IAAK,IAAIhnB,EAAI,EAAGA,EAAI8mB,EAAG9mB,GAAK,EAAG,CAC3B,MAAMinB,EAAQ,GACRnnB,EAAsB,iBAANinB,EAAiBA,EAAIA,EAAE/mB,GAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAC7BgnB,EAAM3d,KAAK,IAAI4J,aAAa,MAEhC8T,EAAO1d,KAAK2d,GAEhB,OAAOD,GCJLE,GAAgBC,MAAOC,EAAOC,EAAgBC,EAA2B9mB,EAAS+mB,EAAoBC,EAAsBC,KAG9H,MAAM3nB,EAA4B,OAAnBunB,EAAkE,IAAxClkB,KAAK+O,KAAKkV,EAAMzI,QAAQ7e,OAAS,KAAaunB,EAAevnB,OAChG4nB,EAAwBlnB,EAAQyd,aAAezd,EAAQ0lB,eACvDyB,EAAyBJ,EAAmBK,QAAO,CAACC,EAAK9oB,IAAU8oB,EAAM9oB,GAAO,GAChF+oB,EAA6C,IAA3BH,EAClB,KACAL,EAA0BzD,aAAa8D,EAAwB7nB,EAAQwnB,EAA0BS,YACvG,QAA6Bhe,IAAzByd,EACA,MAAM,IAAI/mB,MAAM,sCAEpB,MAAMunB,EAAuBjI,EAAwBqH,GAC/Ca,OChB8B,EAACX,EAA2BF,KAChE,MAAMc,EAAqB9L,EAAetB,EAAwBwM,GAC5Da,EAAyBnF,EAAmBoE,GAClD,OAAOhL,EAAe8L,EAAoBC,IDaNC,CAAyBd,EAA2BF,GAClF5E,EAASqE,GAAmBrmB,EAAQ0lB,eAAgB1lB,EAAQyd,cAC5DoK,EAAUxB,GAAmBrmB,EAAQ2lB,gBAAiBoB,GACtDjH,EAAaze,MAAMY,KAAK2kB,EAAM9G,WAAWhf,QAAQsmB,QAAO,CAACU,EAAQxgB,KAAS,IAAMwgB,EAAQ,CAACxgB,GAAO,IAAIoL,aAAa,QAAS,IAChI,IAAK,IAAIlT,EAAI,EAAGA,EAAIF,EAAQE,GAAK,IAAK,CAClC,GAAIQ,EAAQ0lB,eAAiB,GAAwB,OAAnBmB,EAC9B,IAAK,IAAIpnB,EAAI,EAAGA,EAAIO,EAAQ0lB,eAAgBjmB,GAAK,EAC7C,IAAK,IAAIkB,EAAI,EAAGA,EAAIX,EAAQyd,aAAc9c,GAAK,EAC3CmlB,GAAgBe,EAAgB7E,EAAOviB,GAAIkB,EAAGA,EAAGnB,QAIX+J,IAA9Cyd,EAAqB1L,sBAAyD,OAAnBuL,GAC3DG,EAAqB1L,qBAAqBva,SAAQ,EAAGuG,QAAQoJ,KACzDoV,GAAgBe,EAAgB/G,EAAYxY,EAAM4f,EAAwBxW,EAAOlR,MAGzF,IAAK,IAAIC,EAAI,EAAGA,EAAIO,EAAQ0lB,eAAgBjmB,GAAK,EAC7C,IAAK,IAAIkB,EAAI,EAAGA,EAAIomB,EAAmBtnB,GAAIkB,GAAK,EAEX,IAA7BknB,EAAQpoB,GAAGkB,GAAGulB,aACd2B,EAAQpoB,GAAGkB,GAAK,IAAI+R,aAAa,MAI7C,IACI,MAAMqV,EAAyB/F,EAAOzgB,KAAI,CAACuF,EAAO4J,IACQ,IAAlD8W,EAAqBnK,aAAa3M,GAAOiM,KAClC,GAEJ7V,IAELkhB,EAAmBf,EAAiCznB,EAAIsnB,EAA0BS,WAAYT,EAA0BS,YAAY,IAAME,EAAsBQ,QAAQF,EAAwBF,EAAS/H,KAC/M,GAAwB,OAApBwH,EACA,IAAK,IAAI7nB,EAAI,EAAGyoB,EAAkC,EAAGzoB,EAAIO,EAAQ2lB,gBAAiBlmB,GAAK,EAAG,CACtF,IAAK,IAAIkB,EAAI,EAAGA,EAAIomB,EAAmBtnB,GAAIkB,GAAK,EAC5C2d,GAAcgJ,EAAiBO,EAAQpoB,GAAIkB,EAAGunB,EAAkCvnB,EAAGnB,GAEvF0oB,GAAmCnB,EAAmBtnB,GAG9D,IAAKuoB,EACD,MAGR,MAAOG,GACHvB,EAAMwB,cAAc,IAAIC,WAAW,iBAAkB,CACjDC,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,SAChBC,OAAQL,EAAMK,OACdC,QAASN,EAAMM,WAEnB,OAGR,OAAOnB,GEzEL,GAAkB,CACpBtH,EAAG,EACHvC,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBsC,OAAQ,EACRC,UAAW,IACXC,KAAM,EACN9f,KAAM,WCTJ,GAAkB,CACpBod,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB,GCJd,GAAkB,CACpBjI,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiB,GCAf,GAAkB,CACpBlI,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvB0C,OAAQ,GCRN,GAAkB,CACpBnB,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvB+K,sBAAsB,GCLpB,GAAkB,CACpBjL,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBgL,UAAW,EACXC,aAAc,GCJZC,GAA4B,CAACtK,EAAsBuK,EAAkBvM,KACvE,MAAMwM,EAAkBD,EAAiBvM,GACzC,QAAwBhT,IAApBwf,EACA,MAAMxK,IAEV,OAAOwK,GCNL,GAAkB,CACpBC,OAAQ,KACRvL,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBsL,KAAM,GACNC,MAAO,GACPC,QAAS,IACTC,WAAY,ICPV,GAAkB,CACpB3L,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBwC,KAAM,GCLGkJ,GAA0B,IAAM,IAAI7K,aAAa,GAAI,qBCArD8K,GAA2B,IAAM,IAAI9K,aAAa,GAAI,sBCC7D,GAAkB,CACpBf,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,YCDd4L,GAAe,CAACC,EAAUC,EAAgBC,EAAaC,EAAmBC,EAAWC,EAASC,EAASC,EAAaC,EAAcljB,EAAOyV,KAClJ,MAAM0N,EAAcnjB,EAAMxH,OAC1B,IAAIE,EAAIuqB,EACR,IAAK,IAAItqB,EAAI,EAAGA,EAAIwqB,EAAaxqB,GAAK,EAAG,CACrC,IAAI8mB,EAAImD,EAAY,GAAK5iB,EAAMrH,GAC/B,IAAK,IAAIkB,EAAI,EAAGA,EAAIipB,EAAWjpB,GAAK,EAAG,CACnC,MAAM2lB,EAAK9mB,EAAImB,EAAMqpB,EAAe,EACpCzD,GAAKmD,EAAY/oB,GAAKkpB,EAAQvD,GAC9BC,GAAKiD,EAAS7oB,GAAKmpB,EAAQxD,GAE/B,IAAK,IAAI3lB,EAAIipB,EAAWjpB,EAAIgpB,EAAmBhpB,GAAK,EAChD4lB,GAAKmD,EAAY/oB,GAAKkpB,EAASrqB,EAAImB,EAAMqpB,EAAe,GAE5D,IAAK,IAAIrpB,EAAIipB,EAAWjpB,EAAI8oB,EAAgB9oB,GAAK,EAC7C4lB,GAAKiD,EAAS7oB,GAAKmpB,EAAStqB,EAAImB,EAAMqpB,EAAe,GAEzDH,EAAQrqB,GAAKsH,EAAMrH,GACnBqqB,EAAQtqB,GAAK+mB,EACb/mB,EAAKA,EAAI,EAAMwqB,EAAe,EAC9BzN,EAAO9c,GAAK8mB,EAEhB,OAAO/mB,GCxBL,GAAkB,CACpBie,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YCHduM,GAAsBhM,IAE/B,MAAMiM,EAAc,IAAIC,YAAY,CAAC,WAAY,GAAI,WAAY,UAAW,GAAI,OAAQ,MAAO,OAAQ,QAAS,WAAY,EAAG,IAC/H,IAEI,MAAMC,EAAUnM,EAAcoM,gBAAgBH,EAAYjL,QAAQ,SAGlE,YAAgB3V,IAAZ8gB,IAGJA,EAAQE,OAAM,UAGP,GAEX,OAGA,OAAO,GCjBL,GAAkB,CACpBzL,iBAAkB,GCHT0L,GAA8B,CAACvM,EAAiBje,EAASyqB,KAClE,MAAMlsB,EAAQyB,EAAQyqB,QACRlhB,IAAVhL,GAAuBA,IAAU0f,EAAgBwM,KACjDxM,EAAgBwM,GAAUlsB,ICFrBmsB,GAA+B,CAACzM,EAAiBje,KAC1DwqB,GAA4BvM,EAAiBje,EAAS,gBACtDwqB,GAA4BvM,EAAiBje,EAAS,oBACtDwqB,GAA4BvM,EAAiBje,EAAS,0BCJ7C2qB,GAAuDC,GACJ,mBAA9CA,EAAmBC,uBCDxBC,GAAuC,CAAC7M,EAAiBje,EAASyf,KAC3E,MAAMlhB,EAAQyB,EAAQyf,QACRlW,IAAVhL,GAAuBA,IAAU0f,EAAgBwB,GAAYlhB,QAC7D0f,EAAgBwB,GAAYlhB,MAAQA,ICH/BwsB,GAA6DC,IAC/B,IAAElH,EAAzCkH,EAA+BlH,OAAUA,EAQtCkH,EAA+BlH,MAPvB,CAACmH,EAAO,EAAG5K,EAAS,EAAG3Q,KAC1B,GAAyB,iBAAbA,GAAyBA,EAAW,GAAM2Q,EAAS,GAAK4K,EAAO,EACvE,MAAM,IAAIC,WAAW,qCAGzBpH,EAAMlO,KAAKoV,EAAgCC,EAAM5K,EAAQ3Q,MCPxDyb,GAA4DH,IAC/B,IAAE7gB,EAAxC6gB,EAA+B7gB,MAASA,EAOrC6gB,EAA+B7gB,KANvB,CAAC8gB,EAAO,KACX,GAAIA,EAAO,EACP,MAAM,IAAIC,WAAW,oCAEzB/gB,EAAKyL,KAAKoV,EAAgCC,MCNzCG,GAAoB,CAACC,EAAa9D,IACvB,OAAhB8D,EACO,IAEJ1oB,KAAK2oB,IAAI,IAAK3oB,KAAK4oB,IAAI,MAAO5oB,KAAKC,IAAI,EAAGD,KAAKoD,MAAMpD,KAAK6oB,KAAKH,EAAc9D,OCD3EkE,GAA+B,CAACvN,EAAele,KACxD,MAAM0rB,EAAyBxN,EAAcyN,qBAO7C,OANAjB,GAA6BgB,EAAwB1rB,GACrD8qB,GAAqCY,EAAwB1rB,EAAS,KACtE8qB,GAAqCY,EAAwB1rB,EAAS,UACtE8qB,GAAqCY,EAAwB1rB,EAAS,aACtE8qB,GAAqCY,EAAwB1rB,EAAS,QACtEwqB,GAA4BkB,EAAwB1rB,EAAS,QACtD0rB,GCTEE,GAAkC,CAAC1N,EAAele,KAC3D,MAAM6rB,EAA4B3N,EAAc4N,sBAAsB9rB,EAAQ2lB,iBAO9E,OAHA+E,GAA6BmB,EAA2B7rB,GCNrB,CAAC+rB,IACpC,MAAMtO,EAAesO,EAAoBpG,gBAEzCtnB,OAAOC,eAAeytB,EAAqB,eAAgB,CACvDlQ,IAAK,IAAM4B,EACX1B,IAAMxd,IACF,GAAIA,IAAUkf,EACV,MAAM4L,QAKlBhrB,OAAOC,eAAeytB,EAAqB,mBAAoB,CAC3DlQ,IAAK,IAAM,WACXE,IAAMxd,IACF,GAAc,aAAVA,EACA,MAAM8qB,QAKlBhrB,OAAOC,eAAeytB,EAAqB,wBAAyB,CAChElQ,IAAK,IAAM,WACXE,IAAMxd,IACF,GAAc,aAAVA,EACA,MAAM8qB,SDjBlB2C,CAAwBH,GACjBA,GEVEI,GAAuB,CAACC,EAAUC,KAC3CD,EAASjK,QAAUkK,EAAYlK,QAAQxL,KAAK0V,GAC5CD,EAAS3J,WAAa4J,EAAY5J,WAAW9L,KAAK0V,GAC3CD,GCDEE,GAAwB,CAAClO,EAAele,KACjD,MAAMqsB,EAAkBnO,EAAcoO,YAAYtsB,EAAQ4oB,cAG1D,OAFA8B,GAA6B2B,EAAiBrsB,GAC9C8qB,GAAqCuB,EAAiBrsB,EAAS,aACxDqsB,GCJEE,GAAuB,CAACrO,EAAele,KAChD,MAAMwsB,EAAiBtO,EAAciF,aAGrC,OAFAuH,GAA6B8B,EAAgBxsB,GAC7C8qB,GAAqC0B,EAAgBxsB,EAAS,QACvDwsB,GCHX,SAASC,GAAO/pB,EAAGwK,GACf,MAAMwf,EAAcxf,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAC3C,MAAO,EAAExK,EAAE,GAAKwK,EAAE,GAAKxK,EAAE,GAAKwK,EAAE,IAAMwf,GAAchqB,EAAE,GAAKwK,EAAE,GAAKxK,EAAE,GAAKwK,EAAE,IAAMwf,GAKrF,SAASC,GAAmBC,EAAaC,GACrC,IAAIluB,EAAS,CAAC,EAAG,GACjB,IAAK,IAAIa,EAAIotB,EAAYttB,OAAS,EAAGE,GAAK,EAAGA,GAAK,EALjC0N,EAMa2f,EAA1BluB,EALG,EADO+D,EAMQ/D,GALZ,GAAKuO,EAAE,GAAKxK,EAAE,GAAKwK,EAAE,GAAIxK,EAAE,GAAKwK,EAAE,GAAKxK,EAAE,GAAKwK,EAAE,IAMtDvO,EAAO,IAAMiuB,EAAYptB,GAPjC,IAAkBkD,EAAGwK,EASjB,OAAOvO,EAEJ,MClBMmuB,GAAkC,CAAC5O,EAAe6O,EAAY7F,EAAuBC,IACvFjJ,EAAc+E,sBAAsB8J,EAAY7F,EAAuBC,GCDrE6F,GAA0B,IAAM,IAAIxO,aAAa,GAAI,qBCE5D,GAAkB,CACpBM,iBAAkB,GCAhB,GAAkB,CACpBrB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBsC,OAAQ,EACRC,UAAW,IACX+M,kBAAc1jB,EACdlJ,KAAM,QCTJ,GAAkB,CACpBod,aAAc,EACdC,iBAAkB,cAClBC,sBAAuB,WACvBuP,eAAgB,IAChBC,eAAgB,IAChBC,cAAe,EACfC,cAAe,UACfC,YAAa,IACbC,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,aAAc,aACdC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,cAAe,GClBb,GAAkB,CACpBrF,sBAAsB,GCDpB,GAAkB,CACpBjL,aAAc,EAKdC,iBAAkB,WAClBC,sBAAuB,WACvB8C,IAAK,GCRIuN,GAAqB,IAAM,IAAIxP,aAAa,GAAI,gBCAvD,GAAkB,CACpBf,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBsQ,MAAO,KACPC,WAAY,QCLHC,GAAaF,IACtB,GAAc,OAAVA,EACA,OAAO,EAEX,MAAM3uB,EAAS2uB,EAAM3uB,OACrB,OAAIA,EAAS,GAAM,EAC0B,IAAlC2uB,EAAMtrB,KAAK6O,MAAMlS,EAAS,IAE9B2uB,EAAM3uB,EAAS,EAAI,GAAK2uB,EAAM3uB,EAAS,KAAO,GCR5C8uB,GAAqB,CAACC,EAAQC,EAAUC,EAAcC,KAC/D,IAAI9Z,EAAYrW,OAAOowB,eAAeJ,GACtC,MAAQ3Z,EAAUga,eAAeJ,IAC7B5Z,EAAYrW,OAAOowB,eAAe/Z,GAEtC,MAAM,IAAEmH,EAAG,IAAEE,GAAQ1d,OAAOswB,yBAAyBja,EAAW4Z,GAChEjwB,OAAOC,eAAe+vB,EAAQC,EAAU,CAAEzS,IAAK0S,EAAa1S,GAAME,IAAKyS,EAAazS,MCN3E6S,GAA8B,CAACnP,EAAYlhB,EAAOgR,KAC3D,IACIkQ,EAAWoP,eAAetwB,EAAOgR,GAErC,MAAO2F,GACH,GAAiB,IAAbA,EAAI2J,KACJ,MAAM3J,EAEV0Z,GAA4BnP,EAAYlhB,EAAOgR,EAAY,QCRtDuf,GAAoE5Q,IAC7E,MAAM6Q,EAA8B7Q,EAAc8Q,mBAClD,IACID,EAA4BjL,OAAO,GAEvC,MAAO5O,GACH,OAAOA,aAAegW,WAE1B,OAAO,GCRE+D,GAAiE/Q,IAC1E,MAAMG,EAAoBH,EAAcmF,aAAa,EAAG,EAAG,OACrD0L,EAA8B7Q,EAAcqF,qBAClDwL,EAA4B7P,OAASb,EACrC0Q,EAA4BjL,QAC5BiL,EAA4B5kB,OAC5B,IAEI,OADA4kB,EAA4B5kB,QACrB,EAEX,MACI,OAAO,ICXF+kB,GAAmEhR,IAC5E,MAAM6Q,EAA8B7Q,EAAc8Q,mBAClD,IACID,EAA4B5kB,MAAM,GAEtC,MAAO+K,GACH,OAAOA,aAAegW,WAE1B,OAAO,GCsBEiE,GAAqC,KAC9C,IACI,IAAI3Q,aAER,MACI,OAAO,EAEX,OAAO,GCpCE4Q,GAA2B,IAAM,IAAItM,SAASC,IACvD,MAAMsM,EAAc,IAAIC,YAAY,IAC9B,MAAEC,EAAK,MAAEC,GAAU,IAAIC,eAC7BF,EAAMG,UAAY,EAAGC,UAAW5M,EAAiB,OAAT4M,GACxCH,EAAMI,YAAYP,EAAa,CAACA,OCJvBQ,GAAyD,CAAC7E,EAAgC9M,KACnG,MAAMsO,EAAiBtO,EAAciF,aACrC6H,EAA+B/I,QAAQuK,GACvC,MAAMsD,GAAuBvN,EAM1ByI,EAA+BzI,WALvB,KAEHA,EAAW3M,KAAKoV,EAAgCwB,GAChDxB,EAA+B+E,oBAAoB,QAASD,KAJzC,IAAEvN,EAO7ByI,EAA+BgF,iBAAiB,QAASF,GACzD7D,GAAqBjB,EAAgCwB,GACrDxB,EAA+B7gB,KAAO,CAAEA,IACpC,IAAI8lB,GAAY,EAChB,MAAO,CAAChF,EAAO,KACX,GAAIgF,EACA,IACI9lB,EAAKyL,KAAKoV,EAAgCC,GAE9C,MACIuB,EAAerM,KAAK0O,eAAe,EAAG5D,QAI1C9gB,EAAKyL,KAAKoV,EAAgCC,GAC1CgF,GAAY,IAbc,CAgBnCjF,EAA+B7gB,OC7BzB+lB,GAAoB,CAACngB,EAAQkN,IAC9BwG,IACJ,MAAMrP,EAAa,CAAE7V,MAAOwR,GAK5B,OAJA1R,OAAO8xB,iBAAiB1M,EAAO,CAC3B2M,cAAehc,EACfrE,OAAQqE,IAEiB,mBAAlB6I,EACAA,EAAcrH,KAAK7F,EAAQ0T,GAE/BxG,EAAcoT,YAAYza,KAAK7F,EAAQ0T,ICkMhD6M,GC5MmD,CAACpP,GAC/C,CAAC7D,EAAc1C,GAAS4B,EAAQzV,EAAOmW,GAAgBmE,KAC1DF,EAAmB7D,EAAavW,GAAQ,CAAC6T,EAAQ4B,EAAQU,IAAiBsE,GAA0BA,EAAsB,KAAO5G,GAAU4G,EAAsB,KAAOhF,GAAQ6E,ID0M5ImP,CAA0CrP,GAChFsP,GE7MoD,CAACtP,GAChD,CAAC5E,EAAexV,GAAQ6T,EAAQ4B,EAAQU,GAAgBmE,KAC3D,MAAM5E,EAA0BF,EAAcT,IAAIlB,QAClBpR,IAA5BiT,EACAF,EAAcP,IAAIpB,EAAQ,IAAI8G,IAAI,CAAC,CAAClF,EAAQzV,EAAOmW,MAGnDiE,EAAmB1E,EAAyB,CAACD,EAAQzV,EAAOmW,IAAiBP,GAA2BA,EAAuB,KAAOH,GAAUG,EAAuB,KAAO5V,GAAOsa,IFsMpJqP,CAA2CvP,GAClFwP,GG9MsD,CAAC5U,GAClD,CAACuB,EAAc1C,EAAQ4B,EAAQzV,IAC3BgV,EAAmBuB,EAAavW,IAASya,GAA0BA,EAAsB,KAAO5G,GAAU4G,EAAsB,KAAOhF,IH4MvGoU,CAA6C7U,GACtF8U,GAAyB,IAAI9W,QAC7B+W,GIhNoC,CAACD,GAC/B/T,IAAgB,IAAIpV,EAAI,OAAwD,QAAhDA,EAAKmpB,EAAuB/U,IAAIgB,UAA+B,IAAPpV,EAAgBA,EAAK,GJ+M5FqpB,CAA2BF,IAClDG,IKjNgCC,GLiNQ,IAAI7M,IKjNE8M,GLiNK,IAAInX,QKhNlD,CAACoX,EAAQrb,KACZ,MAAMsb,EAAmBF,GAAYpV,IAAIqV,GACzC,QAAyB3nB,IAArB4nB,EACA,OAAOA,EAEX,MAAMC,EAAcJ,GAAanV,IAAIqV,GACrC,QAAoB3nB,IAAhB6nB,EACA,OAAOA,EAEX,IACI,MAAMC,EAAwBxb,IAC9B,OAAIwb,aAAiCvO,SACjCkO,GAAajV,IAAImV,EAAQG,GAClBA,EACF9G,OAAM,KAAM,IACZ+G,MAAMC,IACPP,GAAa5U,OAAO8U,GACpBD,GAAYlV,IAAImV,EAAQK,GACjBA,OAGfN,GAAYlV,IAAImV,EAAQG,GACjBA,GAEX,MAEI,OADAJ,GAAYlV,IAAImV,GAAQ,IACjB,KA3BkB,IAACF,GAAcC,GLkNpD,MAAM,GMlN+C,oBAAX/a,OAAyB,KAAOA,ONmNpEsb,GO/MyC,EAACT,EAAiBxS,IACtD,CAACL,EAAele,KACnB,MAAM4qB,EAAqB1M,EAAcuT,iBAIzC,GAFA/G,GAA6BE,EAAoB5qB,KAE3CA,EAAQ6d,YAAc7d,EAAQ8d,aAChC,MAAMS,IAUV,OARAiM,GAA4BI,EAAoB5qB,EAAS,WACzDwqB,GAA4BI,EAAoB5qB,EAAS,eACzDwqB,GAA4BI,EAAoB5qB,EAAS,eACzDwqB,GAA4BI,EAAoB5qB,EAAS,yBAEpD+wB,EAAgBpG,IAAqD,IAAMA,GAAoDC,MClBhF,CAACA,IACzDA,EAAmBC,uBAA0BpE,IACzC,MAAMiL,EAAqB,IAAIC,WAAWlL,EAAMnnB,QAChDsrB,EAAmBgH,sBAAsBF,GACzC,MAAMpyB,EAASqD,KAAK2oB,IAAIoG,EAAmBpyB,OAAQsrB,EAAmBhN,SACtE,IAAK,IAAIpe,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC7BinB,EAAMjnB,GAAqC,UAA/BkyB,EAAmBlyB,GAAK,KAExC,OAAOinB,IDWHoL,CAA6CjH,GAE1CA,GP8LkBkH,CAAgCf,GAAiBxS,GAC5EwT,GSpNoC,CAACxS,GAC/B1C,IACJ,MAAM2K,EAAuBjI,EAAwB1C,GACrD,GAAsC,OAAlC2K,EAAqBwK,SACrB,MAAM,IAAI/xB,MAAM,mEAEpB,OAAOunB,EAAqBwK,UT8MPC,CAA2B1S,GAClD2S,GUrNuC,EAAC3S,EAAyBwS,EAAsBrP,IAClFiE,MAAO9J,EAAWiK,EAA2B7I,EAAiBlH,KACjE,MAAMyQ,EAAuBjI,EAAwB1C,GAC/CsV,EAAY,IAAIpb,EAAO8F,SACvBiG,QAAQsP,IAAI5K,EAAqBnK,aAClC9b,KAAI,CAACgc,EAAazW,IAAUzF,MAAMY,KAAKsb,GACvCrB,QAAO,EAAEvB,MAAawX,EAAUxS,SAAShF,KACzCpZ,KAAIolB,OAAQhM,EAAQ4B,MACrB,MAAM8V,EAAoBN,EAAqBpX,GACzC2X,QAAgCD,EAAkBE,OAAO5X,EAAQmM,EAA2BqL,GAC5FvkB,EAAciP,EAAUsB,QAAQvQ,YACjC8U,EAAe/H,IAAYkC,IAAcjP,GAAgB8U,EAAe7F,IACzEyV,EAAwBrQ,QAAQhE,EAAiB1B,EAAQzV,QAG5DsgB,QAAO,CAACoL,EAAsBC,IAAsB,IAAID,KAAyBC,IAAoB,MVsMlFC,CAA8BnT,EAAyBwS,GAAsBrP,IACvGiQ,GWrN2C,EAACnB,EAA0BhP,EAAoB0P,IACrF,KACH,MAAMU,EAA8B,IAAI9Y,QAqBxC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAM8b,EAA6BD,EAA4B/W,IAAIiL,GACnE,YAAmCvd,IAA/BspB,EACO/P,QAAQC,QAAQ8P,GAxBRlM,OAAOC,EAAOE,EAA2B/P,KAChE,IAAI6T,EAAqBpI,EAAmBoE,GAG5C,IAD2C5I,EAAiB4M,EAAoB9D,GACvC,CACrC,MAAM9mB,EAAU,CACZyd,aAAcmN,EAAmBnN,aACjCC,iBAAkBkN,EAAmBlN,iBACrCC,sBAAuBiN,EAAmBjN,sBAC1CC,QAASgN,EAAmBhN,QAC5BC,YAAa+M,EAAmB/M,YAChCC,YAAa8M,EAAmB9M,YAChCC,sBAAuB6M,EAAmB7M,uBAE9C6M,EAAqB4G,EAAyB1K,EAA2B9mB,GAI7E,OAFA4yB,EAA4B7W,IAAI+K,EAA2B8D,SACrDsH,EAAwBtL,EAAOE,EAA2B8D,EAAoB7T,GAC7E6T,GAQIkI,CAAmBlM,EAAOE,EAA2B/P,MXwLzCgc,CAAkCvB,GAA0BhP,EAAoB0P,IAC7Gc,IYtNiCC,GZsNS/Y,EYrNpCiE,IACJ,MAAMD,EAAgB+U,GAAapX,IAAIsC,GACvC,QAAsB5U,IAAlB2U,EACA,MAAMmL,KAEV,OAAO,IANuB,IAAC4J,GZuNvC,MAAMC,GaxNoD,CAAChd,GACxC,OAAXA,EACO,KAEPA,EAAOwY,eAAe,uBACfxY,EAAOid,oBAEXjd,EAAOwY,eAAe,6BAA+BxY,EAAOkd,0BAA4B,KbiNtDC,CAA2C,IAClFC,GczN2C,CAACJ,GACtCK,GAC4C,OAAzCL,GAAiDK,aAAoBL,EduNhDM,CAAkCN,IAChEO,GAA2B,IAAI3Z,QAC/B4Z,Ge3NsC,CAACxD,GAClC,MACHnpB,YAAY4sB,GACRv1B,KAAKu1B,mBAAqBA,EAC1Bv1B,KAAKw1B,WAAa,IAAI9Z,QAE1BkW,iBAAiB3vB,EAAM4kB,EAAUjlB,GAC7B,GAAiB,OAAbilB,EAAmB,CACnB,IAAI4O,EAAuBz1B,KAAKw1B,WAAW/X,IAAIoJ,QAClB1b,IAAzBsqB,IACAA,EAAuB3D,EAAkB9xB,KAAM6mB,GACvB,mBAAbA,GACP7mB,KAAKw1B,WAAW7X,IAAIkJ,EAAU4O,IAGtCz1B,KAAKu1B,mBAAmB3D,iBAAiB3vB,EAAMwzB,EAAsB7zB,IAG7EooB,cAAc3E,GACV,OAAOrlB,KAAKu1B,mBAAmBvL,cAAc3E,GAEjDsM,oBAAoB1vB,EAAM4kB,EAAUjlB,GAChC,MAAM6zB,EAAoC,OAAb5O,OAAoB1b,EAAYnL,KAAKw1B,WAAW/X,IAAIoJ,GACjF7mB,KAAKu1B,mBAAmB5D,oBAAoB1vB,OAA+BkJ,IAAzBsqB,EAAqC,KAAOA,EAAsB7zB,KfoMjG8zB,CAA6B5D,IACtD6D,GgB5N6C,CAAC7d,GACjC,OAAXA,EACO,KAEPA,EAAOwY,eAAe,gBACfxY,EAAO8d,aAEX9d,EAAOwY,eAAe,sBAAwBxY,EAAO+d,mBAAqB,KhBqN/CC,CAAoC,IACpEC,GiB7NoC,CAACJ,GAC/BR,GACqC,OAAlCQ,GAA0CR,aAAoBQ,EjB2NhDK,CAA2BL,IAClD,GkB9NiC,CAAC7d,GAC5Bqd,GACc,OAAXrd,GAA+C,mBAArBA,EAAOme,WAA4Bd,aAAoBrd,EAAOme,UlB4N7EC,CAAwB,IAC5CC,GmB/NkC,CAACre,GAC7Bqd,GACc,OAAXrd,GAAgD,mBAAtBA,EAAOse,YAA6BjB,aAAoBrd,EAAOse,WnB6N7EC,CAAyB,IAC9CC,GzD3EoC,EAACC,EAAyBC,EAA0B7D,EAAiB8D,EAA6BtW,EAAsB+K,EAA0B0D,EAAyB8H,EAAuBC,EAAcrB,EAAwBV,EAAkBmB,EAAsB7P,EAAmBiQ,EAAoBjB,IACtV,cAAwBI,EAC3B3sB,YAAYoX,EAAS+G,EAAUjH,EAAiBoU,GAC5C2C,MAAM/W,GACN7f,KAAK62B,SAAW9W,EAChB/f,KAAK82B,iBAAmBjX,EACxB,MAAMC,EAAgB8U,EAAiB7U,GAEnCgW,EAAqBjW,KACrB,IACI6S,EAAgBnO,IAAsC,IAC3CA,GAAqC1E,MAEpDsG,GAA8BvG,GAElClE,EAAiBgC,IAAI3d,KAAM6f,GAC3B9D,EAAgB4B,IAAI3d,KAAM,IAAIqjB,KACR,WAAlBtD,EAAQgX,OAAsBjQ,GAC9BpI,EAAyB1e,MAE7Bu2B,EAAwBv2B,KAAMi0B,EAAmBpU,GAErD,mBACI,OAAO7f,KAAK82B,iBAAiBzX,aAEjC,iBAAiBlf,GACbH,KAAK82B,iBAAiBzX,aAAelf,EAEzC,uBACI,OAAOH,KAAK82B,iBAAiBxX,iBAEjC,qBAAqBnf,GACjBH,KAAK82B,iBAAiBxX,iBAAmBnf,EAE7C,4BACI,OAAOH,KAAK82B,iBAAiBvX,sBAEjC,0BAA0Bpf,GACtBH,KAAK82B,iBAAiBvX,sBAAwBpf,EAElD,cACI,OAAOH,KAAK62B,SAEhB,qBACI,OAAO72B,KAAK82B,iBAAiBxP,eAEjC,sBACI,OAAOtnB,KAAK82B,iBAAiBvP,gBAGjC1D,QAAQrU,EAAa2O,EAAS,EAAGzV,EAAQ,GAErC,GAAIyV,EAAS,GAAKA,GAAUne,KAAK82B,iBAAiBvP,gBAC9C,MAAMpH,IAEV,MAAML,EAAgB8U,EAAiB50B,KAAK62B,UACtCjQ,EAAYsO,EAA4BpV,GAC9C,GAAIoG,EAAkB1W,IAAgB2mB,EAAmB3mB,GACrD,MAAM0b,IAEV,GAAIxI,EAAYlT,GAAc,CAC1B,MAAMkU,EAA6BU,EAAmB5U,GACtD,IACI,MAAM+W,EAAa/C,EAAwCxjB,KAAK82B,iBAAkBpT,EAA4BvF,EAAQzV,GAChHsuB,EAAYzS,GAAmBvkB,OACjC4mB,GAAaoQ,IACbh3B,KAAK82B,iBAAiB3S,cAAcoC,GAEb,WAAvBvmB,KAAK+f,QAAQgX,QAAuBC,GAAazS,GAAmB/U,IACpEkP,EAAyBlP,GAGjC,MAAOsH,GAEH,GAAiB,KAAbA,EAAI2J,KACJ,MAAMyK,IAEV,MAAMpU,EAIV,GAFmC0f,EAAyBx2B,KAAMwP,EAAa2O,EAAQzV,EAAOke,GAE9D,CAC5B,MAAMhB,EAAS+Q,EAAa,CAAC32B,MAAOwP,GACpCmW,GAAuBC,EAAQ6Q,EAA4B7P,IAE/D,OAAOpX,EAEX,MAAMynB,EAAmB5S,GAAoB7U,GAM7C,GAA8B,iBAA1BynB,EAAiB/tB,KACjB,MAAM0lB,IAEV,IACI5uB,KAAK82B,iBAAiBjT,QAAQoT,EAAkB9Y,IAC5CyI,GAAarC,GAAmBvkB,QAChCA,KAAK82B,iBAAiB3S,WAAW8S,EAAkB9Y,GAG3D,MAAOrH,GAEH,GAAiB,KAAbA,EAAI2J,KACJ,MAAMyK,IAEV,MAAMpU,EAIV,GA1OoC,EAACyF,EAAQ/M,EAAa2O,EAAQyI,KAC1E,MAAM,aAAE3H,EAAY,cAAEf,GAAkBkD,EAAyB5R,IAC3D,QAAEia,GAAYtI,EAAwB5E,GACtC2a,EAAiB1Y,EAA6BjC,GAC9CsC,EAAiBiI,IACnB,MAAMjH,EAAkBuE,EAAmB7H,GACrC0a,EAAmB5S,GAAoB7U,GAC7C,GAAIsX,EAAU,CACV,MAAMqQ,EAAoBlT,EAAyC/F,EAAe3B,EAAQ4B,GAC1F+E,EAAqCjE,EAAc1C,EAAQ4a,GAAmB,GACzEvQ,GAActC,GAAe/H,IAC9BsD,EAAgBgE,QAAQoT,EAAkB9Y,OAG7C,CACD,MAAMgZ,E6ExCqC,EAAClY,EAAc1C,EAAQ4B,IACnET,EAAmBuB,GAAekE,GAA0BA,EAAsB,KAAO5G,GAAU4G,EAAsB,KAAOhF,I7EuCrGiZ,CAAwCnY,EAAc1C,EAAQ4B,GACxFiF,EAAsClF,EAAeiZ,GAAmB,GACnEvQ,GAActC,GAAe/H,IAC9BsD,EAAgBsE,WAAW8S,EAAkB9Y,KAIzD,QAAI2E,EAAmB2G,EAAS,CAACja,EAAa2O,IAAU0E,GAAqBA,EAAiB,KAAOrT,GAAeqT,EAAiB,KAAO1E,IAAQ,KAChJ+Y,EAAetY,IAAIC,GACfgC,EAAkBtE,GAClB2G,EAAqCjE,EAAc1C,EAAQ,CAAC4B,EAAQU,IAAgB,GAGpFuE,EAAsClF,EAAe,CAAC3B,EAAQ4B,EAAQU,IAAgB,IAEnF,IA0MiCwY,CAAwCr3B,KAAMwP,EAAa2O,EAAQyI,GAEtE,CAC7B,MAAMhB,EAAS+Q,EAAa,CAAC32B,MAAOwP,GACpCmW,GAAuBC,EAAQ6Q,EAA4B7P,KAGnEzC,WAAWqC,EAAqBrI,EAAQzV,GACpC,IAAI4uB,EACJ,MAAMxX,EAAgB8U,EAAiB50B,KAAK62B,UACtCjQ,EAAYsO,EAA4BpV,GAC9C,QAA4B3U,IAAxBqb,EACA8Q,EA1KY,EAAC/a,EAAQqK,KACjC,MAAM2Q,EAA+BpW,EAAwB5E,GACvD+a,EAAe,GACrB,IAAK,MAAMzU,KAAoB0U,EAA6B9N,QACpD7G,EAA4BC,GAC5B8D,GAAwBpK,EAAQqK,KAAc/D,GAG9CmE,GAAyBzK,EAAQqK,KAAc/D,GAEnDyU,EAAa5sB,KAAKmY,EAAiB,IAGvC,OADA0U,EAA6B9N,QAAQhD,QAC9B6Q,GA6JoBE,CAAoBx3B,KAAM4mB,QAExC,GAAmC,iBAAxBJ,EAAkC,CAC9C,GAAIA,EAAsB,GAAKA,GAAuBxmB,KAAKunB,gBACvD,MAAMpH,IAEVmX,EAjKiB,EAAC/a,EAAQqK,EAAWzI,KACjD,MAAMoZ,EAA+BpW,EAAwB5E,GACvD+a,EAAe,GACrB,IAAK,MAAMzU,KAAoB0U,EAA6B9N,QACpD5G,EAAiB,KAAO1E,IACpByE,EAA4BC,GAC5B8D,GAAwBpK,EAAQqK,KAAc/D,GAG9CmE,GAAyBzK,EAAQqK,KAAc/D,GAEnDyU,EAAa5sB,KAAKmY,EAAiB,IACnC0U,EAA6B9N,QAAQzL,OAAO6E,IAGpD,OAAOyU,GAkJoBG,CAAyBz3B,KAAM4mB,EAAWJ,OAExD,CACD,QAAerb,IAAXgT,IAAyBA,EAAS,GAAKA,GAAUne,KAAKunB,iBACtD,MAAMpH,IAEV,GAAIuC,EAAY8D,SAAkCrb,IAAVzC,IAAwBA,EAAQ,GAAKA,GAAS8d,EAAoBc,gBACtG,MAAMnH,IAGV,GADAmX,EAzJsB,EAAC/a,EAAQqK,EAAWpX,EAAa2O,EAAQzV,KAC3E,MAAM6uB,EAA+BpW,EAAwB5E,GAC7D,OAAOtZ,MAAMY,KAAK0zB,EAA6B9N,SAC1C3L,QAAQ+E,KAAqBA,EAAiB,KAAOrT,QAC1CrE,IAAXgT,GAAwB0E,EAAiB,KAAO1E,QACtChT,IAAVzC,GAAuBma,EAAiB,KAAOna,KAC/CvF,KAAK0f,IACFD,EAA4BC,GAC5B8D,GAAwBpK,EAAQqK,KAAc/D,GAG9CmE,GAAyBzK,EAAQqK,KAAc/D,GAEnD0U,EAA6B9N,QAAQzL,OAAO6E,GACrCA,EAAiB,OA2ID6U,CAA8B13B,KAAM4mB,EAAWJ,EAAqBrI,EAAQzV,GAC/D,IAAxB4uB,EAAap2B,OACb,MAAMgqB,IAId,IAAK,MAAM1b,KAAe8nB,EAAc,CACpC,MAAM1R,EAAS+Q,EAAa,CAAC32B,MAAOwP,GACpCmW,GAAuBC,EAAQ8Q,MyDrElBiB,EqBhOiBC,GrBgOwCnc,EqB/N3E,CAACgD,EAAWwV,EAAmBpU,KAClC,MAAMZ,EAAe,GACrB,IAAK,IAAI7d,EAAI,EAAGA,EAAIye,EAAgByH,eAAgBlmB,GAAK,EACrD6d,EAAavU,KAAK,IAAI2Y,KAE1BuU,GAA0Bja,IAAIc,EAAW,CACrCQ,eACAwK,QAAS,IAAIpG,IACbnF,cAAe,IAAIxC,QACnBkY,SAAUK,MCPwB,EAAC/B,EAAqCE,EAAsC5O,EAAyC8O,EAAwCpO,EAA8C/C,EAAyBsR,EAAsBjU,EAA8B4F,EAAoBtB,EAAoBjC,EAAmByD,EAAgBC,IACtY,CAAChI,EAAQ/M,EAAa2O,EAAQzV,EAAOke,KACxC,MAAM,aAAE3H,EAAY,cAAEf,GAAkBiD,EAAwB3R,IAC1D,QAAEia,GAAYtI,EAAwB5E,GACtC2a,EAAiB1Y,EAA6BjC,GAC9CsC,EAAiBiI,IACnB,MAAMpD,EAA6BU,EAAmB5U,GAChDiU,EAAwBW,EAAmB7H,GACjD,GAAIuK,EAAU,CACV,MAAMqQ,EAAoBlZ,EAAwCC,EAAe3B,EAAQ4B,EAAQzV,GACjGwpB,EAAoCjT,EAAc1C,EAAQ4a,GAAmB,GACxEvQ,GAActC,EAAe/H,IAC9BiH,EAAwCC,EAAuBC,EAA4BvF,EAAQzV,GAEnG6b,EAAmB/U,IACnBkP,EAAyBlP,OAG5B,CACD,MAAM2nB,EAAoB7E,EAAuCrT,EAAc1C,EAAQ4B,EAAQzV,GAC/F0pB,EAAqClU,EAAexV,EAAOyuB,GAAmB,GACzEvQ,GAActC,EAAe/H,IAC9B2H,EAA6CT,EAAuBC,EAA4BvF,EAAQzV,GAE5G,MAAMmvB,EAAWpF,EAAqBjjB,GACrB,IAAbqoB,EACIhX,EAAkBrR,IAClBwP,EAAuCxP,EAAayP,GAIxD6Y,YAAW,KACHjX,EAAkBrR,IAClBwP,EAAuCxP,EAAayP,KAE9C,IAAX4Y,KAIf,QAAI/U,EAAmB2G,EAAS,CAACja,EAAa2O,EAAQzV,IAASma,GAAqBA,EAAiB,KAAOrT,GAAeqT,EAAiB,KAAO1E,GAAU0E,EAAiB,KAAOna,IAAO,KACxLwuB,EAAetY,IAAIC,GACfgC,EAAkBtE,GAClB2V,EAAoCjT,EAAc1C,EAAQ,CAAC4B,EAAQzV,EAAOmW,IAAgB,GAG1FuT,EAAqClU,EAAexV,EAAO,CAAC6T,EAAQ4B,EAAQU,IAAgB,IAEzF,ItB8KkGkZ,CAA+B7F,GAAqCE,GAAsC5O,EAAyC8O,GAAwCpO,EAA8C/C,EAAyBsR,GAAsBjU,EAA8B4F,EAAoBtB,EAAoBjC,EAAmByD,GAAgBC,IAAqBoO,GuB/Nzd,EAACqF,EAAe9T,EAA8C/C,EAAyBiD,EAAoBC,EAAqBxD,IACtK+F,GACG,CAACnI,EAAWwH,KACf,MAAMgS,EAAeD,EAAcva,IAAIgB,GACvC,QAAqBtT,IAAjB8sB,EAA4B,CAC5B,IAAKrR,GAAa/F,EAAkBpC,GAAY,CAC5C,MAAMgF,EAAwBW,EAAmB3F,IAC3C,QAAEgL,GAAYtI,EAAwB1C,GAC5C,IAAK,MAAMN,KAAUsL,EACjB,GAAI7G,EAA4BzE,GAAS,CACrC,MAAMuF,EAA6BU,EAAmBjG,EAAO,IAC7D+F,EAA6CT,EAAuBC,EAA4BvF,EAAO,GAAIA,EAAO,QAEjH,CACD,MAAM+Z,EAA8B7T,EAAoBlG,EAAO,IAC/DsF,EAAsBU,WAAW+T,EAA6B/Z,EAAO,KAIjF6Z,EAAcra,IAAIc,EAAWwH,QAG7B+R,EAAcra,IAAIc,EAAWwZ,EAAehS,IvByMgekS,CAAmCnc,EAAgBkI,EAA8C/C,EAAyBiD,EAAoBC,GAAqBxD,GAAoBV,EAAsB+K,GAA0B0D,GwB/NxtB,EAACpL,EAAyCwU,EAAe7W,EAAyBiD,EAAoBC,EAAqBuQ,EAAkB/T,EAAmBqU,IAChM,CAACzW,EAAWwH,KACf,MAAMgS,EAAeD,EAAcva,IAAIgB,GACvC,QAAqBtT,IAAjB8sB,EACA,MAAM,IAAIp2B,MAAM,qCAEpB,MAAMie,EAAgB8U,EAAiBnW,EAAUsB,SAC3C6G,EAAYsO,EAA4BpV,GAC9C,GAAImY,IAAiBhS,GAEjB,GADA+R,EAAcha,OAAOS,IAChBmI,GAAa/F,EAAkBpC,GAAY,CAC5C,MAAMgF,EAAwBW,EAAmB3F,IAC3C,QAAEgL,GAAYtI,EAAwB1C,GAC5C,IAAK,MAAMN,KAAUsL,EACjB,GAAI7G,EAA4BzE,GAAS,CACrC,MAAMuF,EAA6BU,EAAmBjG,EAAO,IAC7DqF,EAAwCC,EAAuBC,EAA4BvF,EAAO,GAAIA,EAAO,QAE5G,CACD,MAAM+Z,EAA8B7T,EAAoBlG,EAAO,IAC/DsF,EAAsBI,QAAQqU,EAA6B/Z,EAAO,WAM9E6Z,EAAcra,IAAIc,EAAWwZ,EAAehS,IxBqMouBmS,CAA4B5U,EAAyCxH,EAAgBmF,EAAyBiD,EAAoBC,GAAqBuQ,GAAkB/T,EAAmBqU,IyB9Nt7B,EAACG,EAA0BlU,EAAyB3D,IAC3E,SAASmZ,EAAa0B,EAAOC,GAChC,MAAM7Z,EAAYiE,EAAY4V,GAAYA,EAAW9a,EAAe6X,EAA0BiD,GAC9F,GCLmB,CAAC7Z,GACjB,cAAeA,EDId8Z,CAAY9Z,GACZ,MAAO,GAEX,GAAI4Z,EAAM,KAAO5Z,EACb,MAAO,CAAC4Z,GAEZ,GAAIA,EAAM9W,SAAS9C,GACf,MAAO,GAEX,MAAM,QAAEgL,GAAYtI,EAAwB1C,GAC5C,OAAOxb,MAAMY,KAAK4lB,GACbtmB,KAAK0f,GAAqB8T,EAAa,IAAI0B,EAAO5Z,GAAYoE,EAAiB,MAC/EmG,QAAO,CAACwP,EAAcC,IAAiBD,EAAaE,OAAOD,IAAe,KzB+M+5BE,CAAmBtD,GAA0BlU,EAAyB3D,GAAiB8X,GAAwBV,GAAkBmB,GAAsB,GAAmBI,GAAoBjB,IqBhOvoC,IAAC0C,GrBiO9C,MAAMgB,GhGxNuC,EAACC,EAAuBtE,EAA4BpU,EAAsBiT,EAA0BwB,EAAkBM,IACxJ,cAA2B2D,EAC9BlwB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK1Z,KAAoBxd,GACzC4qB,EAAqB4G,EAAyBtT,EAAegZ,GAEnElC,MAAM7W,GAAS,EAAOyM,EADS0I,EAA4BpV,GAAiByU,IAA+B,MAE3Gv0B,KAAK+4B,oBAAsBvM,EAE/B,cACI,OAAOxsB,KAAK+4B,oBAAoBvZ,QAEpC,YAAYrf,GACRH,KAAK+4B,oBAAoBvZ,QAAUrf,EAEvC,wBACI,OAAOH,KAAK+4B,oBAAoBC,kBAEpC,kBACI,OAAOh5B,KAAK+4B,oBAAoBtZ,YAEpC,gBAAgBtf,GAEZ,MAAMsf,EAAczf,KAAK+4B,oBAAoBtZ,YAE7C,GADAzf,KAAK+4B,oBAAoBtZ,YAActf,IACjCA,EAAQH,KAAK+4B,oBAAoBrZ,aAEnC,MADA1f,KAAK+4B,oBAAoBtZ,YAAcA,EACjCU,IAGd,kBACI,OAAOngB,KAAK+4B,oBAAoBrZ,YAEpC,gBAAgBvf,GAEZ,MAAMuf,EAAc1f,KAAK+4B,oBAAoBrZ,YAE7C,GADA1f,KAAK+4B,oBAAoBrZ,YAAcvf,IACjCH,KAAK+4B,oBAAoBtZ,YAActf,GAEzC,MADAH,KAAK+4B,oBAAoBrZ,YAAcA,EACjCS,IAGd,4BACI,OAAOngB,KAAK+4B,oBAAoBpZ,sBAEpC,0BAA0Bxf,GACtBH,KAAK+4B,oBAAoBpZ,sBAAwBxf,EAErD84B,qBAAqB5Q,GACjBroB,KAAK+4B,oBAAoBE,qBAAqB5Q,GAElDmL,sBAAsBnL,GAClBroB,KAAK+4B,oBAAoBvF,sBAAsBnL,GAEnD6Q,sBAAsB7Q,GAClBroB,KAAK+4B,oBAAoBG,sBAAsB7Q,GAEnDoE,uBAAuBpE,GACnBroB,KAAK+4B,oBAAoBtM,uBAAuBpE,KgG6J5B8Q,CAA8B7C,GAAsB/B,GAA4BpU,EAAsBiT,GAA0BwB,GAAkBM,IAE5KkE,GAAmB,IAAI5d,QACvB6d,G2BpO4C,CAACvhB,GAChC,OAAXA,EACO,KAEPA,EAAOwY,eAAe,eACfxY,EAAOwhB,YAEX,K3B6N0BC,CAAmC,IAClEC,I4BrO4CC,G5BqOoB,IAAIzN,YAAY,G4BpO1E7rB,IACJs5B,GAAY,GAAKt5B,EACVs5B,GAAY,KAHsB,IAACA,G5BsOlD,MAAMC,G6BtOiD,EAACF,EAA6BrZ,IACzEG,IACJA,EAAYoH,gBAAkB,CAAClY,EAAamqB,EAAuBC,EAAuB,KACtF,MAAM/R,EAAe2R,EAA4BI,GAC3ChS,EAAgB4R,EAA4BG,GAClD,GAAI/R,GAAiBtH,EAAYI,iBAC7B,MAAMP,IAEV,MAAM0Z,EAAoBvZ,EAAYpf,OAChCgkB,EAAc5E,EAAYC,eAAeqH,GACzCkS,EAAoBtqB,EAAYtO,OACtC,IAAK,IAAIE,EAAIymB,EAAe,GAAKA,EAAe,EAAGzmB,EAAIymB,EAAegS,GAAqBz4B,EAAI04B,EAAmB14B,GAAK,EACnHoO,EAAYpO,GAAK8jB,EAAY9jB,EAAIymB,IAGzCvH,EAAYJ,cAAgB,CAAC3D,EAAQod,EAAuBC,EAAuB,KAC/E,MAAM/R,EAAe2R,EAA4BI,GAC3ChS,EAAgB4R,EAA4BG,GAClD,GAAI/R,GAAiBtH,EAAYI,iBAC7B,MAAMP,IAEV,MAAM0Z,EAAoBvZ,EAAYpf,OAChCgkB,EAAc5E,EAAYC,eAAeqH,GACzCmS,EAAexd,EAAOrb,OAC5B,IAAK,IAAIE,EAAIymB,EAAe,GAAKA,EAAe,EAAGzmB,EAAIymB,EAAegS,GAAqBz4B,EAAI24B,EAAc34B,GAAK,EAC9G8jB,EAAY9jB,EAAIymB,GAAgBtL,EAAOnb,K7B6Mb44B,CAAwCR,GAA6BrZ,GACzG8Z,G8BvO4D,CAACT,GACvDlZ,IACJA,EAAYoH,gBAAkB,CAAEA,GACrB,CAAClY,EAAamqB,EAAuBC,EAAuB,KAC/D,MAAM/R,EAAe2R,EAA4BI,GAC3ChS,EAAgB4R,EAA4BG,GAClD,GAAI9R,EAAevH,EAAYpf,OAC3B,OAAOwmB,EAAgBlQ,KAAK8I,EAAa9Q,EAAaoY,EAAeC,IALnD,CAQ3BvH,EAAYoH,iBACfpH,EAAYJ,cAAgB,CAAEA,GACnB,CAAC3D,EAAQod,EAAuBC,EAAuB,KAC1D,MAAM/R,EAAe2R,EAA4BI,GAC3ChS,EAAgB4R,EAA4BG,GAClD,GAAI9R,EAAevH,EAAYpf,OAC3B,OAAOgf,EAAc1I,KAAK8I,EAAa/D,EAAQqL,EAAeC,IAL9C,CAQzBvH,EAAYJ,gB9BoN8Bga,CAAmDV,IAClGW,G3FnOsC,EAACf,EAAkBzG,EAAiB/D,EAAyByK,EAA8BvE,EAAsCsF,EAAyCV,EAAmCO,KACrP,IAAIvR,EAA4B,KAChC,OAAO,MAAM4Q,EACT3wB,YAAY/G,GACR,GAA6C,OAAzCkzB,EACA,MAAM,IAAIjzB,MAAM,uDAEpB,MAAM,OAAEX,EAAM,iBAAEwf,EAAgB,WAAEyI,GAAe,IAAK,KAAoBvnB,GACxC,OAA9B8mB,IACAA,EAA4B,IAAIoM,EAAqC,EAAG,EAAG,QAM/E,MAAMxU,EAA+C,OAAjC+Y,GAChB1G,EAAgByH,EAAyCA,GACvD,IAAIf,EAA6B,CAAEn4B,SAAQwf,mBAAkByI,eAC7DT,EAA0BzD,aAAavE,EAAkBxf,EAAQioB,GAEvE,GAAqC,IAAjC7I,EAAYI,iBACZ,MAAMkO,IAiBV,MAb2C,mBAAhCtO,EAAYoH,iBACnBgS,EAAkCpZ,GAClCD,EAAoCC,IAG9BqS,EAAgB3S,GAAqD,IAAMA,EAAoDM,MACrI2Z,EAA6C3Z,GAEjD8Y,EAAiBxa,IAAI0B,GAKdA,EAEX,OAAQzM,OAAOwmB,aAAa1kB,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyB1V,OAAOowB,eAAe1a,KAAc2jB,EAAYhjB,WAC1G8iB,EAAiBza,IAAIhJ,M2FyLN2kB,CAA6BlB,GAAkBzG,GAAiB/D,GAAyByK,GAA8BvE,G+BvO/F,CAACuE,GAC7C,KACH,GAAqC,OAAjCA,EACA,OAAO,EAEX,IACI,IAAIA,EAA6B,CAAEn4B,OAAQ,EAAGioB,WAAY,QAE9D,MACI,OAAO,EAEX,OAAO,G/B4N6KoR,CAAwClB,IAA+BK,GAAmCO,IAEhSO,GgC1OmC,CAACrM,GAC/B,CAACrO,EAAe8M,KACnB,MAAMwB,EAAiBD,EAAqBrO,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAM,IAEV6K,EAA+B/I,QAAQuK,GAAgBvK,QAAQ/D,EAActQ,aAC7E,MAAM2U,EAAa,KACfyI,EAA+B+E,oBAAoB,QAASxN,GAC5DyI,EAA+BzI,WAAWiK,GAC1CA,EAAejK,cAEnByI,EAA+BgF,iBAAiB,QAASzN,IhC4NrCsW,CAA0BtM,IAChDuM,GiC3OwC,EAAC/G,EAAsBvS,EAA0BkD,IACpFiE,MAAOlH,EAAYqH,EAA2BuO,EAAkBte,KACnE,MAAM2J,EAAwBlB,EAAyBC,SACjDqD,QAAQsP,IAAI/wB,MAAMY,KAAKye,EAAsBrD,cAAc9b,KAAIolB,OAAQhM,EAAQ4B,MACjF,MAAM8V,EAAoBN,EAAqBpX,GACzC2X,QAAgCD,EAAkBE,OAAO5X,EAAQmM,EAA2B/P,GAC7F2L,EAAe/H,IAChB2X,EAAwBrQ,QAAQoT,EAAkB9Y,QjCoOjCwc,CAA+BhH,GAAsBvS,EAA0BkD,IAC1GsW,GkC5OiC,CAACF,GAC7B,CAAChS,EAA2BrH,EAAY4V,EAAkBte,IACtD+hB,EAAyBrZ,EAAYqH,EAA2BuO,EAAkBte,GlC0OvEkiB,CAAwBH,IAC5CI,GmCvOkD,EAACN,EAAqB7H,EAAiBoI,EAA6DC,EAA2DC,EAA2DvK,EAAkEG,EAA+DC,EAAiEoK,EAAqDC,EAAoD1J,IACljB,CAAC3R,EAAele,KACnB,MAAM+uB,EAA8B7Q,EAAcqF,qBAkClD,OAjCAmH,GAA6BqE,EAA6B/uB,GAC1D8qB,GAAqCiE,EAA6B/uB,EAAS,gBAC3EwqB,GAA4BuE,EAA6B/uB,EAAS,UAElEwqB,GAA4BuE,EAA6B/uB,EAAS,QAClEwqB,GAA4BuE,EAA6B/uB,EAAS,WAClEwqB,GAA4BuE,EAA6B/uB,EAAS,aAE7D+wB,EAAgBoI,GAA6D,IAAMA,EAA4Djb,MChBxF,CAAC6Q,IACjEA,EAA4BjL,MAAQ,CAAEA,IAClC,IAAI0V,GAAc,EAClB,MAAO,CAACvO,EAAO,EAAG5K,EAAS,EAAG3Q,KAC1B,GAAI8pB,EACA,MAAMnQ,KAEVvF,EAAMlO,KAAKmZ,EAA6B9D,EAAM5K,EAAQ3Q,GACtD8pB,GAAc,IAPc,CASjCzK,EAA4BjL,QDOvB2V,CAAqD1K,GAGpDgC,EAAgBqI,GAA2D,IAAMA,EAA0Dlb,MErBtF,CAAC6Q,IAC3B,IAAEjL,EAAtCiL,EAA4BjL,OAAUA,EAanCiL,EAA4BjL,MAZpB,CAACmH,EAAO,EAAG5K,EAAS,EAAG3Q,KAC1B,MAAMwP,EAAS6P,EAA4B7P,OAErCwa,EAA2B,OAAXxa,EAAkBmB,EAAS1d,KAAK4oB,IAAIrM,EAAOxP,SAAU2Q,GAE5D,OAAXnB,GAAmBwa,EAAgBxa,EAAOxP,SAAW,GAAMqf,EAA4B5Q,QAAQoJ,WAC/FzD,EAAMlO,KAAKmZ,EAA6B9D,EAAM,EAAG,GAGjDnH,EAAMlO,KAAKmZ,EAA6B9D,EAAMyO,EAAehqB,MFWjE4pB,CAAoDvK,GAGnDgC,EAAgBsI,GAA2D,IAAMA,EAA0Dnb,MAC5Iqb,EAAmDxK,EAA6B7Q,GAG/E6S,EAAgBjC,GAAkE,IAAMA,EAAiE5Q,MAC1J6M,GAA0DgE,GAGzDgC,EAAgB9B,GAA+D,IAAMA,EAA8D/Q,MACpJ2R,EAAuDd,EAA6B7Q,GAGnF6S,EAAgB7B,GAAiE,IAAMA,EAAgEhR,MACxJiN,GAAyD4D,GAG7D6J,EAAoB1a,EAAe6Q,GAC5BA,GnCmM2B4K,CAAyCf,GAAqB7H,IsC7O5B7S,IACxE,MAAM6Q,EAA8B7Q,EAAcqF,qBAClDwL,EAA4BjL,QAC5B,IACIiL,EAA4BjL,QAEhC,MACI,OAAO,EAEX,OAAO,KCT+D5F,IACtE,MAAM6Q,EAA8B7Q,EAAcqF,qBAC5ClF,EAAoBH,EAAcmF,aAAa,EAAG,EAAG,OAC3D0L,EAA4B7P,OAASb,EACrC,IACI0Q,EAA4BjL,MAAM,EAAG,GAEzC,MACI,OAAO,EAEX,OAAO,KCV+D5F,IACtE,MAAM6Q,EAA8B7Q,EAAcqF,qBAClDwL,EAA4BjL,QAC5B,IACIiL,EAA4B5kB,OAEhC,MACI,OAAO,EAEX,OAAO,IxCoOiS2kB,GAAkEG,GAA+DC,GqC7O3W,EIAM,CAACd,GAC9D,CAACW,EAA6B7Q,KACjC,MAAM0b,EAAkB1b,EAAcmF,aAAa,EAAG,EAAG,OACd,OAAvC0L,EAA4B7P,SAC5B6P,EAA4B7P,OAAS0a,GAEzCxL,EAAmBW,EAA6B,UAAWlT,GAAQ,KAC/D,MAAMtd,EAAQsd,EAAIjG,KAAKmZ,GACvB,OAAOxwB,IAAUq7B,EAAkB,KAAOr7B,KAC1Cwd,GAASxd,GACFwd,EAAInG,KAAKmZ,EAAuC,OAAVxwB,EAAiBq7B,EAAkBr7B,MzCmOscs7B,CAAyDzL,IAAqByB,IAC1mBiK,G0C9OgC,EAACC,EAAuBjB,IACnD,CAAChS,EAA2BrH,EAAY4V,EAAkBte,KAClCgjB,EAAsBta,GAC9Bua,OAAO3E,GACnByD,EAAyBrZ,EAAYqH,EAA2BuO,EAAkBte,I1C0OxEkjB,C2C9OkB,CAACza,GAChCC,IACJ,MAAMiB,EAAwBlB,EAAyBC,GACvD,GAAuC,OAAnCiB,EAAsBsR,SACtB,MAAM,IAAI/xB,MAAM,oEAEpB,OAAOygB,EAAsBsR,U3CwOWkI,CAA4B1a,GAA2BsZ,IACjGqB,G4C9OoD,EAACnB,EAAmBE,EAAmC1W,EAAoBsX,EAAkB5H,IAC5I,KACH,MAAMkI,EAAuC,IAAItgB,QACjD,IAAIgK,EAAQ,KACR3Z,EAAO,KAwCX,MAAO,CACH,UAAU5L,GACNulB,EAAQvlB,GAEZ,SAASA,GACL4L,EAAO5L,GAEXg0B,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMsjB,EAAsCD,EAAqCve,IAAIiL,GACrF,YAA4Cvd,IAAxC8wB,EACOvX,QAAQC,QAAQsX,GAjDC1T,OAAOC,EAAOE,EAA2B/P,KACzE,IAAIgY,EAA8BvM,EAAmBoE,GAKrD,MAAM0T,EAA8Ctc,EAAiB+Q,EAA6BjI,GAClG,IAAKwT,EAA6C,CAC9C,MAAMt6B,EAAU,CACZkf,OAAQ6P,EAA4B7P,OACpCzB,aAAcsR,EAA4BtR,aAC1CC,iBAAkBqR,EAA4BrR,iBAC9CC,sBAAuBoR,EAA4BpR,sBAEnDwB,KAAM4P,EAA4B5P,KAClCC,QAAS2P,EAA4B3P,QACrCC,UAAW0P,EAA4B1P,UACvCC,aAAcyP,EAA4BzP,aAAa/gB,OAE3DwwB,EAA8BmK,EAAkCpS,EAA2B9mB,GAC7E,OAAV8jB,GACAiL,EAA4BjL,SAASA,GAE5B,OAAT3Z,GACA4kB,EAA4B5kB,KAAKA,GAazC,OAVAiwB,EAAqCre,IAAI+K,EAA2BiI,GAC/DuL,QAMKtB,EAAkBlS,EAA2BF,EAAMtH,aAAcyP,EAA4BzP,aAAcvI,SAJ3G+iB,EAAiBhT,EAA2BF,EAAMtH,aAAcyP,EAA4BzP,aAAcvI,SAM9Gmb,EAAwBtL,EAAOE,EAA2BiI,EAA6BhY,GACtFgY,GAcIwL,CAA4B3T,EAAOE,EAA2B/P,M5CsLzCyjB,CAA2CxB,GAAmBE,GAAmC1W,EAAoBsX,GAAkB5H,IAC7KuI,G6C/OiC,EAACC,EAA0BjH,EAA0BkH,EAAiBC,EAA0BrnB,EAAoCC,EAA4CC,EAA6CC,EAAwCC,EAAgCrE,EAA+BE,EAAoCukB,EAA+BnF,IACna,CAAC/R,EAAWge,EAAmCxF,EAAkByF,EAAW,KAAMC,EAAW,QAChG,MAAMC,EAAsB,IAAI,EAAAnpB,oBAAoBwjB,EAAiB1kB,cAC/DsqB,EAAqBJ,ECJK,CAACG,IAC9B,CACHhB,OAAOva,GACH,IAAK,MAAMtP,KAAmB6qB,EAC1B,GAA6B,2BAAzB7qB,EAAgB9P,KAAmC,CACnD,MAAM,QAAE8O,EAAO,MAAE5Q,GAAU4R,EAC3BsP,EAAWyb,6BAA6B38B,EAAO4Q,QAE9C,GAA6B,sBAAzBgB,EAAgB9P,KAA8B,CACnD,MAAM,QAAE8O,EAAO,MAAE5Q,GAAU4R,EAC3BsP,EAAW0b,wBAAwB58B,EAAO4Q,QAEzC,GAA6B,cAAzBgB,EAAgB9P,KAAsB,CAC3C,MAAM,UAAEkP,EAAS,OAAEQ,EAAM,aAAEC,GAAiBG,EAC5CsP,EAAW2b,gBAAgBrrB,EAAQR,EAAWS,QAE7C,GAA6B,aAAzBG,EAAgB9P,KAAqB,CAC1C,MAAM,UAAEkP,EAAS,MAAEhR,GAAU4R,EAC7BsP,EAAWoP,eAAetwB,EAAOgR,OAEhC,IAA6B,kBAAzBY,EAAgB9P,KAKrB,MAAM,IAAIJ,MAAM,sCAL+B,CAC/C,MAAM,SAAEyP,EAAQ,UAAEH,EAAS,OAAEE,GAAWU,EACxCsP,EAAW4b,oBAAoB5rB,EAAQF,EAAWG,QDlBCkrB,CAAyBI,GAAuB,KACzGvb,EAAa,CACf,mBACI,OAAO4V,EAAiB1kB,cAE5B,eACI,OAAoB,OAAbmqB,EAAoBzF,EAAiByF,SAAWA,GAE3D,eACI,OAAoB,OAAbC,EAAoB1F,EAAiB0F,SAAWA,GAE3D,YACI,OAAO1F,EAAiB92B,OAE5B,UAAUA,GACN82B,EAAiB92B,MAAQA,EAEzBkhB,EAAWoP,eAAetwB,EAAOse,EAAUsB,QAAQmd,cAEvDC,oBAAoBrqB,GAEhB,GAAoD,mBAAzCmkB,EAAiBkG,oBACG,OAAvBN,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIzJ,EAAmCrC,IAC3DmkB,EAAiBkG,oBAAoBrqB,OAEpC,CACD,MAAMuqB,EAAoBp6B,MAAMY,KAAK+4B,GAAqBU,MAC/B,OAAvBT,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIzJ,EAAmCrC,IAC3D,MAAMyqB,EAAmBt6B,MAAMY,KAAK+4B,GAAqBU,MACzDrG,EAAiBuG,sBAAsB1qB,GACnCuqB,IAAsBE,QAAyCpyB,IAArBoyB,IACZ,2BAA1BA,EAAiBt7B,KACjBg1B,EAAiB6F,6BAA6BS,EAAiBp9B,MAAOo9B,EAAiBxsB,SAExD,sBAA1BwsB,EAAiBt7B,KACtBg1B,EAAiB8F,wBAAwBQ,EAAiBp9B,MAAOo9B,EAAiBxsB,SAEnD,aAA1BwsB,EAAiBt7B,KACtBg1B,EAAiBxG,eAAe8M,EAAiBp9B,MAAOo9B,EAAiBpsB,WAE1C,kBAA1BosB,EAAiBt7B,MACtBg1B,EAAiBgG,oBAAoBM,EAAiBlsB,OAAQksB,EAAiBpsB,UAAWosB,EAAiBjsB,WAIvH,OAAO+P,GAEXmc,sBAAsB1qB,IACS,OAAvB+pB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIxJ,EAA2CtC,IACnEmkB,EAAiBuG,sBAAsB1qB,GAChCuO,GAEXyb,6BAA6B38B,EAAO4Q,GAEhC,GAAc,IAAV5Q,EACA,MAAM,IAAI2sB,WAGd,IAAKld,OAAO6tB,SAAS1sB,IAAYA,EAAU,EACvC,MAAM,IAAI+b,WAOd,OAL2B,OAAvB+P,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIvJ,EAA4ClV,EAAO4Q,IAC3EkmB,EAAiB6F,6BAA6B38B,EAAO4Q,GAC9CsQ,GAEX0b,wBAAuB,CAAC58B,EAAO4Q,KACA,OAAvB8rB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAItJ,EAAuCnV,EAAO4Q,IACtEkmB,EAAiB8F,wBAAwB58B,EAAO4Q,GACzCsQ,GAEX2b,gBAAe,CAACrrB,EAAQR,EAAWS,KACJ,OAAvBirB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIrJ,EAA+B5D,EAAQR,EAAWS,IAC1EqlB,EAAiB+F,gBAAgBrrB,EAAQR,EAAWS,GAC7CyP,GAEXoP,eAAc,CAACtwB,EAAOgR,KACS,OAAvB0rB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAI1N,EAA8B/Q,EAAOgR,IAC7D8lB,EAAiBxG,eAAetwB,EAAOgR,GAChCkQ,GAEX4b,oBAAoB5rB,EAAQF,EAAWG,GAEnC,MAAMosB,EAAkBrsB,aAAkBiD,aAAejD,EAAS,IAAIiD,aAAajD,GAMnF,GAAsC,OAAlCskB,GAAiF,uBAAvCA,EAA8BzsB,KAA+B,CACvG,MAAM6H,EAAUI,EAAYG,EACtB6X,EAAa1K,EAAUsB,QAAQoJ,WAC/BwU,EAAcp5B,KAAK+O,KAAKnC,EAAYgY,GACpCyU,EAAar5B,KAAK6O,MAAMrC,EAAUoY,GAClC0U,EAA6BD,EAAaD,EAC1CG,EAAqB,IAAIxpB,aAAaupB,GAC5C,IAAK,IAAIz8B,EAAI,EAAGA,EAAIy8B,EAA4Bz8B,GAAK,EAAG,CACpD,MAAM8R,GAAmBwqB,EAAgBx8B,OAAS,GAAKoQ,IAAcqsB,EAAcv8B,GAAK+nB,EAAahY,GAC/FgC,EAAa5O,KAAK6O,MAAMF,GACxBG,EAAa9O,KAAK+O,KAAKJ,GAC7B4qB,EAAmB18B,GACf+R,IAAeE,EACTqqB,EAAgBvqB,IACf,GAAKD,EAAiBC,IAAeuqB,EAAgBvqB,IACnD,GAAKE,EAAaH,IAAmBwqB,EAAgBrqB,GAE3C,OAAvBwpB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIxN,EAAmC0sB,EAAoB3sB,EAAWG,IAC1F2lB,EAAiBgG,oBAAoBa,EAAoB3sB,EAAWG,GACpE,MAAMysB,EAAmBH,EAAazU,EAClC4U,EAAmBhtB,GACnByf,EAA4BnP,EAAYyc,EAAmBA,EAAmB58B,OAAS,GAAI68B,GAE/FvN,EAA4BnP,EAAYqc,EAAgBA,EAAgBx8B,OAAS,GAAI6P,QAG1D,OAAvB8rB,GACAD,EAAoBQ,MAAM3e,EAAUsB,QAAQmd,aAEhDN,EAAoBhe,IAAIxN,EAAmCssB,EAAiBvsB,EAAWG,IACvF2lB,EAAiBgG,oBAAoBS,EAAiBvsB,EAAWG,GAErE,OAAO+P,IAMf,OAHAkb,EAAgB5e,IAAI0D,EAAY4V,GAChC5B,EAAyB1X,IAAI0D,EAAY5C,GACzC6d,EAAyBjb,EAAYwb,GAC9Bxb,G7CsFU2c,E+ChPsBC,G/CgPiCriB,E+C/OrE,CAACyF,EAAYwb,KAChBoB,GAA2BtgB,IAAI0D,EAAY,CAAEpC,aAAc,IAAIoE,IAAOnF,cAAe,IAAIxC,QAAWkY,SAAUiJ,M/C8ONxH,GAA0BxZ,E8ChPlG,E9CgP+I,EAAA1G,mCAAoC,EAAAC,2CAA4C,EAAAC,4CAA6C,EAAAC,uCAAwC,EAAAC,+BAAgC,EAAArE,8BAA+B,EAAAE,mCAAoCukB,GAA+BnF,I+ChPhb,IAACyN,G/CiP/C,MAAMC,GxFlOgD,EAAC5H,EAAsByF,EAAqCM,EAAkBpR,EAAyB6P,EAAmClG,EAAkBM,EAA6BpD,IACpO,cAAoCwE,EACvC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,KAAoBl3B,GACzC+uB,EAA8BmK,EAAkChb,EAAegZ,GAC/ElS,EAAYsO,EAA4BpV,GACxCqe,EAAkCvX,EAAYmV,IAAwC,KAC5FnF,MAAM7W,GAAS,EAAO4Q,EAA6BwN,GACnDn+B,KAAKo+B,+BAAiCD,EACtCn+B,KAAKq+B,oBAAqB,EAC1Br+B,KAAKs+B,aAAwC,OAAzBxF,EAAchY,OAClC9gB,KAAKu+B,6BAA+B5N,EACpC3wB,KAAKw+B,SAAW,KAEhBx+B,KAAKy+B,cAAgBpC,EAAiBr8B,KAAM4mB,EAAW+J,EAA4BzP,aAAcN,EAA4BD,GAEjI,aACI,OAAI3gB,KAAKq+B,mBACE,KAEJr+B,KAAKu+B,6BAA6Bzd,OAE7C,WAAW3gB,GAGP,GAFAH,KAAKu+B,6BAA6Bzd,OAAS3gB,EAE7B,OAAVA,EAAgB,CAChB,GAAIH,KAAKs+B,aACL,MAAMrT,IAEVjrB,KAAKs+B,cAAe,GAG5B,WACI,OAAOt+B,KAAKu+B,6BAA6Bxd,KAE7C,SAAS5gB,GACLH,KAAKu+B,6BAA6Bxd,KAAO5gB,EAE7C,cACI,OAAOH,KAAKu+B,6BAA6Bvd,QAE7C,YAAY7gB,GACRH,KAAKu+B,6BAA6Bvd,QAAU7gB,EAEhD,gBACI,OAAOH,KAAKu+B,6BAA6Btd,UAE7C,cAAc9gB,GACVH,KAAKu+B,6BAA6Btd,UAAY9gB,EAElD,cACI,OAAOH,KAAKw+B,SAEhB,YAAYr+B,GACR,MAAMu+B,EAAmC,mBAAVv+B,EAAuB2xB,EAAkB9xB,KAAMG,GAAS,KACvFH,KAAKu+B,6BAA6BI,QAAUD,EAC5C,MAAME,EAAgB5+B,KAAKu+B,6BAA6BI,QACxD3+B,KAAKw+B,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBv+B,EAAQy+B,EAE1F,mBACI,OAAO5+B,KAAKy+B,cAEhB/Y,MAAMmH,EAAO,EAAG5K,EAAS,EAAG3Q,GAKxB,GAJAtR,KAAKu+B,6BAA6B7Y,MAAMmH,EAAM5K,EAAQ3Q,GACV,OAAxCtR,KAAKo+B,iCACLp+B,KAAKo+B,+BAA+B1Y,WAAqBva,IAAbmG,EAAyB,CAACub,EAAM5K,GAAU,CAAC4K,EAAM5K,EAAQ3Q,IAE9E,WAAvBtR,KAAK+f,QAAQgX,MAAoB,CACjCrY,EAAyB1e,MACzB,MAAM6+B,EAA8B,KAChC7+B,KAAKu+B,6BAA6B5M,oBAAoB,QAASkN,GAC3Dhe,EAAkB7gB,OAClB+e,EAA0B/e,OAGlCA,KAAKu+B,6BAA6B3M,iBAAiB,QAASiN,IAGpE9yB,KAAK8gB,EAAO,GACR7sB,KAAKu+B,6BAA6BxyB,KAAK8gB,GACK,OAAxC7sB,KAAKo+B,iCACLp+B,KAAKo+B,+BAA+BryB,KAAO8gB,KwFgJlBiS,CAAuCxI,GAAsByF,GAAqCM,GAAkBpR,GAAyB6P,GAAmClG,GAAkBM,GAA6BpD,IAElQiN,GgDnP+C,EAACzI,EAAsB0I,EAAoC7e,EAAsB8K,EAAyBgU,EAAkCrK,EAAkBM,EAA6BpB,IACrO,cAAmCwC,EACtC3tB,YAAYoX,EAASV,GACjB,MAAMS,EAAgB8U,EAAiB7U,GACjC6G,EAAYsO,EAA4BpV,GACxCof,EAA6BD,EAAiCnf,EAAeT,EAAcuH,GAEjGgQ,MAAM7W,GAAS,EAAOmf,EADiBtY,ECND,CAACkN,IAC/C,IAAIqL,EAAoC,KAMxC,MAAO,CACHhL,OAAM,CAAC3L,EAAOE,EAA2B/P,KACK,OAAtCwmB,IACAA,EARuB5W,OAAOC,EAAOE,EAA2B/P,KACxE,MAAMumB,EAA6BxW,EAA0BlZ,YAE7D,aADMskB,EAAwBtL,EAAOE,EAA2BwW,EAA4BvmB,GACrFumB,GAKqCE,CAA2B5W,EAAOE,EAA2B/P,IAE9FwmB,KDN4CH,CAAmClL,GAA2B,MAEjH9zB,KAAKq/B,mCAAqCzY,EAC1C5mB,KAAKs/B,4BAA8BJ,EAEvC,mBACI,OAAOl/B,KAAKs/B,4BAA4BjgB,aAE5C,iBAAiBlf,GAGb,GAAIH,KAAKq/B,mCACL,MAAMpU,IAGV,GAAI9qB,EAAQH,KAAKs/B,4BAA4BC,gBACzC,MAAMpf,IAEVngB,KAAKs/B,4BAA4BjgB,aAAelf,EAEpD,uBACI,OAAOH,KAAKs/B,4BAA4BhgB,iBAE5C,qBAAqBnf,GAEjB,GAAIH,KAAKq/B,mCACL,MAAMpU,IAEVjrB,KAAKs/B,4BAA4BhgB,iBAAmBnf,EAExD,sBACI,OAAOH,KAAKs/B,4BAA4BC,kBhD8MZC,CAAsClJ,GiDnP5B,EjDmPsFnW,EAAsB8K,GkDnPvG,EAACkD,EAAsB6B,IACnE,CAAClQ,EAAeT,EAAcogB,KACjC,MAAMP,EAA6Bpf,EAActQ,YAEjD,GAAI0vB,EAA2B7f,eAAiBA,EAC5C,IACI6f,EAA2B7f,aAAeA,EAE9C,OAKAogB,GAAqF,aAAhDP,EAA2B5f,mBAChE4f,EAA2B5f,iBAAmB,YAGC,IAA/C4f,EAA2BK,iBAC3Bt/B,OAAOC,eAAeg/B,EAA4B,kBAAmB,CACjE/+B,MAAOkf,IAIf,MAAMqgB,EAAWvR,EAAqBrO,EAAe,CACjDT,eACAC,iBAAkB4f,EAA2B5f,iBAC7CC,sBAAuB2f,EAA2B3f,sBAClDwC,KAAM,IA2BV,OAzBAiO,EAAmB0P,EAAU,gBAAiBjiB,GAAQ,IAAMA,EAAIjG,KAAKkoB,KAAY/hB,GAASxd,IACtFwd,EAAInG,KAAKkoB,EAAUv/B,GACnB,IACI++B,EAA2B7f,aAAelf,EAE9C,MAAO2W,GAEH,GAAI3W,EAAQ++B,EAA2BK,gBACnC,MAAMzoB,MAIlBkZ,EAAmB0P,EAAU,oBAAqBjiB,GAAQ,IAAMA,EAAIjG,KAAKkoB,KAAY/hB,GAASxd,IAC1Fwd,EAAInG,KAAKkoB,EAAUv/B,GACnB++B,EAA2B5f,iBAAmBnf,KAElD6vB,EAAmB0P,EAAU,yBAA0BjiB,GAAQ,IAAMA,EAAIjG,KAAKkoB,KAAY/hB,GAASxd,IAC/Fwd,EAAInG,KAAKkoB,EAAUv/B,GACnB++B,EAA2B3f,sBAAwBpf,KAEvDF,OAAOC,eAAew/B,EAAU,kBAAmB,CAC/CjiB,IAAK,IAAMyhB,EAA2BK,kBAG1CG,EAAS7b,QAAQqb,GACVQ,GlD6LwKC,CAAwCxR,GAAsB6B,IAAqB4E,GAAkBM,GAA6BpB,IACnT8L,GmDnP+C,EAAChF,EAAmBvN,EAA8BjJ,EAAoBsX,EAAkB5H,IAClI,KACH,MAAM+L,EAAkC,IAAInkB,QAqC5C,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMmnB,EAAiCD,EAAgCpiB,IAAIiL,GAC3E,YAAuCvd,IAAnC20B,EACOpb,QAAQC,QAAQmb,GAxCJvX,OAAOC,EAAOE,EAA2B/P,KACpE,IAAI2U,EAAyBlJ,EAAmBoE,GAKhD,MAAMuX,EAAyCngB,EAAiB0N,EAAwB5E,GACxF,IAAKqX,EAAwC,CACzC,MAAMn+B,EAAU,CACZggB,EAAG0L,EAAuB1L,EAAEzhB,MAC5Bkf,aAAciO,EAAuBjO,aACrCC,iBAAkBgO,EAAuBhO,iBACzCC,sBAAuB+N,EAAuB/N,sBAC9CsC,OAAQyL,EAAuBzL,OAAO1hB,MACtC2hB,UAAWwL,EAAuBxL,UAAU3hB,MAC5C4hB,KAAMuL,EAAuBvL,KAAK5hB,MAClC8B,KAAMqrB,EAAuBrrB,MAEjCqrB,EAAyBD,EAA6B3E,EAA2B9mB,GAgBrF,OAdAi+B,EAAgCliB,IAAI+K,EAA2B4E,GAC1DyS,SAOKnF,EAAkBlS,EAA2BF,EAAM5G,EAAG0L,EAAuB1L,EAAGjJ,SAChFiiB,EAAkBlS,EAA2BF,EAAM3G,OAAQyL,EAAuBzL,OAAQlJ,SAC1FiiB,EAAkBlS,EAA2BF,EAAM1G,UAAWwL,EAAuBxL,UAAWnJ,SAChGiiB,EAAkBlS,EAA2BF,EAAMzG,KAAMuL,EAAuBvL,KAAMpJ,WATtF+iB,EAAiBhT,EAA2BF,EAAM5G,EAAG0L,EAAuB1L,EAAGjJ,SAC/E+iB,EAAiBhT,EAA2BF,EAAM3G,OAAQyL,EAAuBzL,OAAQlJ,SACzF+iB,EAAiBhT,EAA2BF,EAAM1G,UAAWwL,EAAuBxL,UAAWnJ,SAC/F+iB,EAAiBhT,EAA2BF,EAAMzG,KAAMuL,EAAuBvL,KAAMpJ,UAQzFmb,EAAwBtL,EAAOE,EAA2B4E,EAAwB3U,GACjF2U,GAQI0S,CAAuBxX,EAAOE,EAA2B/P,MnDsMzCsnB,CAAsCrF,GAAmBvN,GAA8BjJ,EAAoBsX,GAAkB5H,IAC9JoM,GoDrPoC,CAAC1N,GAChC,CAAC/T,EAAWoZ,IAAarF,EAAuB7U,IAAIc,EAAWoZ,GpDoP7CsI,CAA2B3N,IAClD4N,GjD3O2C,EAAC9J,EAAsB+F,EAAkBuD,EAAgC1U,EAA0BmC,EAA8BuH,EAAkBM,EAA6BgL,IACtN,cAA+B5J,EAClC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzC0rB,EAAyBD,EAA6BvN,EAAegZ,GACrElS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOuN,EADY1G,EAAYgZ,IAAmC,MAGjF5/B,KAAKqgC,GAAKhE,EAAiBr8B,KAAM4mB,EAAW0G,EAAuB1L,EAAGhB,EAA4BD,GAElG3gB,KAAKsgC,QAAUjE,EAAiBr8B,KAAM4mB,EAAW0G,EAAuBzL,OAAQ,KAAOtd,KAAK6oB,KAAKxM,IAA8B,KAAOrc,KAAK6oB,KAAKxM,IAEhJ5gB,KAAKugC,WAAalE,EAAiBr8B,KAAM4mB,EAAW0G,EAAuBxL,UAAW/B,EAAQoJ,WAAa,EAAG,GAE9GnpB,KAAKwgC,MAAQnE,EAAiBr8B,KAAM4mB,EAAW0G,EAAuBvL,KAAM,GAAKxd,KAAKk8B,MAAM7f,GAA6BD,GACzH3gB,KAAK0gC,wBAA0BpT,EAE/B4S,EAAqBlgC,KAAM,GAE/B,aACI,OAAOA,KAAKsgC,QAEhB,gBACI,OAAOtgC,KAAKugC,WAEhB,WACI,OAAOvgC,KAAKwgC,MAEhB,QACI,OAAOxgC,KAAKqgC,GAEhB,WACI,OAAOrgC,KAAK0gC,wBAAwBz+B,KAExC,SAAS9B,GACLH,KAAK0gC,wBAAwBz+B,KAAO9B,EAExCwgC,qBAAqBC,EAAaC,EAAaC,GAE3C,IACI9gC,KAAK0gC,wBAAwBC,qBAAqBC,EAAaC,EAAaC,GAEhF,MAAOhqB,GACH,GAAiB,KAAbA,EAAI2J,KACJ,MAAMyK,IAEV,MAAMpU,EAGV,GAAI8pB,EAAY1/B,SAAW2/B,EAAY3/B,QAAU2/B,EAAY3/B,SAAW4/B,EAAc5/B,OAClF,MAAMgqB,MiDuLc6V,CAAkCzK,GAAsB+F,GAAkBuD,GAAgC1U,GAA0BmC,GAA8BuH,GAAkBM,GAA6BgL,IAC/Oc,GqDvPkC,EAACle,EAAoBoD,IAClD,CAACrG,EAAiBohB,EAAeC,KACpC,MAAM/hB,EAAc,IAAIkE,IACE,IAAEQ,EAqBGM,EAuC/B,OA5DAtE,EAAgBgE,SAAYA,EAoBzBhE,EAAgBgE,QAlBR,CAACrU,EAAa2O,EAAS,EAAGzV,EAAQ,KACrC,MAAMy4B,EAAuC,IAArBhiB,EAAYZ,KACpC,GAAI2H,EAAkB1W,GAOlB,OALAqU,EAAQrM,KAAKqI,EAAiBrQ,EAAa2O,EAAQzV,GACnDoa,EAAmB3D,EAAa,CAAC3P,EAAa2O,EAAQzV,IAAS6d,GAAeA,EAAW,KAAO/W,GAAe+W,EAAW,KAAOpI,GAAUoI,EAAW,KAAO7d,IAAO,GAChKy4B,GACAF,IAEGzxB,EAEXqU,EAAQrM,KAAKqI,EAAiBrQ,EAAa2O,GAC3C2E,EAAmB3D,EAAa,CAAC3P,EAAa2O,IAAUoI,GAAeA,EAAW,KAAO/W,GAAe+W,EAAW,KAAOpI,IAAQ,GAC9HgjB,GACAF,MAKZphB,EAAgBsE,YAAeA,EAsC5BtE,EAAgBsE,WArCR,CAACqC,EAAqBrI,EAAQzV,KACjC,MAAM04B,EAAejiB,EAAYZ,KAAO,EACxC,QAA4BpT,IAAxBqb,EACArC,EAAW5L,MAAMsH,GACjBV,EAAYsH,aAEX,GAAmC,iBAAxBD,EAAkC,CAE9CrC,EAAW3M,KAAKqI,EAAiB2G,GACjC,IAAK,MAAMD,KAAcpH,EACjBoH,EAAW,KAAOC,GAClBrH,EAAYnB,OAAOuI,OAI1B,CACGL,EAAkBM,GAElBrC,EAAW3M,KAAKqI,EAAiB2G,EAAqBrI,EAAQzV,GAI9Dyb,EAAW3M,KAAKqI,EAAiB2G,EAAqBrI,GAE1D,IAAK,MAAMoI,KAAcpH,EACjBoH,EAAW,KAAOC,QACNrb,IAAXgT,GAAwBoI,EAAW,KAAOpI,QAChChT,IAAVzC,GAAuB6d,EAAW,KAAO7d,GAC1CyW,EAAYnB,OAAOuI,GAI/B,MAAM8a,EAAsC,IAArBliB,EAAYZ,KAC/B6iB,GAAgBC,GAChBH,MAILrhB,GrDwLYyhB,CAAyBxe,EAAoB,IAClEye,GsDxPqC,EAACtW,EAAyB+V,IAC1D,CAAClhB,EAAe0hB,KAEnBA,EAAkBniB,aAAe,EACjCmiB,EAAkBliB,iBAAmB,WAErCrf,OAAOC,eAAeshC,EAAmB,eAAgB,CACrD/jB,IAAK,IAAM,EACXE,IAAK,KACD,MAAMsN,OAGdhrB,OAAOC,eAAeshC,EAAmB,mBAAoB,CACzD/jB,IAAK,IAAM,WACXE,IAAK,KACD,MAAMsN,OAId,MAAMwW,EAAwB3hB,EAAcqF,qBAQ5C6b,EAAmBQ,GAPG,KAClB,MAAMtgC,EAASsgC,EAAkBla,eACjC,IAAK,IAAIlmB,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAC7BqgC,EAAsB5d,QAAQ2d,EAAmB,EAAGpgC,MAGnC,IAAMqgC,EAAsBtd,WAAWqd,MtD8N1CE,CAA4BzW,GAAyB+V,IAC7EW,GuDxP8C,EAAChM,EAA+B4L,IACzE,CAACzhB,EAAele,KACnB,MAAMggC,EAA0B9hB,EAAc+hB,oBAAoBjgC,EAAQ0lB,gBAU1E,OAJsC,OAAlCqO,GAAiF,uBAAvCA,EAA8BzsB,MACxEq4B,EAAsBzhB,EAAe8hB,GAEzCtV,GAA6BsV,EAAyBhgC,GAC/CggC,GvD4OuBE,CAAqCnM,GAA+B4L,IAEpGQ,GhDrP4C,EAACzL,EAAsB0L,EAAiCL,EAA+B/M,EAAkBM,IAChJ,cAAgCoB,EACnC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GAG/Cg1B,MAAM7W,GAAS,EAFiB4hB,EAA8B7hB,EAAegZ,GACzC5D,EAA4BpV,GAAiBkiB,IAAoC,QgD+O5FC,CAAmC3L,GwD1PlB,EAACqL,EAA+Bvd,EAAoB0P,IAC/F,KACH,MAAMoO,EAA2B,IAAIxmB,QAkBrC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMub,EAA0BgO,EAAyBzkB,IAAIiL,GAC7D,YAAgCvd,IAA5B+oB,EACOxP,QAAQC,QAAQuP,GArBX3L,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAIkH,EAAkBuE,EAAmBoE,GAGzC,IADwC5I,EAAiBC,EAAiB6I,GACpC,CAClC,MAAM9mB,EAAU,CACZyd,aAAcQ,EAAgBR,aAC9BC,iBAAkBO,EAAgBP,iBAClCC,sBAAuBM,EAAgBN,sBACvC+H,eAAgBzH,EAAgByH,gBAEpCzH,EAAkB8hB,EAA8BjZ,EAA2B9mB,GAI/E,OAFAsgC,EAAyBvkB,IAAI+K,EAA2B7I,SAClDiU,EAAwBtL,EAAOE,EAA2B7I,EAAiBlH,GAC1EkH,GAQIsiB,CAAgB3Z,EAAOE,EAA2B/P,MxD+NjCypB,CAAuCT,GAA+Bvd,EAAoB0P,IACH6N,GAA+B/M,GAAkBM,IAE1KmN,G/CvP8C,EAAC/L,EAAsBgM,EAAmC9U,EAAiCoH,EAAkBM,EAA6BqN,IACnL,cAAkCjM,EACrC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EwGV4B,CAACl3B,IACpC,IAAKA,EAASyd,aAAczd,EAAQ2lB,kBxGSbgb,CAA+B,IAAK,MAAoB3gC,IAG9Eg1B,MAAM7W,GAAS,EAFmByN,EAAgC1N,EAAegZ,GAC3C5D,EAA4BpV,GAAiBwiB,IAAsC,Q+CiP9FE,CAAqClM,G0D5PpB,EAAC9I,EAAiCpJ,EAAoB0P,IACnG,KACH,MAAMoO,EAA2B,IAAIxmB,QAkBrC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMub,EAA0BgO,EAAyBzkB,IAAIiL,GAC7D,YAAgCvd,IAA5B+oB,EACOxP,QAAQC,QAAQuP,GArBX3L,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAIkH,EAAkBuE,EAAmBoE,GAGzC,IADwC5I,EAAiBC,EAAiB6I,GACpC,CAClC,MAAM9mB,EAAU,CACZyd,aAAcQ,EAAgBR,aAC9BC,iBAAkBO,EAAgBP,iBAClCC,sBAAuBM,EAAgBN,sBACvCgI,gBAAiB1H,EAAgB0H,iBAErC1H,EAAkB2N,EAAgC9E,EAA2B9mB,GAIjF,OAFAsgC,EAAyBvkB,IAAI+K,EAA2B7I,SAClDiU,EAAwBtL,EAAOE,EAA2B7I,EAAiBlH,GAC1EkH,GAQIsiB,CAAgB3Z,EAAOE,EAA2B/P,M1DiO/B8pB,CAAyCjV,GAAiCpJ,EAAoB0P,IACHtG,GAAiCoH,GAAkBM,IAClLwN,G2D7PoD,EAAClI,EAAqBM,EAAmC3M,EAAsB6S,IAC9H,CAAClhB,GAAiBmC,YAAW0gB,MAChC,MAAMriB,EAAcR,EAAcmF,aAAa,EAAG,EAAG,OAC/Cwc,EAAwB3G,EAAkChb,EAAe,CAC3EgB,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBwB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZwe,EAAWvR,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,KAAME,IAE5EiD,EAAc5E,EAAYC,eAAe,GAE/C2E,EAAY,GAAK,EACjBA,EAAY,GAAK,EACjBuc,EAAsB3gB,OAASR,EAC/BmhB,EAAsB1gB,MAAO,EAC7B,MAAM6hB,EAAgC,CAClC,mBAGA,mBACI,OAAOlD,EAASrgB,cAEpB,iBAAiBlf,GACbu/B,EAASrgB,aAAelf,GAE5B,uBACI,OAAOu/B,EAASpgB,kBAEpB,qBAAqBnf,GACjBu/B,EAASpgB,iBAAmBnf,GAEhC,4BACI,OAAOu/B,EAASngB,uBAEpB,0BAA0Bpf,GACtBu/B,EAASngB,sBAAwBpf,GAErC,cACI,OAAOu/B,EAAS3f,SAEpB,aACI,MAAO,IAEX,qBACI,OAAO0hB,EAAsBna,gBAEjC,sBACI,OAAOoY,EAASnY,iBAEpB,aACI,OAAOmY,EAAS3d,MAEpB,cACI,OAAO0f,EAAsB9C,SAEjC,YAAYx+B,GACRshC,EAAsB9C,QAAUx+B,GAEpCyxB,iBAAgB,IAAIiR,IACTpB,EAAsB7P,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEzE7Y,cAAa,IAAI6Y,IACNpB,EAAsBzX,cAAc6Y,EAAK,IAEpDlR,oBAAmB,IAAIkR,IACZpB,EAAsB9P,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAE5End,MAAMmH,EAAO,GACT4U,EAAsB/b,MAAMlO,KAAKiqB,EAAuB5U,IAE5D9gB,KAAK8gB,EAAO,GACR4U,EAAsB11B,KAAKyL,KAAKiqB,EAAuB5U,KAO/D,OADA2N,EAAoB1a,EAAe2hB,GAC5BT,EAAmBnT,GAAqB+U,EAA+BlD,IAJxD,IAAM+B,EAAsB5d,QAAQ6b,KACjC,IAAM+B,EAAsBtd,WAAWub,M3D4K5BoD,CAA2CtI,GAAqBM,GAAmC3M,GAAsB6S,IAC/J+B,G4D3P+C,EAACvI,EAAqB7H,EAAiB+P,EAAqChS,EAAkEI,IACxL,CAAChR,EAAele,KAEnB,QAA2CuJ,IAAvC2U,EAAckjB,qBACd,OAAON,EAAoC5iB,EAAele,GAE9D,MAAMqhC,EAA2BnjB,EAAckjB,uBAa/C,OAZA1W,GAA6B2W,EAA0BrhC,GACvD8qB,GAAqCuW,EAA0BrhC,EAAS,UAEnE+wB,EAAgBjC,GAAkE,IAAMA,EAAiE5Q,MAC1J6M,GAA0DsW,GAGzDtQ,EAAgB7B,GAAiE,IAAMA,EAAgEhR,MACxJiN,GAAyDkW,GAG7DzI,EAAoB1a,EAAemjB,GAC5BA,G5DwOwBC,CAAsC1I,GAAqB7H,GAAiB+P,GAAqChS,GAAkEI,IAEpNqS,G9CvP6C,EAAC7M,EAAsB+F,EAAkB+G,EAAyCL,EAAgCnO,EAAkBM,EAA6BpD,IACzM,cAAiCwE,EACpC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCqhC,EAA2BF,EAA+BjjB,EAAegZ,GACzElS,EAAYsO,EAA4BpV,GACxCujB,EAA+Bzc,EAAYwc,IAA4C,KAC7FxM,MAAM7W,GAAS,EAAOkjB,EAA0BI,GAChDrjC,KAAKsjC,4BAA8BD,EACnCrjC,KAAKujC,0BAA4BN,EAKjCjjC,KAAKwjC,QAAUnH,EAAiBr8B,KAAM4mB,EAAWqc,EAAyBhhB,OAAQrB,EAA4BD,GAC9G3gB,KAAKw+B,SAAW,KAEpB,aACI,OAAOx+B,KAAKwjC,QAEhB,cACI,OAAOxjC,KAAKw+B,SAEhB,YAAYr+B,GACR,MAAMu+B,EAAmC,mBAAVv+B,EAAuB2xB,EAAkB9xB,KAAMG,GAAS,KACvFH,KAAKujC,0BAA0B5E,QAAUD,EACzC,MAAME,EAAgB5+B,KAAKujC,0BAA0B5E,QACrD3+B,KAAKw+B,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBv+B,EAAQy+B,EAE1FlZ,MAAMmH,EAAO,GAKT,GAJA7sB,KAAKujC,0BAA0B7d,MAAMmH,GACI,OAArC7sB,KAAKsjC,8BACLtjC,KAAKsjC,4BAA4B5d,MAAQmH,GAElB,WAAvB7sB,KAAK+f,QAAQgX,MAAoB,CACjCrY,EAAyB1e,MACzB,MAAM6+B,EAA8B,KAChC7+B,KAAKujC,0BAA0B5R,oBAAoB,QAASkN,GACxDhe,EAAkB7gB,OAClB+e,EAA0B/e,OAGlCA,KAAKujC,0BAA0B3R,iBAAiB,QAASiN,IAGjE9yB,KAAK8gB,EAAO,GACR7sB,KAAKujC,0BAA0Bx3B,KAAK8gB,GACK,OAArC7sB,KAAKsjC,8BACLtjC,KAAKsjC,4BAA4Bv3B,KAAO8gB,K8CsMlB4W,CAAoCnN,GAAsB+F,G6DhQzC,EAACzB,EAAmBmI,EAAgC3e,EAAoBsX,EAAkB5H,IACtI,KACH,MAAM4P,EAAoC,IAAIhoB,QAC9C,IAAIgK,EAAQ,KACR3Z,EAAO,KAiCX,MAAO,CACH,UAAU5L,GACNulB,EAAQvlB,GAEZ,SAASA,GACL4L,EAAO5L,GAEXg0B,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMgrB,EAAmCD,EAAkCjmB,IAAIiL,GAC/E,YAAyCvd,IAArCw4B,EACOjf,QAAQC,QAAQgf,GA1CFpb,OAAOC,EAAOE,EAA2B/P,KACtE,IAAIsqB,EAA2B7e,EAAmBoE,GAKlD,MAAMob,EAA2ChkB,EAAiBqjB,EAA0Bva,GAC5F,IAAKkb,EAA0C,CAC3C,MAAMhiC,EAAU,CACZyd,aAAc4jB,EAAyB5jB,aACvCC,iBAAkB2jB,EAAyB3jB,iBAC3CC,sBAAuB0jB,EAAyB1jB,sBAChD0C,OAAQghB,EAAyBhhB,OAAO9hB,OAE5C8iC,EAA2BF,EAA+Bra,EAA2B9mB,GACvE,OAAV8jB,GACAud,EAAyBvd,MAAMA,GAEtB,OAAT3Z,GACAk3B,EAAyBl3B,KAAKA,GAWtC,OARA23B,EAAkC/lB,IAAI+K,EAA2Bua,GAC5DW,QAIKhJ,EAAkBlS,EAA2BF,EAAMvG,OAAQghB,EAAyBhhB,OAAQtJ,SAH5F+iB,EAAiBhT,EAA2BF,EAAMvG,OAAQghB,EAAyBhhB,OAAQtJ,SAK/Fmb,EAAwBtL,EAAOE,EAA2Bua,EAA0BtqB,GACnFsqB,GAcIY,CAAyBrb,EAAOE,EAA2B/P,M7D8MzCyqB,CAAwCxI,GAAmBmI,GAAgC3e,EAAoBsX,GAAkB5H,IACtBiP,GAAgCnO,GAAkBM,GAA6BpD,IAC7NgS,G8DhQ0C,EAAClV,EAAyBoB,IAC/D,CAAClQ,EAAele,KACnB,MAAMmiC,EAAsBjkB,EAAckkB,kBAQ1C,GAPA1X,GAA6ByX,EAAqBniC,GAE9CA,EAAQ0oB,uBAAyByZ,EAAoBE,YACrDF,EAAoBE,WAAariC,EAAQ0oB,sBAE7C8B,GAA4B2X,EAAqBniC,EAAS,UAEtDA,EAAQyd,aAAe,EACvB,MAAMuP,IASV,GAPAoB,EAAmB+T,EAAqB,gBAAiBtmB,GAAQ,IAAMA,EAAIjG,KAAKusB,KAAuBpmB,GAASxd,IAC5G,GAAIA,EAAQ,EACR,MAAMyuB,IAEV,OAAOjR,EAAInG,KAAKusB,EAAqB5jC,MAGR,QAA7ByB,EAAQ0d,iBACR,MAAMsP,IAQV,OANAoB,EAAmB+T,EAAqB,oBAAqBtmB,GAAQ,IAAMA,EAAIjG,KAAKusB,KAAuBpmB,GAASxd,IAChH,GAAc,QAAVA,EACA,MAAMyuB,IAEV,OAAOjR,EAAInG,KAAKusB,EAAqB5jC,MAElC4jC,G9DmOmBG,CAAiCtV,GAAyBoB,IAEtFmU,G7C7PwC,EAAC7N,EAAsB8N,EAA6BN,EAA2BlP,EAAkBM,EAA6BgL,IACjK,cAA4B5J,EAC/B3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCmiC,EAAsBD,EAA0BhkB,EAAegZ,GAGrElC,MAAM7W,GAAS,EAAOgkB,EAFJ7O,EAA4BpV,GACHskB,IAAgC,MAE3EpkC,KAAKq+B,oBAAqB,EAC1Br+B,KAAKqkC,qBAAuBN,EACC,OAAzBjL,EAAchY,QACdof,EAAqBlgC,KAAM84B,EAAchY,OAAOxP,UAGxD,aACI,OAAItR,KAAKq+B,mBACE,KAEJr+B,KAAKqkC,qBAAqBvjB,OAErC,WAAW3gB,GAGP,GAFAH,KAAKqkC,qBAAqBvjB,OAAS3gB,EAErB,OAAVA,GAAuD,OAArCH,KAAKqkC,qBAAqBvjB,OAAiB,CAC7D,MAAMhB,EAAgB9f,KAAKqkC,qBAAqBtkB,QAChD/f,KAAKqkC,qBAAqBvjB,OAAShB,EAAcmF,aAAa,EAAG,EAAG,OACpEjlB,KAAKq+B,oBAAqB,EAC1B6B,EAAqBlgC,KAAM,QAG3BA,KAAKq+B,oBAAqB,EAC1B6B,EAAqBlgC,KAA2C,OAArCA,KAAKqkC,qBAAqBvjB,OAAkB,EAAI9gB,KAAKqkC,qBAAqBvjB,OAAOxP,UAGpH,gBACI,OAAOtR,KAAKqkC,qBAAqBJ,UAErC,cAAc9jC,GACVH,KAAKqkC,qBAAqBJ,UAAY9jC,I6CsNjBmkC,CAA+BhO,G+DlQd,EAACwN,EAA2B1f,EAAoB0P,IACvF,KACH,MAAMyQ,EAA+B,IAAI7oB,QAwBzC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAM6rB,EAA8BD,EAA6B9mB,IAAIiL,GACrE,YAAoCvd,IAAhCq5B,EACO9f,QAAQC,QAAQ6f,GA3BPjc,OAAOC,EAAOE,EAA2B/P,KACjE,IAAIorB,EAAsB3f,EAAmBoE,GAG7C,IAD4C5I,EAAiBmkB,EAAqBrb,GACxC,CACtC,MAAM9mB,EAAU,CACZkf,OAAQijB,EAAoBjjB,OAC5BzB,aAAc0kB,EAAoB1kB,aAClCC,iBAAkBykB,EAAoBzkB,iBACtCC,sBAAuBwkB,EAAoBxkB,sBAC3C+K,sBAAuByZ,EAAoBE,WAE/CF,EAAsBD,EAA0Bpb,EAA2B9mB,GAS/E,OAPA2iC,EAA6B5mB,IAAI+K,EAA2Bqb,GACxDzgB,EAAuBygB,SACjBjQ,EAAwBtL,EAAOE,EAA2Bqb,EAAoBngB,OAAO,GAAIjL,SAGzFmb,EAAwBtL,EAAOE,EAA2Bqb,EAAqBprB,GAElForB,GAQIU,CAAoBjc,EAAOE,EAA2B/P,M/DiOzC+rB,CAAmCZ,GAA2B1f,EAAoB0P,IACHgQ,GAA2BlP,GAAkBM,GAA6BgL,IAEvLyE,G5C/PoC,EAACrO,EAAsB+F,EAAkBuI,EAAyB5W,EAAuB4G,EAAkBM,EAA6BgL,IACvK,cAAwB5J,EAC3B3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCqsB,EAAkBD,EAAsBlO,EAAegZ,GACvDlS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOkO,EADKrH,EAAYge,EAAwB9L,EAActO,cAAgB,MAE7FxqB,KAAK6kC,WAAaxI,EAAiBr8B,KAAM4mB,EAAWqH,EAAgB1D,WACpE2V,EAAqBlgC,KAAM84B,EAActO,cAE7C,gBACI,OAAOxqB,KAAK6kC,a4CkPKC,CAA2BxO,GAAsB+F,GgErQhC,EAACzB,EAAmB5M,EAAuB5J,EAAoBsX,EAAkB5H,IACnHtJ,IACJ,MAAMua,EAA2B,IAAIrpB,QAyBrC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMqsB,EAA0BD,EAAyBtnB,IAAIiL,GAC7D,YAAgCvd,IAA5B65B,EACOtgB,QAAQC,QAAQqgB,GA5BXzc,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAIsV,EAAkB7J,EAAmBoE,GAEzC,MAAMyc,EAAkCrlB,EAAiBqO,EAAiBvF,GAC1E,IAAKuc,EAAiC,CAClC,MAAMrjC,EAAU,CACZyd,aAAc4O,EAAgB5O,aAC9BC,iBAAkB2O,EAAgB3O,iBAClCC,sBAAuB0O,EAAgB1O,sBACvCgL,UAAW0D,EAAgB1D,UAAUpqB,MACrCqqB,gBAEJyD,EAAkBD,EAAsBtF,EAA2B9mB,GAUvE,OARAmjC,EAAyBpnB,IAAI+K,EAA2BuF,GACnDgX,QAIKrK,EAAkBlS,EAA2BF,EAAM+B,UAAW0D,EAAgB1D,UAAW5R,SAHzF+iB,EAAiBhT,EAA2BF,EAAM+B,UAAW0D,EAAgB1D,UAAW5R,SAK5Fmb,EAAwBtL,EAAOE,EAA2BuF,EAAiBtV,GAC1EsV,GAQIiX,CAAgB1c,EAAOE,EAA2B/P,MhEmOzCwsB,CAA+BvK,GAAmB5M,GAAuB5J,EAAoBsX,GAAkB5H,IACtB9F,GAAuB4G,GAAkBM,GAA6BgL,IACzLkF,GiErQmD,CAACxW,GAC/C,CAAC9O,EAAele,KACnB,MAAMyjC,EAA+BvlB,EAAcwlB,2BAGnD,GAFAhZ,GAA6B+Y,EAA8BzjC,GAEvDA,EAAQyd,aAAe,EACvB,MAAMuP,IAGV,GAAiC,QAA7BhtB,EAAQ0d,iBACR,MAAMsP,IAOV,OALAlC,GAAqC2Y,EAA8BzjC,EAAS,UAC5E8qB,GAAqC2Y,EAA8BzjC,EAAS,QAC5E8qB,GAAqC2Y,EAA8BzjC,EAAS,SAC5E8qB,GAAqC2Y,EAA8BzjC,EAAS,WAC5E8qB,GAAqC2Y,EAA8BzjC,EAAS,aACrEyjC,GjEoP4BE,CAA0C3W,IAE/E4W,G1C/PiD,EAAClP,EAAsB+F,EAAkBoJ,EAAsCL,EAAoCxW,EAAyBgG,EAAkBM,EAA6BgL,IACvO,cAAqC5J,EACxC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCyjC,EAA+BD,EAAmCtlB,EAAegZ,GACjFlS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOslB,EADkBze,EAAY6e,IAAyC,MAE7FzlC,KAAK0lC,QAAUrJ,EAAiBr8B,KAAM4mB,EAAWye,EAA6Bza,QAC9E5qB,KAAK2lC,MAAQtJ,EAAiBr8B,KAAM4mB,EAAWye,EAA6Bxa,MAC5E7qB,KAAK4lC,8BAAgCP,EACrCrlC,KAAK6lC,OAASxJ,EAAiBr8B,KAAM4mB,EAAWye,EAA6Bva,OAC7E9qB,KAAK8lC,SAAWzJ,EAAiBr8B,KAAM4mB,EAAWye,EAA6Bta,SAC/E/qB,KAAK+lC,WAAa1J,EAAiBr8B,KAAM4mB,EAAWye,EAA6Bra,WACjFkV,EAAqBlgC,KAAM,MAE/B,aACI,OAAOA,KAAK0lC,QAGhB,mBACI,OAAO1lC,KAAK4lC,8BAA8BvmB,aAE9C,iBAAiBlf,GACb,MAAM6lC,EAAuBhmC,KAAK4lC,8BAA8BvmB,aAEhE,GADArf,KAAK4lC,8BAA8BvmB,aAAelf,EAC9CA,EAAQ,EAER,MADAH,KAAK4lC,8BAA8BvmB,aAAe2mB,EAC5CpX,IAOd,uBACI,OAAO5uB,KAAK4lC,8BAA8BtmB,iBAE9C,qBAAqBnf,GACjB,MAAM6lC,EAAuBhmC,KAAK4lC,8BAA8BtmB,iBAEhE,GADAtf,KAAK4lC,8BAA8BtmB,iBAAmBnf,EACxC,QAAVA,EAEA,MADAH,KAAK4lC,8BAA8BtmB,iBAAmB0mB,EAChDpX,IAGd,WACI,OAAO5uB,KAAK2lC,MAEhB,YACI,OAAO3lC,KAAK6lC,OAEhB,gBAEI,MAAkE,iBAAvD7lC,KAAK4lC,8BAA8BK,UAAU9lC,MAC7CH,KAAK4lC,8BAA8BK,UAAU9lC,MAEjDH,KAAK4lC,8BAA8BK,UAE9C,cACI,OAAOjmC,KAAK8lC,SAEhB,gBACI,OAAO9lC,KAAK+lC,a0C+LkBG,CAAwC5P,GAAsB+F,GkExQ7C,EAACzB,EAAmBwK,EAAoChhB,EAAoBsX,EAAkB5H,IAC9I,KACH,MAAMqS,EAAwC,IAAIzqB,QAuClD,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMytB,EAAuCD,EAAsC1oB,IAAIiL,GACvF,YAA6Cvd,IAAzCi7B,EACO1hB,QAAQC,QAAQyhB,GA1CE7d,OAAOC,EAAOE,EAA2B/P,KAC1E,IAAI0sB,EAA+BjhB,EAAmBoE,GAKtD,MAAM6d,EAA+CzmB,EAAiBylB,EAA8B3c,GACpG,IAAK2d,EAA8C,CAC/C,MAAMzkC,EAAU,CACZgpB,OAAQya,EAA6Bza,OAAOzqB,MAC5Ckf,aAAcgmB,EAA6BhmB,aAC3CC,iBAAkB+lB,EAA6B/lB,iBAC/CC,sBAAuB8lB,EAA6B9lB,sBACpDsL,KAAMwa,EAA6Bxa,KAAK1qB,MACxC2qB,MAAOua,EAA6Bva,MAAM3qB,MAC1C4qB,QAASsa,EAA6Bta,QAAQ5qB,MAC9C6qB,UAAWqa,EAA6Bra,UAAU7qB,OAEtDklC,EAA+BD,EAAmC1c,EAA2B9mB,GAkBjG,OAhBAukC,EAAsCxoB,IAAI+K,EAA2B2c,GAChEgB,SAQKzL,EAAkBlS,EAA2BF,EAAMoC,OAAQya,EAA6Bza,OAAQjS,SAChGiiB,EAAkBlS,EAA2BF,EAAMqC,KAAMwa,EAA6Bxa,KAAMlS,SAC5FiiB,EAAkBlS,EAA2BF,EAAMsC,MAAOua,EAA6Bva,MAAOnS,SAC9FiiB,EAAkBlS,EAA2BF,EAAMuC,QAASsa,EAA6Bta,QAASpS,SAClGiiB,EAAkBlS,EAA2BF,EAAMwC,UAAWqa,EAA6Bra,UAAWrS,WAXtG+iB,EAAiBhT,EAA2BF,EAAMoC,OAAQya,EAA6Bza,OAAQjS,SAC/F+iB,EAAiBhT,EAA2BF,EAAMqC,KAAMwa,EAA6Bxa,KAAMlS,SAC3F+iB,EAAiBhT,EAA2BF,EAAMsC,MAAOua,EAA6Bva,MAAOnS,SAC7F+iB,EAAiBhT,EAA2BF,EAAMuC,QAASsa,EAA6Bta,QAASpS,SACjG+iB,EAAiBhT,EAA2BF,EAAMwC,UAAWqa,EAA6Bra,UAAWrS,UASzGmb,EAAwBtL,EAAOE,EAA2B2c,EAA8B1sB,GACvF0sB,GAQIiB,CAA6B9d,EAAOE,EAA2B/P,MlEwNzC4tB,CAA4C3L,GAAmBwK,GAAoChhB,EAAoBsX,GAAkB5H,IACtBsR,GAAoCxW,GAAyBgG,GAAkBM,GAA6BgL,IAEtQsG,GzCpQmC,EAAClQ,EAAsB+F,EAAkBoK,EAAwBtY,EAAsByG,EAAkBM,IACvI,cAAuBoB,EAC1B3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCwsB,EAAiBD,EAAqBrO,EAAegZ,GACrDlS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOqO,EADIxH,EAAY6f,IAA2B,MAGjEzmC,KAAKwgC,MAAQnE,EAAiBr8B,KAAM4mB,EAAWwH,EAAerM,KAAMnB,EAA4BD,GAEpG,WACI,OAAO3gB,KAAKwgC,QyCuPIkG,CAA0BpQ,GAAsB+F,GmE1Q/B,EAACzB,EAAmBzM,EAAsB/J,EAAoBsX,EAAkB5H,IAClH,KACH,MAAM6S,EAA0B,IAAIjrB,QAwBpC,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMiuB,EAAyBD,EAAwBlpB,IAAIiL,GAC3D,YAA+Bvd,IAA3By7B,EACOliB,QAAQC,QAAQiiB,GA3BZre,OAAOC,EAAOE,EAA2B/P,KAC5D,IAAIyV,EAAiBhK,EAAmBoE,GAExC,MAAMqe,EAAiCjnB,EAAiBwO,EAAgB1F,GACxE,IAAKme,EAAgC,CACjC,MAAMjlC,EAAU,CACZyd,aAAc+O,EAAe/O,aAC7BC,iBAAkB8O,EAAe9O,iBACjCC,sBAAuB6O,EAAe7O,sBACtCwC,KAAMqM,EAAerM,KAAK5hB,OAE9BiuB,EAAiBD,EAAqBzF,EAA2B9mB,GAUrE,OARA+kC,EAAwBhpB,IAAI+K,EAA2B0F,GAClDyY,QAIKjM,EAAkBlS,EAA2BF,EAAMzG,KAAMqM,EAAerM,KAAMpJ,SAH9E+iB,EAAiBhT,EAA2BF,EAAMzG,KAAMqM,EAAerM,KAAMpJ,SAKjFmb,EAAwBtL,EAAOE,EAA2B0F,EAAgBzV,GACzEyV,GAQI0Y,CAAete,EAAOE,EAA2B/P,MnEyOzCouB,CAA8BnM,GAAmBzM,GAAsB/J,EAAoBsX,GAAkB5H,IACtB3F,GAAsByG,GAAkBM,IACxJ8R,GpB1P+C,EAAC9b,EAA0BD,EAAyByD,EAAiCE,IAC/H,CAAC9O,EAAemN,GAAe5N,eAAcC,mBAAkBC,wBAAuB6L,WAAUE,kBACnG,MAAMqD,EAAa3B,GAAkBC,EAAanN,EAAcqJ,YAC1D8d,EAAoB7b,aAAoB8b,aAAe9b,EAAW,IAAI8b,aAAa9b,GACnF+b,EAAuB7b,aAAuB4b,aAAe5b,EAAc,IAAI4b,aAAa5b,GAC5FD,EAAiB4b,EAAkB/lC,OACnCqqB,EAAoB4b,EAAqBjmC,OACzCsqB,EAAYjnB,KAAK4oB,IAAI9B,EAAgBE,GAC3C,GAAuB,IAAnBF,GAAwBA,EAAiB,GACzC,MAAMuD,IAEV,GAA6B,IAAzBqY,EAAkB,GAClB,MAAMhc,IAEV,GAA0B,IAAtBM,GAA2BA,EAAoB,GAC/C,MAAMqD,IAEV,GAAgC,IAA5BuY,EAAqB,GACrB,MAAMlc,IAEV,GAA6B,IAAzBgc,EAAkB,GAAU,CAC5B,IAAK,IAAI7lC,EAAI,EAAGA,EAAImqB,EAAmBnqB,GAAK,EACxC+lC,EAAqB/lC,IAAM6lC,EAAkB,GAEjD,IAAK,IAAI7lC,EAAI,EAAGA,EAAIiqB,EAAgBjqB,GAAK,EACrC6lC,EAAkB7lC,IAAM6lC,EAAkB,GAGlD,MAAMG,EAAsB1Y,EAAgC5O,EAAe6O,EAAYtP,EAAcA,GACrG+nB,EAAoB/nB,aAAeA,EACnC+nB,EAAoB9nB,iBAAmBA,EACvC8nB,EAAoB7nB,sBAAwBA,EAC5C,MACM8nB,EAAgB,GAChBC,EAAW,GACXC,EAAW,GACjB,IAAK,IAAInmC,EAAI,EAAGA,EAAIie,EAAcje,GAAK,EAAG,CACtCimC,EAAc38B,KAAK,GACnB,MAAM+gB,EAAU,IAAInX,aANH,IAOXoX,EAAU,IAAIpX,aAPH,IAQjBmX,EAAQ+b,KAAK,GACb9b,EAAQ8b,KAAK,GACbF,EAAS58B,KAAK+gB,GACd8b,EAAS78B,KAAKghB,GAGlB0b,EAAoBhiB,eAAkBC,IAClC,MAAME,EAAcF,EAAME,YACpBkiB,EAAepiB,EAAMoiB,aACrB/mB,EAAmB6E,EAAY7E,iBACrC,IAAK,IAAItf,EAAI,EAAGA,EAAIsf,EAAkBtf,GAAK,EAAG,CAC1C,MAAMsH,EAAQ6c,EAAYhF,eAAenf,GACnC+c,EAASspB,EAAalnB,eAAenf,GAC3CimC,EAAcjmC,GAAK+pB,GAAa8b,EAAmB5b,EAAgB8b,EAAsB5b,EAAmBC,EAAW8b,EAASlmC,GAAImmC,EAASnmC,GAAIimC,EAAcjmC,GArBlJ,GAqBoKsH,EAAOyV,KAGhM,MAAMupB,EAAU5nB,EAAcqJ,WAAa,EA6D3C,OAAO0E,GA5D0B,CAC7B,iBACI,OAAOc,GAEX,mBACI,OAAOyY,EAAoB/nB,cAE/B,iBAAiBlf,GACbinC,EAAoB/nB,aAAelf,GAEvC,uBACI,OAAOinC,EAAoB9nB,kBAE/B,qBAAqBnf,GACjBinC,EAAoB9nB,iBAAmBnf,GAE3C,4BACI,OAAOinC,EAAoB7nB,uBAE/B,0BAA0Bpf,GACtBinC,EAAoB7nB,sBAAwBpf,GAEhD,cACI,OAAOinC,EAAoBrnB,SAE/B,aACI,MAAO,CAACqnB,IAEZ,qBACI,OAAOA,EAAoB9f,gBAE/B,sBACI,OAAO8f,EAAoB7f,iBAE/BqK,iBAAgB,IAAIiR,IAETuE,EAAoBxV,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEvE7Y,cAAa,IAAI6Y,IACNuE,EAAoBpd,cAAc6Y,EAAK,IAElDlC,qBAAqBC,EAAaC,EAAaC,GAC3C,GAAIF,EAAY1/B,SAAW2/B,EAAY3/B,QAAU2/B,EAAY3/B,SAAW4/B,EAAc5/B,OAClF,MAAMgqB,IAEV,MAAMhqB,EAAS0/B,EAAY1/B,OAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAChC,MAAMumC,GAASpjC,KAAKyB,IAAM46B,EAAYx/B,GAAKsmC,GACrCjZ,EAAI,CAAClqB,KAAKG,IAAIijC,GAAQpjC,KAAKE,IAAIkjC,IAG/BC,EAAWvZ,GAFCE,GAAmB4Y,EAAsB1Y,GACvCF,GAAmB0Y,EAAmBxY,IAE1DoS,EAAYz/B,GAAKmD,KAAKM,KAAK+iC,EAAS,GAAKA,EAAS,GAAKA,EAAS,GAAKA,EAAS,IAC9E9G,EAAc1/B,GAAKmD,KAAKK,MAAMgjC,EAAS,GAAIA,EAAS,MAG5DjW,oBAAmB,IAAIkR,IACZuE,EAAoBzV,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxBuE,IoBqIvBS,CAAsC3c,GAA0BD,GAAyByD,GAAiCE,IAC3JkZ,GoE5Q+C,EAACnV,EAAiBxE,EAAsBO,EAAiCqZ,IAClHrf,GAEAiK,EAAgB7G,IAAoB,IAAMA,GAAmBpD,KAEtDhE,QAAQC,QAAQgO,EAAgBoV,EAA2CA,IAA4C7U,MAAM8U,IAChI,IAAKA,EAA2C,CAC5C,MAAMZ,EAAsB1Y,EAAgChG,EAA2B,IAAK,EAAG,GAC/FA,EAA0Buf,WAAa,KACnCb,EAAoBhiB,eAAiB,KACrCgiB,EAAoBjjB,cAExBijB,EAAoBhiB,eAAiB,IAAMsD,EAA0BwU,YACrEkK,EAAoBvjB,QAAQ6E,EAA0BlZ,aAE1D,OAAOkZ,EAA0Bwf,oBAGlC,IAAIxjB,SAASC,IAEhB,MAAM+a,EAAWvR,EAAqBzF,EAA2B,CAC7DrJ,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAM,IAEV2G,EAA0Buf,WAAc5iB,IACpCqa,EAASvb,aACTQ,EAAQU,EAAMoD,iBAElBiX,EAAS7b,QAAQ6E,EAA0BlZ,aAC3CkZ,EAA0Bwf,oBpE6OEC,CAAsCxV,GAAiBxE,GAAsBO,GqE7QtD,EAACP,EAAsB2G,IAC3E,KACH,GAA6C,OAAzCA,EACA,OAAOpQ,QAAQC,SAAQ,GAE3B,MAAM+D,EAA4B,IAAIoM,EAAqC,EAAG,EAAG,OAE3E4K,EAAWvR,EAAqBzF,EAA2B,CAC7DrJ,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAM,IAGV,OAAO,IAAI2C,SAASC,IAChB+D,EAA0Buf,WAAa,KACnCvI,EAASvb,aACTQ,EAAkD,IAA1C+D,EAA0BwU,cAEtCxU,EAA0Bwf,qBrE0PgHE,CAAgDja,GAAsB2G,KACtNuT,GsEhP4C,EAACvN,EAAmC1W,EAAoB0Q,EAAsChB,EAAyBgU,IAC9J,CAAC1c,EAAUE,KACd,MAAM4W,EAA2B,IAAIxmB,QACrC,IAAI4sB,EAAwB,KAgD5B,MAAO,CACHnU,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMub,EAA0BgO,EAAyBzkB,IAAIiL,GAC7D,YAAgCvd,IAA5B+oB,EACOxP,QAAQC,QAAQuP,GAnDX3L,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAIgY,EAA8B,KAC9B4X,EAAsBnkB,EAAmBoE,GAE7C,MAAMggB,EAAsC5oB,EAAiB2oB,EAAqB7f,GAmBlF,QAjBkDvd,IAA9Cud,EAA0B+f,gBAC1B9X,EAA8BmK,EAAkCpS,EAA2B,CACvF5H,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBwB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAGZsnB,IAEND,EAAsB7f,EAA0B+f,gBAAgBnd,EAAaF,IAEjF8W,EAAyBvkB,IAAI+K,EAA2D,OAAhCiI,EAAuC4X,EAAsB5X,GACjF,OAAhCA,EAAsC,CACtC,GAA8B,OAA1B2X,EAAgC,CAChC,GAA6C,OAAzCxT,EACA,MAAM,IAAIjzB,MAAM,uDAEpB,MAAM6mC,EAA6B,IAAI5T,EAEvCtM,EAAMzI,QAAQvQ,YAAY6P,aAE1BmJ,EAAMzI,QAAQ7e,OAAQwnB,EAA0BS,YAChDmf,EAAwB,iBACdxU,EAAwBtL,EAAOkgB,EAA4BA,EAA2Bl5B,YAAamJ,GAlExG,EAAC8P,EAAgBC,EAA2B0C,EAAUE,KAC3E,MAAM2b,EAAoB7b,aAAoB8b,aAAe9b,EAAW,IAAI8b,aAAa9b,GACnF+b,EAAuB7b,aAAuB4b,aAAe5b,EAAc,IAAI4b,aAAa5b,GAC5FD,EAAiB4b,EAAkB/lC,OACnCqqB,EAAoB4b,EAAqBjmC,OACzCsqB,EAAYjnB,KAAK4oB,IAAI9B,EAAgBE,GAC3C,GAA6B,IAAzB0b,EAAkB,GAAU,CAC5B,IAAK,IAAI7lC,EAAI,EAAGA,EAAIiqB,EAAgBjqB,GAAK,EACrC+lC,EAAqB/lC,IAAM6lC,EAAkB,GAEjD,IAAK,IAAI7lC,EAAI,EAAGA,EAAImqB,EAAmBnqB,GAAK,EACxC6lC,EAAkB7lC,IAAM6lC,EAAkB,GAGlD,MACMxb,EAAU,IAAInX,aADC,IAEfoX,EAAU,IAAIpX,aAFC,IAGfq0B,EAAiBjgB,EAA0BzD,aAAawD,EAAe/H,iBAAkB+H,EAAevnB,OAAQunB,EAAeU,YAC/HzI,EAAmB+H,EAAe/H,iBACxC,IAAK,IAAItf,EAAI,EAAGA,EAAIsf,EAAkBtf,GAAK,EAAG,CAC1C,MAAMsH,EAAQ+f,EAAelI,eAAenf,GACtC+c,EAASwqB,EAAepoB,eAAenf,GAC7CqqB,EAAQ+b,KAAK,GACb9b,EAAQ8b,KAAK,GACbrc,GAAa8b,EAAmB5b,EAAgB8b,EAAsB5b,EAAmBC,EAAWC,EAASC,EAAS,EAVrG,GAUsHhjB,EAAOyV,GAElJ,OAAOwqB,GA0CoBC,OADsBd,EAAgCY,GACrBhgB,EAA2B0C,EAAUE,IAHzD,GAM5B,MAAMqd,QAAuBL,EAG7B,OAFA3X,EAA4B7P,OAAS6nB,EACrChY,EAA4BjL,MAAM,GAC3BiL,EAGX,aADMmD,EAAwBtL,EAAOE,EAA2B6f,EAAqB5vB,GAC9E4vB,GAQIpG,CAAgB3Z,EAAOE,EAA2B/P,MtEuLrCkwB,CAAmC/N,GAAmC1W,EAAoB0Q,GAAsChB,GAAyBgU,IAEvLgB,GtC1QwC,EAACxS,EAAsByS,EAA2BV,EAA6BzT,EAAkBM,EAA6BgL,IACjK,cAA4B5J,EAC/B3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC6G,EAAYsO,EAA4BpV,GACxCgZ,EAAgB,IAAK,MAAoBl3B,GACzC2mC,EAAsBQ,EAA0BjpB,EAAe8G,EAAY,KAAO7G,EAAQkN,YAAa6L,GAE7GlC,MAAM7W,GAAS,EAAOwoB,EADU3hB,EAAYyhB,EAA4BvP,EAAc1N,SAAU0N,EAAcxN,aAAe,M6GZ9E,CAACid,IACb,IAAE5H,EAA7C4H,EAAoB5H,sBAAyBA,EAO1C4H,EAAoB5H,qBANZ,CAACC,EAAaC,EAAaC,KAC9B,GAAIF,EAAY1/B,SAAW2/B,EAAY3/B,QAAU2/B,EAAY3/B,SAAW4/B,EAAc5/B,OAClF,MAAMgqB,KAEV,OAAOyV,EAAqBnpB,KAAK+wB,EAAqB3H,EAAaC,EAAaC,M7GUhFkI,CAA4CT,GAC5CvoC,KAAKipC,qBAAuBV,EAE5BrI,EAAqBlgC,KAAM,GAE/B2gC,qBAAqBC,EAAaC,EAAaC,GAC3C,OAAO9gC,KAAKipC,qBAAqBtI,qBAAqBC,EAAaC,EAAaC,KsCyP3DoI,CAA+B5S,GwE/QhB,CAAC0Q,GACtC,CAAClnB,EAAemN,EAAarrB,KAEhC,QAAsCuJ,IAAlC2U,EAAc2oB,gBACd,OAAOzB,EAA+BlnB,EAAemN,EAAarrB,GAGtE,MAAM2mC,EAAsBzoB,EAAc2oB,gBAAgB7mC,EAAQ0pB,YAAa1pB,EAAQwpB,UAEvF,OADAkB,GAA6Bic,EAAqB3mC,GAC3C2mC,GxEqQmBY,CAAiCnC,IAC8CqB,GAA6BzT,GAAkBM,GAA6BgL,IACvLkJ,GyEhRoC,EAAC/M,EAAkBsF,EAA+BoB,EAAgCrU,EAAiCwG,IAClJ,CAACnV,EAASD,KACb,MAAMupB,EAAiBvpB,EAAc+G,UAuE/B,SAAEyiB,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,UAAEja,EAAS,UAAEC,EAAS,UAAEC,EAAS,IAAEga,EAAG,IAAEC,EAAG,IAAEC,QAAoCx+B,IAA5Bk+B,EAAeC,SArE1E,MAC1B,MAAM9H,EAAoBG,EAA8B7hB,EAAe,CACnET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB,IAEdV,EAAYsO,EAA4BpV,GACxCsnB,EAAsB1Y,EAAgC5O,EAAe,IAAK,EAAG,GAC7E8pB,EAAuB,CAAClhC,EAAOvI,KACjC,MAAM0pC,EAAqB9G,EAA+BjjB,EAAe,CACrET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB0C,OAAQ9hB,IAcZ,OAZA0pC,EAAmBhmB,QAAQ2d,EAAmB,EAAG94B,GAEjDmhC,EAAmBnkB,QACnBzlB,OAAOC,eAAe2pC,EAAmB5nB,OAAQ,eAAgB,CAC7DxE,IAAG,IACQtd,IAORk8B,EAAiB,CAAEtc,WAAW6G,EAAWijB,EAAmB5nB,OAAQrB,EAA4BD,IAE3G,IAAImpB,EAAkB,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GACnCC,EAAe,CAAC,EAAG,EAAG,GA0B1B,OAxBA3C,EAAoBhiB,eAAiB,EAAGG,kBACpC,MAAMykB,EAAc,CAChBzkB,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,IAE9BypB,EAAYxkB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU2pC,EAAgBx3B,OAC7D+2B,EAAeY,kBAAkBD,GACjCF,EAAkBE,GAEtB,MAAME,EAAU,CACZ3kB,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,IAE9B2pB,EAAQ1kB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU4pC,EAAaz3B,OACtD+2B,EAAec,eAAeD,GAC9BH,EAAeG,IAGvB1I,EAAkB3d,QAAQujB,GACnB,CACHkC,SAAUM,EAAqB,EAAG,GAClCL,SAAUK,EAAqB,EAAG,GAClCJ,SAAUI,EAAqB,GAAI,GACnCra,UAAWqa,EAAqB,EAAG,GACnCpa,UAAWoa,EAAqB,EAAG,GACnCna,UAAWma,EAAqB,EAAG,GACnCH,IAAKG,EAAqB,EAAG,GAC7BF,IAAKE,EAAqB,EAAG,GAC7BD,IAAKC,EAAqB,EAAG,KAG4FQ,GAA0Bf,EAC3J,MAAO,CACH,eACI,OAAOC,GAEX,eACI,OAAOC,GAEX,eACI,OAAOC,GAEX,gBACI,OAAOja,GAEX,gBACI,OAAOC,GAEX,gBACI,OAAOC,GAEX,UACI,OAAOga,GAEX,UACI,OAAOC,GAEX,UACI,OAAOC,KzE4KKU,CAA2BhO,GAAkBsF,GAA+BoB,GAAgCrU,GAAiCwG,IACnKoV,GAAkC,IAAI5uB,QACtC6uB,G0ElRkD,EAACxL,EAAiCqK,EAAqB9T,EAAwBJ,EAA6BoV,EAAiCxY,IAC1L,cAAsCwD,EACzC3sB,YAAY6hC,EAAgB9pB,GACxBkW,MAAM4T,GACNxqC,KAAKwqC,eAAiBA,EACtB1uB,EAAc6B,IAAI3d,KAAMwqC,GACpBtV,EAA4BsV,IAC5BF,EAAgC3sB,IAAI6sB,EAAgB,IAAInnB,KAE5DrjB,KAAKyqC,aAAe,IAAI1L,EAAgC/+B,KAAM0gB,GAC9D1gB,KAAK0qC,UAAYtB,EAAoBppC,KAAMwqC,GAC3CxqC,KAAK2qC,eAAiB,KAE1B,kBACI,OAAO3qC,KAAKwqC,eAAetN,YAE/B,kBACI,OAAOl9B,KAAKyqC,aAEhB,eACI,OAAOzqC,KAAK0qC,UAEhB,oBACI,OAAO1qC,KAAK2qC,eAEhB,kBAAkBxqC,GACd,MAAMu+B,EAAmC,mBAAVv+B,EAAuB2xB,EAAkB9xB,KAAMG,GAAS,KACvFH,KAAKwqC,eAAeI,cAAgBlM,EACpC,MAAMmM,EAAsB7qC,KAAKwqC,eAAeI,cAChD5qC,KAAK2qC,eACuB,OAAxBE,GAAgCA,IAAwBnM,EAClDv+B,EACA0qC,EAEd,iBACI,OAAO7qC,KAAKwqC,eAAerhB,WAE/B,YACI,OAAOnpB,KAAKwqC,eAAezT,Q1E4OI+T,CAAyC/L,GAAiCqK,GAAqB9T,GAAwBJ,GAA6BoV,GAAiCxY,IAC1NiZ,G2E/Q2C,EAACvQ,EAAqB7H,EAAiBjC,EAAkEG,EAA+DC,EAAiEW,IAC/Q,CAAC3R,EAAele,KACnB,MAAMopC,EAAuBlrB,EAAc8Q,mBAwB3C,OAvBAtE,GAA6B0e,EAAsBppC,GACnD8qB,GAAqCse,EAAsBppC,EAAS,UACpE8qB,GAAqCse,EAAsBppC,EAAS,kBACvCuJ,IAAzBvJ,EAAQitB,aACRmc,EAAqBC,gBAAgBrpC,EAAQitB,cAG7CzC,GAA4B4e,EAAsBppC,EAAS,QAG1D+wB,EAAgBjC,GAAkE,IAAMA,EAAiE5Q,MAC1J6M,GAA0Dqe,GAGzDrY,EAAgB9B,GAA+D,IAAMA,EAA8D/Q,MACpJ2R,EAAuDuZ,EAAsBlrB,GAG5E6S,EAAgB7B,GAAiE,IAAMA,EAAgEhR,MACxJiN,GAAyDie,GAG7DxQ,EAAoB1a,EAAekrB,GAC5BA,G3EqPoBE,CAAkC1Q,GAAqB7H,GAAiBjC,GAAkEG,GAA+DC,GAAiEW,IACvS0Z,G4EpR6C,EAACvQ,EAAmBmQ,EAA4B3mB,EAAoBsX,EAAkB5H,IAC9H,KACH,MAAMsX,EAAgC,IAAI1vB,QAC1C,IAAImT,EAAe,KACfnJ,EAAQ,KACR3Z,EAAO,KAmCX,MAAO,CACH,iBAAiB5L,GACb0uB,EAAe1uB,GAEnB,UAAUA,GACNulB,EAAQvlB,GAEZ,SAASA,GACL4L,EAAO5L,GAEXg0B,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAM0yB,EAA+BD,EAA8B3tB,IAAIiL,GACvE,YAAqCvd,IAAjCkgC,EACO3mB,QAAQC,QAAQ0mB,GA/CN9iB,OAAOC,EAAOE,EAA2B/P,KAClE,IAAIqyB,EAAuB5mB,EAAmBoE,GAE9C,MAAM8iB,EAAuC1rB,EAAiBorB,EAAsBtiB,GACpF,IAAK4iB,EAAsC,CACvC,MAAM1pC,EAAU,CACZyd,aAAc2rB,EAAqB3rB,aACnCC,iBAAkB0rB,EAAqB1rB,iBACvCC,sBAAuByrB,EAAqBzrB,sBAC5CsC,OAAQmpB,EAAqBnpB,OAAO1hB,MACpC2hB,UAAWkpB,EAAqBlpB,UAAU3hB,MAC1C0uB,aAA+B,OAAjBA,OAAwB1jB,EAAY0jB,EAClD5sB,KAAM+oC,EAAqB/oC,MAE/B+oC,EAAuBD,EAA2BriB,EAA2B9mB,GAC/D,OAAV8jB,GACAslB,EAAqBtlB,MAAMA,GAElB,OAAT3Z,GACAi/B,EAAqBj/B,KAAKA,GAalC,OAVAq/B,EAA8BztB,IAAI+K,EAA2BsiB,GACxDM,SAKK1Q,EAAkBlS,EAA2BF,EAAM3G,OAAQmpB,EAAqBnpB,OAAQlJ,SACxFiiB,EAAkBlS,EAA2BF,EAAM1G,UAAWkpB,EAAqBlpB,UAAWnJ,WAL9F+iB,EAAiBhT,EAA2BF,EAAM3G,OAAQmpB,EAAqBnpB,OAAQlJ,SACvF+iB,EAAiBhT,EAA2BF,EAAM1G,UAAWkpB,EAAqBlpB,UAAWnJ,UAMjGmb,EAAwBtL,EAAOE,EAA2BsiB,EAAsBryB,GAC/EqyB,GAiBIO,CAAqB/iB,EAAOE,EAA2B/P,M5E6NzC6yB,CAAoC5Q,GAAmBmQ,GAA4B3mB,EAAoBsX,GAAkB5H,IACxJ2X,GhB1QyC,EAACnV,EAAsB+F,EAAkB0O,EAA4BI,EAA8BvW,EAAkBM,EAA6BpD,IACtL,cAA6BwE,EAChC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCopC,EAAuBD,EAA2BjrB,EAAegZ,GACjElS,EAAYsO,EAA4BpV,GACxC4rB,EAA0B9kB,EAAYukB,IAAiC,KACvEzD,EAAU3nB,EAAQoJ,WAAa,EACrCyN,MAAM7W,GAAS,EAAOirB,EAAsBU,GAE5C1rC,KAAKsgC,QAAUjE,EAAiBr8B,KAAM4mB,EAAWokB,EAAqBnpB,OAAQ,QAAS,QAEvF7hB,KAAKugC,WAAalE,EAAiBr8B,KAAM4mB,EAAWokB,EAAqBlpB,UAAW4lB,GAAUA,GAC9F1nC,KAAK2rC,sBAAwBX,EAC7BhrC,KAAKw+B,SAAW,KAChBx+B,KAAK4rC,wBAA0BF,EACM,OAAjC1rC,KAAK4rC,8BAAmEzgC,IAA/B2tB,EAAcjK,eACvD7uB,KAAK4rC,wBAAwB/c,aACzBiK,EAAcjK,cAG1B,aACI,OAAO7uB,KAAKsgC,QAEhB,gBACI,OAAOtgC,KAAKugC,WAEhB,cACI,OAAOvgC,KAAKw+B,SAEhB,YAAYr+B,GACR,MAAMu+B,EAAmC,mBAAVv+B,EAAuB2xB,EAAkB9xB,KAAMG,GAAS,KACvFH,KAAK2rC,sBAAsBhN,QAAUD,EACrC,MAAME,EAAgB5+B,KAAK2rC,sBAAsBhN,QACjD3+B,KAAKw+B,SAA6B,OAAlBI,GAA0BA,IAAkBF,EAAkBv+B,EAAQy+B,EAE1F,WACI,OAAO5+B,KAAK2rC,sBAAsB1pC,KAEtC,SAAS9B,GACLH,KAAK2rC,sBAAsB1pC,KAAO9B,EACG,OAAjCH,KAAK4rC,0BACL5rC,KAAK4rC,wBAAwB/c,aAAe,MAGpDoc,gBAAgBpc,GACZ7uB,KAAK2rC,sBAAsBV,gBAAgBpc,GACN,OAAjC7uB,KAAK4rC,0BACL5rC,KAAK4rC,wBAAwB/c,aAAeA,GAGpDnJ,MAAMmH,EAAO,GAKT,GAJA7sB,KAAK2rC,sBAAsBjmB,MAAMmH,GACI,OAAjC7sB,KAAK4rC,0BACL5rC,KAAK4rC,wBAAwBlmB,MAAQmH,GAEd,WAAvB7sB,KAAK+f,QAAQgX,MAAoB,CACjCrY,EAAyB1e,MACzB,MAAM6+B,EAA8B,KAChC7+B,KAAK2rC,sBAAsBha,oBAAoB,QAASkN,GACpDhe,EAAkB7gB,OAClB+e,EAA0B/e,OAGlCA,KAAK2rC,sBAAsB/Z,iBAAiB,QAASiN,IAG7D9yB,KAAK8gB,EAAO,GACR7sB,KAAK2rC,sBAAsB5/B,KAAK8gB,GACK,OAAjC7sB,KAAK4rC,0BACL5rC,KAAK4rC,wBAAwB7/B,KAAO8gB,KgBmMlBgf,CAAgCvV,GAAsB+F,GAAkB0O,GAA4BI,GAA8BvW,GAAkBM,GAA6BpD,IAC7Mga,G6EvR2D,CAAChR,GACvD,CAAChb,EAAeD,KACnB,MAAM8Q,EAA8BmK,EAAkChb,EAAe,CACjFgB,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBwB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,IAEZjB,EAAoBH,EAAcmF,aAAa,EAAG,EAAG,OAK3D,OAJA0L,EAA4B7P,OAASb,EACrC0Q,EAA4B5P,MAAO,EACnC4P,EAA4B9M,QAAQhE,GACpC8Q,EAA4BjL,QACrB,KACHiL,EAA4B5kB,OAC5B4kB,EAA4BxM,WAAWtE,K7EoQAksB,CAAkDjR,IAC/FkR,G8EtRgD,EAACF,EAA4C7gB,EAAyBkD,EAAsB4B,EAAWiR,IAClJ,CAAClhB,GAAiB+P,QAAOC,gBAAe6S,MAC3C,MAAMsJ,EAAyBnsB,EAAcosB,mBACvCC,EAAyBrsB,EAAcosB,mBAC7C5f,GAA6B2f,EAAwBtJ,GACrDrW,GAA6B6f,EAAwBxJ,GACrD,MAAMyJ,EAAgBje,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,KAAM,IACjFsqB,EAAiBle,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,MAAO,IACnFuqB,EAAiBne,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,KAAM,IAClFwqB,EAAiBpe,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,MAAO,IACzF,IAAIyqB,EAAwC,KACxCC,GAAc,EACdC,EAAkB,KACtB,MAAMC,EAA4B,CAC9B,mBAGA,mBACI,OAAOV,EAAuB5sB,cAElC,iBAAiBlf,GACbisC,EAAc/sB,aAAelf,EAC7BksC,EAAehtB,aAAelf,EAC9B8rC,EAAuB5sB,aAAelf,EACtCmsC,EAAejtB,aAAelf,EAC9BgsC,EAAuB9sB,aAAelf,EACtCosC,EAAeltB,aAAelf,GAElC,uBACI,OAAO8rC,EAAuB3sB,kBAElC,qBAAqBnf,GACjBisC,EAAc9sB,iBAAmBnf,EACjCksC,EAAe/sB,iBAAmBnf,EAClC8rC,EAAuB3sB,iBAAmBnf,EAC1CmsC,EAAehtB,iBAAmBnf,EAClCgsC,EAAuB7sB,iBAAmBnf,EAC1CosC,EAAejtB,iBAAmBnf,GAEtC,4BACI,OAAO8rC,EAAuB1sB,uBAElC,0BAA0Bpf,GACtBisC,EAAc7sB,sBAAwBpf,EACtCksC,EAAe9sB,sBAAwBpf,EACvC8rC,EAAuB1sB,sBAAwBpf,EAC/CmsC,EAAe/sB,sBAAwBpf,EACvCgsC,EAAuB5sB,sBAAwBpf,EAC/CosC,EAAehtB,sBAAwBpf,GAE3C,cACI,OAAO8rC,EAAuBlsB,SAElC,YACI,OAAO2sB,GAEX,UAAUvsC,GAEN,GAAc,OAAVA,GAAkBA,EAAMe,OAAS,EACjC,MAAM+pB,IAEV,GAAc,OAAV9qB,EACA8rC,EAAuBpc,MAAQ1vB,EAC/BgsC,EAAuBtc,MAAQ1vB,MAE9B,CACD,MAAMysC,EAAczsC,EAAMe,OACpB2rC,EAAgB,IAAIv4B,aAAas4B,EAAc,EAAKA,EAAc,GAClEE,EAAgB,IAAIx4B,aAAas4B,EAAc,EAAKA,EAAc,GACxEC,EAAc,GAAK1sC,EAAM,GACzB2sC,EAAc,IAAM3sC,EAAMysC,EAAc,GACxC,MAAM1rC,EAASqD,KAAK+O,MAAMs5B,EAAc,GAAK,GACvCG,GAAeH,EAAc,GAAK,EAAI,EAC5C,IAAK,IAAIxrC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAChC,MAAM8R,EAAkB9R,EAAIF,EAAU6rC,EAChC55B,EAAa5O,KAAK6O,MAAMF,GACxBG,EAAa9O,KAAK+O,KAAKJ,GAC7B25B,EAAczrC,GACV+R,IAAeE,EACTlT,EAAMgT,IACL,GAAKD,EAAiBC,IAAehT,EAAMgT,IACzC,GAAKE,EAAaH,IAAmB/S,EAAMkT,GACxDy5B,EAAc1rC,GACV+R,IAAeE,GACRlT,EAAMysC,EAAc,EAAIz5B,KACtB,GAAKD,EAAiBC,IAAehT,EAAMysC,EAAc,EAAIz5B,IAC7D,GAAKE,EAAaH,IAAmB/S,EAAMysC,EAAc,EAAIv5B,GAE9Ew5B,EAAc3rC,GAAU0rC,EAAc,GAAM,EAAIzsC,EAAMe,EAAS,IAAMf,EAAMe,EAAS,GAAKf,EAAMe,EAAS,IAAM,EAC9G+qC,EAAuBpc,MAAQgd,EAC/BV,EAAuBtc,MAAQid,EAEnCJ,EAAkBvsC,EACdssC,IACI1c,EAAU2c,IAA8D,OAA1CF,EAC9BA,EAAwCV,EAA2ChsB,EAAessB,GAEnD,OAA1CI,IACLA,IACAA,EAAwC,QAIpD,aACI,MAAO,CAACJ,IAEZ,qBACI,OAAOH,EAAuB3kB,gBAElC,sBACI,OAAO2kB,EAAuB1kB,iBAElC,iBACI,OAAO0kB,EAAuBnc,YAElC,eAAe3vB,GACX8rC,EAAuBnc,WAAa3vB,EACpCgsC,EAAuBrc,WAAa3vB,GAExCyxB,iBAAgB,IAAIiR,IACTuJ,EAAcxa,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjE7Y,cAAa,IAAI6Y,IACNuJ,EAAcpiB,cAAc6Y,EAAK,IAE5ClR,oBAAmB,IAAIkR,IACZuJ,EAAcza,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,KA+BxE,OA5Bc,OAAVhT,IAEA8c,EAA0B9c,MAAQA,aAAiBvb,aAAeub,EAAQ,IAAIvb,aAAaub,IAE3FC,IAAe6c,EAA0B7c,aACzC6c,EAA0B7c,WAAaA,GAuBpCkR,EAAmBnT,GAAqB8e,EAA2BL,IArBpD,KAClBF,EAAcvoB,QAAQooB,GAAwBpoB,QAAQyoB,GACtDF,EAAcvoB,QAAQwoB,GAAgBxoB,QAAQsoB,GAAwBtoB,QAAQ0oB,GAAgB1oB,QAAQyoB,GACtGG,GAAc,EACV1c,EAAU2c,KACVF,EAAwCV,EAA2ChsB,EAAessB,OAGjF,KACrBA,EAAcjoB,WAAW8nB,GACzBA,EAAuB9nB,WAAWmoB,GAClCF,EAAcjoB,WAAWkoB,GACzBA,EAAeloB,WAAWgoB,GAC1BA,EAAuBhoB,WAAWooB,GAClCA,EAAepoB,WAAWmoB,GAC1BG,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,U9E4HhBQ,CAAuClB,GAA4C7gB,GAAyBkD,GAAsB4B,GAAWiR,IAC/KiM,G+EvR2C,EAACnB,EAA4C7gB,EAAyB+gB,EAAiCjc,EAAWiR,EAAoBrL,EAA+B3F,IAC3M,CAAClQ,EAAele,KACnB,MAAMsrC,EAAuBptB,EAAcosB,mBAO3C,GAAsC,OAAlCvW,GACuC,uBAAvCA,EAA8BzsB,WACqBiC,IAAnD2U,EAAciF,aAAahD,KAAKorB,eAChC,OAAOnB,EAAgClsB,EAAele,GAE1D0qB,GAA6B4gB,EAAsBtrC,GACnD,MAAMiuB,EAA0B,OAAlBjuB,EAAQiuB,OAAkBjuB,EAAQiuB,iBAAiBvb,aAAe1S,EAAQiuB,MAAQ,IAAIvb,aAAa1S,EAAQiuB,OAEzH,GAAc,OAAVA,GAAkBA,EAAM3uB,OAAS,EACjC,MAAM+pB,IAGVmB,GAA4B8gB,EAAsB,CAAErd,SAAS,SAC7DzD,GAA4B8gB,EAAsBtrC,EAAS,cAC3D,IAAI4qC,EAAwC,KACxCC,GAAc,EA2BlB,OA1BAzc,EAAmBkd,EAAsB,SAAUzvB,GAAQ,IAAMA,EAAIjG,KAAK01B,KAAwBvvB,GAASxd,IACvGwd,EAAInG,KAAK01B,EAAsB/sC,GAC3BssC,IACI1c,EAAU5vB,IAAoD,OAA1CqsC,EACpBA,EAAwCV,EAA2ChsB,EAAeotB,GAE5Fnd,EAAU5vB,IAAoD,OAA1CqsC,IAC1BA,IACAA,EAAwC,OAGzCrsC,KAeJ6gC,EAAmBkM,GAbJ,KAClBT,GAAc,EACV1c,EAAUmd,EAAqBrd,SAC/B2c,EAAwCV,EAA2ChsB,EAAeotB,OAGjF,KACrBT,GAAc,EACgC,OAA1CD,IACAA,IACAA,EAAwC,U/EuOrBY,CAAkCtB,GAA4C7gB,GAAyB+gB,GAAiCjc,GAAWiR,GAAoBrL,GAA+B3F,IAEnOqd,IgFxRwCC,GCDI,EAAC9pB,EAAyCyH,EAAyB0W,EAA+BxT,EAAsBO,EAAiCue,EAA4Bre,EAAyB1K,EAA8C8c,IACnS,CAAClhB,GAAiBgP,iBAAgBC,iBAAgBC,gBAAeC,gBAAeC,cAAaC,eAAcC,eAAcC,eAAcC,eAAcC,YAAWC,YAAWC,YAAWC,cAAaC,mBAAkBgT,MACxN,MAAM4K,EAAaztB,EAAc0tB,eAEjC,GAAI7K,EAAiBtjB,aAAe,EAChC,MAAMuP,IAGV,GAA0C,QAAtC+T,EAAiBrjB,iBACjB,MAAMsP,IAEVtC,GAA6BihB,EAAY5K,GACzC,MAAM8K,EAAyB,CAC3BpuB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,YAErBiiB,EAAoBG,EAA8B7hB,EAAe,IAChE2tB,EACHluB,sBAAuB,WACvB+H,eAAgB,IAEd8kB,EAAgBje,EAAqBrO,EAAe,IAAK6iB,EAAkB5gB,KAAM,IACjF2rB,EAAuBvf,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC9F4rB,EAAuBxf,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC9F6rB,EAAuBzf,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC9F8rB,EAAoB1f,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC3F+rB,EAAoB3f,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC3FgsB,EAAoB5f,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAC3FqlB,EAAsB1Y,EAAgC5O,EAAe,IAAK,EAAG,GAC7EkuB,EAAiBf,EAA2BntB,EAAe,IAC1D2tB,EACH5d,MAAO,IAAIvb,aAAa,CAAC,EAAG,IAC5Bwb,WAAY,SAEhB,IAAIga,EAAkB,CAAC3a,EAAcC,EAAcC,GAC/C0a,EAAe,CAACxa,EAAWC,EAAWC,GAE1C2X,EAAoBhiB,eAAiB,EAAGG,kBACpC,MAAMykB,EAAc,CAChBzkB,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,IAE9BypB,EAAYxkB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU2pC,EAAgBx3B,OAC7Di7B,EAAWtD,kBAAkBD,GAC7BF,EAAkBE,GAEtB,MAAME,EAAU,CACZ3kB,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,GAC9BgF,EAAYhF,eAAe,GAAG,IAE9B2pB,EAAQ1kB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU4pC,EAAaz3B,OACtDi7B,EAAWpD,eAAeD,GAC1BH,EAAeG,IAGvBjqC,OAAOC,eAAeytC,EAAqB5rB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IAC9Exd,OAAOC,eAAe0tC,EAAqB7rB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IAC9Exd,OAAOC,eAAe2tC,EAAkB9rB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IAC3Exd,OAAOC,eAAe4tC,EAAkB/rB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IAC3Exd,OAAOC,eAAe6tC,EAAkBhsB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IAC3E,MAAMwwB,EAAwB,CAC1B,mBAGA,mBACI,OAAOV,EAAWluB,cAEtB,iBAAiBlf,GAEb,GAAIA,EAAQ,EACR,MAAMyuB,IAEVwd,EAAc/sB,aAAelf,EAC7BotC,EAAWluB,aAAelf,GAE9B,uBACI,OAAOotC,EAAWjuB,kBAEtB,qBAAqBnf,GAEjB,GAAc,QAAVA,EACA,MAAMyuB,IAEVwd,EAAc9sB,iBAAmBnf,EACjCotC,EAAWjuB,iBAAmBnf,GAElC,4BACI,OAAOotC,EAAWhuB,uBAEtB,0BAA0Bpf,GACtBisC,EAAc7sB,sBAAwBpf,EACtCotC,EAAWhuB,sBAAwBpf,GAEvC,qBACI,OAAOotC,EAAWze,gBAEtB,mBAAmB3uB,GACfotC,EAAWze,eAAiB3uB,GAEhC,qBACI,OAAOotC,EAAWxe,gBAEtB,mBAAmB5uB,GACfotC,EAAWxe,eAAiB5uB,GAEhC,oBACI,OAAOotC,EAAWve,eAEtB,kBAAkB7uB,GAEd,GAAIA,EAAQ,GAAKA,EAAQ,EACrB,MAAM8qB,IAEVsiB,EAAWve,cAAgB7uB,GAE/B,cACI,OAAOotC,EAAWxtB,SAEtB,oBACI,OAAOwtB,EAAWte,eAEtB,kBAAkB9uB,GACdotC,EAAWte,cAAgB9uB,GAE/B,aACI,MAAO,CAACisC,IAEZ,kBACI,OAAOmB,EAAWre,aAEtB,gBAAgB/uB,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAI2sB,WAEdygB,EAAWre,YAAc/uB,GAE7B,qBACI,OAAOotC,EAAWjmB,gBAEtB,sBACI,OAAOimB,EAAWhmB,iBAEtB,mBACI,OAAOmmB,EAAqB3rB,MAEhC,mBACI,OAAO4rB,EAAqB5rB,MAEhC,mBACI,OAAO6rB,EAAqB7rB,MAEhC,mBACI,OAAOwrB,EAAWje,cAEtB,iBAAiBnvB,GACbotC,EAAWje,aAAenvB,GAE9B,gBACI,OAAO0tC,EAAkB9rB,MAE7B,gBACI,OAAO+rB,EAAkB/rB,MAE7B,gBACI,OAAOgsB,EAAkBhsB,MAE7B,kBACI,OAAOwrB,EAAW7d,aAEtB,gBAAgBvvB,GAEZ,GAAIA,EAAQ,EACR,MAAM,IAAI2sB,WAEdygB,EAAW7d,YAAcvvB,GAE7B,oBACI,OAAOotC,EAAW5d,eAEtB,kBAAkBxvB,GAEd,GAAIA,EAAQ,EACR,MAAM,IAAI2sB,WAEdygB,EAAW5d,cAAgBxvB,GAE/ByxB,iBAAgB,IAAIiR,IACTuJ,EAAcxa,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjE7Y,cAAa,IAAI6Y,IACNuJ,EAAcpiB,cAAc6Y,EAAK,IAE5ClR,oBAAmB,IAAIkR,IACZuJ,EAAcza,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAkFxE,OA/EI/T,IAAmBmf,EAAsBnf,iBACzCmf,EAAsBnf,eAAiBA,GAEvCC,IAAmBkf,EAAsBlf,iBACzCkf,EAAsBlf,eAAiBA,GAEvCC,IAAkBif,EAAsBjf,gBACxCif,EAAsBjf,cAAgBA,GAEtCC,IAAkBgf,EAAsBhf,gBACxCgf,EAAsBhf,cAAgBA,GAEtCC,IAAgB+e,EAAsB/e,cACtC+e,EAAsB/e,YAAcA,GAEpCC,IAAiB8e,EAAsB9e,aAAahvB,QACpD8tC,EAAsB9e,aAAahvB,MAAQgvB,GAE3CC,IAAiB6e,EAAsB7e,aAAajvB,QACpD8tC,EAAsB7e,aAAajvB,MAAQivB,GAE3CC,IAAiB4e,EAAsB5e,aAAalvB,QACpD8tC,EAAsB5e,aAAalvB,MAAQkvB,GAE3CC,IAAiB2e,EAAsB3e,eACvC2e,EAAsB3e,aAAeA,GAErCC,IAAc0e,EAAsB1e,UAAUpvB,QAC9C8tC,EAAsB1e,UAAUpvB,MAAQovB,GAExCC,IAAcye,EAAsBze,UAAUrvB,QAC9C8tC,EAAsBze,UAAUrvB,MAAQqvB,GAExCC,IAAcwe,EAAsBxe,UAAUtvB,QAC9C8tC,EAAsBxe,UAAUtvB,MAAQsvB,GAExCC,IAAgBue,EAAsBve,cACtCue,EAAsBve,YAAcA,GAEpCC,IAAkBse,EAAsBte,gBACxCse,EAAsBte,cAAgBA,GAEf,IAAvBma,EAAgB,IAAmC,IAAvBA,EAAgB,IAAmC,IAAvBA,EAAgB,IACxEyD,EAAWtD,kBAAkBH,GAET,IAApBC,EAAa,IAAgC,IAApBA,EAAa,IAAgC,IAApBA,EAAa,IAC/DwD,EAAWpD,eAAeJ,GAiCvB/I,EAAmBnT,GAAqBogB,EAAuBV,IA/BhD,KAClBnB,EAAcvoB,QAAQ0pB,GAEtB/pB,EAAwC4oB,EAAe4B,EAAgB,EAAG,GAC1EA,EAAenqB,QAAQ6pB,GAAsB7pB,QAAQ2d,EAAmB,EAAG,GAC3EwM,EAAenqB,QAAQ8pB,GAAsB9pB,QAAQ2d,EAAmB,EAAG,GAC3EwM,EAAenqB,QAAQ+pB,GAAsB/pB,QAAQ2d,EAAmB,EAAG,GAC3EwM,EAAenqB,QAAQgqB,GAAmBhqB,QAAQ2d,EAAmB,EAAG,GACxEwM,EAAenqB,QAAQiqB,GAAmBjqB,QAAQ2d,EAAmB,EAAG,GACxEwM,EAAenqB,QAAQkqB,GAAmBlqB,QAAQ2d,EAAmB,EAAG,GACxEA,EAAkB3d,QAAQujB,GAAqBvjB,QAAQ/D,EAActQ,gBAEhD,KACrB48B,EAAcjoB,WAAWopB,GAEzBrpB,EAA6CkoB,EAAe4B,EAAgB,EAAG,GAC/EA,EAAe7pB,WAAWupB,GAC1BA,EAAqBvpB,WAAWqd,GAChCwM,EAAe7pB,WAAWwpB,GAC1BA,EAAqBxpB,WAAWqd,GAChCwM,EAAe7pB,WAAWypB,GAC1BA,EAAqBzpB,WAAWqd,GAChCwM,EAAe7pB,WAAW0pB,GAC1BA,EAAkB1pB,WAAWqd,GAC7BwM,EAAe7pB,WAAW2pB,GAC1BA,EAAkB3pB,WAAWqd,GAC7BwM,EAAe7pB,WAAW4pB,GAC1BA,EAAkB5pB,WAAWqd,GAC7BA,EAAkBrd,WAAWijB,GAC7BA,EAAoBjjB,WAAWrE,EAActQ,iBjFGrB0+B,CAAmC1qB,EAAyCyH,GAAyB0W,GAA+BxT,GAAsBO,GAAiCue,GAA4Bre,GAAyB1K,EAA8C8c,IgFtRvT,CAAClhB,EAAele,KACnB,MAAMusC,EAAmBruB,EAAc0tB,eAEvC,YAAsCriC,IAAlCgjC,EAAiBhf,aACVme,GAA4BxtB,EAAele,IAEtD0qB,GAA6B6hB,EAAkBvsC,GAC/C8qB,GAAqCyhB,EAAkBvsC,EAAS,gBAChE8qB,GAAqCyhB,EAAkBvsC,EAAS,gBAChE8qB,GAAqCyhB,EAAkBvsC,EAAS,gBAChE8qB,GAAqCyhB,EAAkBvsC,EAAS,aAChE8qB,GAAqCyhB,EAAkBvsC,EAAS,aAChE8qB,GAAqCyhB,EAAkBvsC,EAAS,aAChEwqB,GAA4B+hB,EAAkBvsC,EAAS,kBACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,kBACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,iBACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,iBACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,eACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,gBACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,eACvDwqB,GAA4B+hB,EAAkBvsC,EAAS,iBAChDusC,KhFmQTC,GkF1RyC,EAACxT,EAAmB+G,EAA+BoB,EAAgC5U,EAAsBkf,EAAwBjpB,EAAoB0Q,EAAsC4G,EAAkB5H,EAAyBgU,IAC1Q,KACH,MAAM5F,EAA2B,IAAIxmB,QACrC,IAAI2yB,EAAwB,KAsJ5B,MAAO,CACHla,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAM21B,EAA2CpM,EAAyBzkB,IAAIiL,GAC9E,YAAiDvd,IAA7CmjC,EACO5pB,QAAQC,QAAQ2pB,GAzJX/lB,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAIyV,EAAiB,KACjB+f,EAAmB/pB,EAAmBoE,GAC1C,MAAM+lB,EAAyB,CAC3BlvB,aAAc8uB,EAAiB9uB,aAC/BC,iBAAkB6uB,EAAiB7uB,iBACnCC,sBAAuB4uB,EAAiB5uB,uBAEtCivB,EAAgC,IAC/BD,EACHzf,eAAgBqf,EAAiBrf,eACjCC,eAAgBof,EAAiBpf,eACjCC,cAAemf,EAAiBnf,cAChCC,cAAekf,EAAiBlf,cAChCC,YAAaif,EAAiBjf,YAC9BI,aAAc6e,EAAiB7e,aAC/BI,YAAaye,EAAiBze,YAC9BC,cAAewe,EAAiBxe,eAG9B8e,EAAmC7uB,EAAiBuuB,EAAkBzlB,GAE5E,GAAI,eAAgBylB,EAChB/f,EAAiBD,EAAqBzF,EAA2B,IAAK6lB,EAAwBxsB,KAAM,SAEnG,IAAK0sB,EAAkC,CACxC,MAAM7sC,EAAU,IACT4sC,EACHrf,aAAcgf,EAAiBhf,aAAahvB,MAC5CivB,aAAc+e,EAAiB/e,aAAajvB,MAC5CkvB,aAAc8e,EAAiB9e,aAAalvB,MAC5CovB,UAAW4e,EAAiB5e,UAAUpvB,MACtCqvB,UAAW2e,EAAiB3e,UAAUrvB,MACtCsvB,UAAW0e,EAAiB1e,UAAUtvB,OAE1CguC,EAAmBd,EAAuB3kB,EAA2B9mB,GAGzE,GADAsgC,EAAyBvkB,IAAI+K,EAA8C,OAAnB0F,EAA0B+f,EAAmB/f,GAC9E,OAAnBA,EAAyB,CACzB,GAA8B,OAA1BigB,EAAgC,CAChC,GAA6C,OAAzCvZ,EACA,MAAM,IAAIjzB,MAAM,uDAEpB,MAAM6mC,EAA6B,IAAI5T,EAAqC,EAE5EtM,EAAMzI,QAAQ7e,OAAQwnB,EAA0BS,YAC1CyY,EAA0BD,EAA8B+G,EAA4B,CACtFrpB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB,IAEpBsa,EAAwB/d,QAAQ6kB,EAA2Bl5B,aAC3D6+B,EAAwB,WACpB,MAAMK,QAAkChqB,QAAQsP,IAAI,CAChDxL,EAAM2G,aACN3G,EAAM4G,aACN5G,EAAM6G,aACN7G,EAAM+G,UACN/G,EAAMgH,UACNhH,EAAMiH,WACRtsB,KAAIolB,MAAOlH,EAAY/O,KACrB,MAAM2wB,EAA2BF,EAA+B2F,EAA4B,CACxFrpB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB0C,OAAkB,IAAV3P,EAAc,EAAI,IAG9B,aADMopB,EAAiBgN,EAA4BrnB,EAAY4hB,EAAyBhhB,OAAQtJ,GACzFsqB,MAEX,IAAK,IAAI7hC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBstC,EAA0BttC,GAAGyiB,QAAQ+d,EAAyB,EAAGxgC,GACjEstC,EAA0BttC,GAAGskB,MAAM,GAEvC,OAAOoiB,EAAgCY,IAtBnB,GAyB5B,MAAMjgB,QAAuB4lB,EACvBjC,EAAgBje,EAAqBzF,EAA2B,IAAK6lB,EAAwBxsB,KAAM,UACnG+R,EAAwBtL,EAAOE,EAA2B0jB,EAAezzB,GAC/E,MAAMg2B,EAAe,GACrB,IAAK,IAAIvtC,EAAI,EAAGA,EAAIqnB,EAAe/H,iBAAkBtf,GAAK,EACtDutC,EAAajkC,KAAK+d,EAAelI,eAAenf,IAEpD,IAAI0oC,EAAkB,CAAC6E,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IAC3E5E,EAAe,CAAC4E,EAAa,GAAG,GAAIA,EAAa,GAAG,GAAIA,EAAa,GAAG,IACxEC,EAAezgB,EAAqBzF,EAA2B,IAAK6lB,EAAwBxsB,KAAM,IAClG8sB,EAAoBxB,EAAuB3kB,EAA2B,IACnE8lB,EACHrf,aAAc2a,EAAgB,GAC9B1a,aAAc0a,EAAgB,GAC9Bza,aAAcya,EAAgB,GAC9Bva,UAAWwa,EAAa,GACxBva,UAAWua,EAAa,GACxBta,UAAWsa,EAAa,KAE5BqC,EAAcvoB,QAAQ+qB,GAAc/qB,QAAQgrB,EAAkBjrB,OAAO,IACrEirB,EAAkBhrB,QAAQuK,GAC1B,IAAK,IAAIhtB,EAAI,IAAKA,EAAIqnB,EAAevnB,OAAQE,GAAK,IAAK,CACnD,MAAM4oC,EAAc,CAAC2E,EAAa,GAAGvtC,GAAIutC,EAAa,GAAGvtC,GAAIutC,EAAa,GAAGvtC,IACvE8oC,EAAU,CAACyE,EAAa,GAAGvtC,GAAIutC,EAAa,GAAGvtC,GAAIutC,EAAa,GAAGvtC,IACzE,GAAI4oC,EAAYxkB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU2pC,EAAgBx3B,MAC7D43B,EAAQ1kB,MAAK,CAACrlB,EAAOmS,IAAUnS,IAAU4pC,EAAaz3B,KAAS,CAC/Dw3B,EAAkBE,EAClBD,EAAeG,EACf,MAAMhN,EAAc97B,EAAIsnB,EAA0BS,WAClDylB,EAAa7sB,KAAK0O,eAAe,EAAGyM,GACpC0R,EAAezgB,EAAqBzF,EAA2B,IAAK6lB,EAAwBxsB,KAAM,IAClG8sB,EAAoBxB,EAAuB3kB,EAA2B,IAC/D8lB,EACHrf,aAAc2a,EAAgB,GAC9B1a,aAAc0a,EAAgB,GAC9Bza,aAAcya,EAAgB,GAC9Bva,UAAWwa,EAAa,GACxBva,UAAWua,EAAa,GACxBta,UAAWsa,EAAa,KAE5B6E,EAAa7sB,KAAK0O,eAAe,EAAGyM,GACpCkP,EAAcvoB,QAAQ+qB,GAAc/qB,QAAQgrB,EAAkBjrB,OAAO,IACrEirB,EAAkBhrB,QAAQuK,IAGlC,OAAOA,EAwBX,OAtBKqgB,SASK7T,EAAkBlS,EAA2BF,EAAM2G,aAAcgf,EAAiBhf,aAAcxW,SAChGiiB,EAAkBlS,EAA2BF,EAAM4G,aAAc+e,EAAiB/e,aAAczW,SAChGiiB,EAAkBlS,EAA2BF,EAAM6G,aAAc8e,EAAiB9e,aAAc1W,SAChGiiB,EAAkBlS,EAA2BF,EAAM+G,UAAW4e,EAAiB5e,UAAW5W,SAC1FiiB,EAAkBlS,EAA2BF,EAAMgH,UAAW2e,EAAiB3e,UAAW7W,SAC1FiiB,EAAkBlS,EAA2BF,EAAMiH,UAAW0e,EAAiB1e,UAAW9W,WAb1F+iB,EAAiBhT,EAA2BF,EAAM2G,aAAcgf,EAAiBhf,aAAcxW,SAC/F+iB,EAAiBhT,EAA2BF,EAAM4G,aAAc+e,EAAiB/e,aAAczW,SAC/F+iB,EAAiBhT,EAA2BF,EAAM6G,aAAc8e,EAAiB9e,aAAc1W,SAC/F+iB,EAAiBhT,EAA2BF,EAAM+G,UAAW4e,EAAiB5e,UAAW5W,SACzF+iB,EAAiBhT,EAA2BF,EAAMgH,UAAW2e,EAAiB3e,UAAW7W,SACzF+iB,EAAiBhT,EAA2BF,EAAMiH,UAAW0e,EAAiB1e,UAAW9W,IAU/F2K,EAAuB6qB,SACjBra,EAAwBtL,EAAOE,EAA2BylB,EAAiBvqB,OAAO,GAAIjL,SAGtFmb,EAAwBtL,EAAOE,EAA2BylB,EAAkBx1B,GAE/Ew1B,GAQIhM,CAAgB3Z,EAAOE,EAA2B/P,MlF2HxCm2B,CAAgClU,GAAmB+G,GAA+BoB,GAAgC5U,GAAsBkf,GAAwBjpB,EAAoB0Q,GAAsC4G,GAAkB5H,GAAyBgU,IAChSiH,GfzQqC,EAACzY,EAAsB+F,EAAkBgR,EAAwBe,EAA0BxZ,EAAkBM,EAA6BgL,IAC1K,cAAyB5J,EAC5B3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCusC,EAAmBd,EAAuBvtB,EAAegZ,GACzDlS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOouB,EADMvnB,EAAYwnB,IAA6B,MAErEpuC,KAAKgvC,kBAAoBb,EAEzBnuC,KAAKivC,cAAgB5S,EAAiBr8B,KAAM4mB,EAAWunB,EAAiBhf,aAAcvO,EAA4BD,GAClH3gB,KAAKkvC,cAAgB7S,EAAiBr8B,KAAM4mB,EAAWunB,EAAiB/e,aAAcxO,EAA4BD,GAClH3gB,KAAKmvC,cAAgB9S,EAAiBr8B,KAAM4mB,EAAWunB,EAAiB9e,aAAczO,EAA4BD,GAClH3gB,KAAKovC,WAAa/S,EAAiBr8B,KAAM4mB,EAAWunB,EAAiB5e,UAAW3O,EAA4BD,GAC5G3gB,KAAKqvC,WAAahT,EAAiBr8B,KAAM4mB,EAAWunB,EAAiB3e,UAAW5O,EAA4BD,GAC5G3gB,KAAKsvC,WAAajT,EAAiBr8B,KAAM4mB,EAAWunB,EAAiB1e,UAAW7O,EAA4BD,GAE5Guf,EAAqBlgC,KAAM,GAE/B,qBACI,OAAOA,KAAKgvC,kBAAkBlgB,eAElC,mBAAmB3uB,GACfH,KAAKgvC,kBAAkBlgB,eAAiB3uB,EAE5C,qBACI,OAAOH,KAAKgvC,kBAAkBjgB,eAElC,mBAAmB5uB,GACfH,KAAKgvC,kBAAkBjgB,eAAiB5uB,EAE5C,oBACI,OAAOH,KAAKgvC,kBAAkBhgB,cAElC,kBAAkB7uB,GACdH,KAAKgvC,kBAAkBhgB,cAAgB7uB,EAE3C,oBACI,OAAOH,KAAKgvC,kBAAkB/f,cAElC,kBAAkB9uB,GACdH,KAAKgvC,kBAAkB/f,cAAgB9uB,EAE3C,kBACI,OAAOH,KAAKgvC,kBAAkB9f,YAElC,gBAAgB/uB,GACZH,KAAKgvC,kBAAkB9f,YAAc/uB,EAEzC,mBACI,OAAOH,KAAKivC,cAEhB,mBACI,OAAOjvC,KAAKkvC,cAEhB,mBACI,OAAOlvC,KAAKmvC,cAEhB,mBACI,OAAOnvC,KAAKgvC,kBAAkB1f,aAElC,iBAAiBnvB,GACbH,KAAKgvC,kBAAkB1f,aAAenvB,EAE1C,gBACI,OAAOH,KAAKovC,WAEhB,gBACI,OAAOpvC,KAAKqvC,WAEhB,gBACI,OAAOrvC,KAAKsvC,WAEhB,kBACI,OAAOtvC,KAAKgvC,kBAAkBtf,YAElC,gBAAgBvvB,GACZH,KAAKgvC,kBAAkBtf,YAAcvvB,EAEzC,oBACI,OAAOH,KAAKgvC,kBAAkBrf,cAElC,kBAAkBxvB,GACdH,KAAKgvC,kBAAkBrf,cAAgBxvB,IeqLrBovC,CAA4BjZ,GAAsB+F,GAAkBgR,GAAwBe,GAA0BxZ,GAAkBM,GAA6BgL,IAE7LsP,Gd5RuC,EAACC,EAA0B7a,EAAkB8a,EAAmBC,IAClG,MAAMC,EACTjnC,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EiGPyB,CAACl3B,IACxC,MAAM,KAAEiuC,EAAI,KAAEC,GAASluC,EACvB,YAAauJ,IAAT0kC,OACa1kC,IAAT2kC,EACO,IAAKluC,EAASiuC,KAAM,CAAC,EAAG,GAAIC,KAAM,CAAC,EAAG,IAE1C,IAAKluC,EAASiuC,KAAM5sC,MAAMY,KAAKisC,GAAM,IAAM,IAAIA,aAE7C3kC,IAAT2kC,EACO,IAAKluC,EAASiuC,OAAMC,KAAM7sC,MAAMY,KAAKgsC,GAAM,IAAM,KAErD,IAAKjuC,EAASiuC,OAAMC,SjGJGH,CAA4B,IAAK,MAAoB/tC,IACrEitB,EAAe4gB,EAAyB3vB,EAAegZ,GAG7D,OAFA4W,EAAkB9wB,IAAIiQ,GAEfA,EAEX,OAAQhb,OAAOwmB,aAAa1kB,GACxB,OAAsB,OAAbA,GAAyC,iBAAbA,GAAyB1V,OAAOowB,eAAe1a,KAAci6B,EAAat5B,WAC3Go5B,EAAkB/wB,IAAIhJ,KcgRNo6B,CoF/Re,CAAC5vB,GACrC,CAACL,GAAiBwK,uBAAsBulB,OAAMC,WAEjD,MAAME,EAAgBH,aAAgBv7B,aAAeu7B,EAAO,IAAIv7B,aAAau7B,GACvEI,EAAgBH,aAAgBx7B,aAAew7B,EAAO,IAAIx7B,aAAaw7B,GACvEI,EAAqBpwB,EAAcqwB,mBAAmBF,EAAeD,EAAe,CAAE1lB,yBAE5F,GAAIrnB,MAAMY,KAAKgsC,GAAM3uC,OAAS,EAC1B,MAAMif,IAEV,OAAO+vB,GpFoRkBE,CAAgCjwB,GACuByU,GAAkB,IAAIpZ,SAExG60B,GqF/R6C,EAACC,EAAmC1hB,IAC5E,CAAC9O,EAAele,KACnB,MAAM0d,EAAmB1d,EAAQ0d,iBAKjC,GAAyB,gBAArBA,EACA,MAAMsP,IAGV,QAAyCzjB,IAArC2U,EAAcywB,mBACd,OAAOD,EAAkCxwB,EAAele,GAE5D,MAAM4uC,EAAyB1wB,EAAcywB,qBAe7C,OAdAjkB,GAA6BkkB,EAAwB5uC,GACrD8qB,GAAqC8jB,EAAwB5uC,EAAS,OAKtE3B,OAAOC,eAAeswC,EAAwB,mBAAoB,CAC9D/yB,IAAK,IAAM6B,EACX3B,IAAMxd,IACF,GAAIA,IAAUmf,EACV,MAAMsP,OAIX4hB,GrFkQsBC,CsFhSmB,EAAC9O,EAA+BnU,EAAiCW,EAAsB8e,EAA4Bre,EAAyBoS,KAEhM,MAAM0P,EAAa,MACbC,EAAW,IAAIr8B,aAAa,CAAC,EAAG,IAChCs8B,EAAUrsC,KAAKyB,GAAK,EACpBynC,EAAyB,CAAEpuB,aAAc,EAAGC,iBAAkB,WAAYC,sBAAuB,YACjGsxB,EAAqC,IAAKpD,EAAwB3d,WAAY,QA+J9EghB,EAAqB,CAAChxB,EAAeT,EAAc+sB,EAAe2E,EAAavP,KACjF,GAAqB,IAAjBniB,EACA,MAhK0B,EAACS,EAAessB,EAAe2E,EAAavP,KAC1E,MAAMwP,EAAsB,IAAI18B,aAAao8B,GACvCO,EAAuB,IAAI38B,aAAao8B,GAC9C,IAAK,IAAItvC,EAAI,EAAGA,EAAIsvC,EAAYtvC,GAAK,EAAG,CACpC,MAAM8mB,EAAK9mB,EAAI,MAAoBwvC,EACnCI,EAAoB5vC,GAAKmD,KAAKG,IAAIwjB,GAClC+oB,EAAqB7vC,GAAKmD,KAAKE,IAAIyjB,GAEvC,MAAMgpB,EAAe/iB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAEtFovB,EAAsBlE,EAA2BntB,EAAe,IAAK+wB,EAAoChhB,MAAOmhB,IAEhHI,EAAqBnE,EAA2BntB,EAAe,IAAK+wB,EAAoChhB,MAAO8gB,IAC/GU,EAAgBljB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAEvFuvB,EAAuBrE,EAA2BntB,EAAe,IAAK+wB,EAAoChhB,MAAOohB,IACvH,MAAO,CACHM,eACInF,EAAcvoB,QAAQqtB,GACtB9E,EAAcvoB,aAAqC1Y,IAA7BimC,EAAkBxtB,OAAuBwtB,EAAoBA,EAAkBxtB,OAAO,IAC5GwoB,EAAcvoB,QAAQwtB,GACtBD,EAAkBvtB,QAAQktB,GAC1BA,EAAYltB,aAAsC1Y,IAA9BgmC,EAAmBvtB,OAAuButB,EAAqBA,EAAmBvtB,OAAO,IAC7GmtB,EAAYltB,aAAuC1Y,IAA/BmmC,EAAoB1tB,OAAuB0tB,EAAsBA,EAAoB1tB,OAAO,IAChHutB,EAAmBttB,QAAQqtB,EAAanvB,MACxCuvB,EAAoBztB,QAAQwtB,EAActvB,MAC1CmvB,EAAartB,QAAQ2d,EAAmB,EAAG,GAC3C6P,EAAcxtB,QAAQ2d,EAAmB,EAAG,IAEhDgQ,kBACIpF,EAAcjoB,WAAW+sB,GACzB9E,EAAcjoB,gBAAwChZ,IAA7BimC,EAAkBxtB,OAAuBwtB,EAAoBA,EAAkBxtB,OAAO,IAC/GwoB,EAAcjoB,WAAWktB,GACzBD,EAAkBjtB,WAAW4sB,GAC7BA,EAAY5sB,gBAAyChZ,IAA9BgmC,EAAmBvtB,OAAuButB,EAAqBA,EAAmBvtB,OAAO,IAChHmtB,EAAY5sB,gBAA0ChZ,IAA/BmmC,EAAoB1tB,OAAuB0tB,EAAsBA,EAAoB1tB,OAAO,IACnHutB,EAAmBhtB,WAAW+sB,EAAanvB,MAC3CuvB,EAAoBntB,WAAWktB,EAActvB,MAC7CmvB,EAAa/sB,WAAWqd,EAAmB,EAAG,GAC9C6P,EAAcltB,WAAWqd,EAAmB,EAAG,MAyH5CiQ,CAA0B3xB,EAAessB,EAAe2E,EAAavP,GAEhF,GAAqB,IAAjBniB,EACA,MAxH4B,EAACS,EAAessB,EAAe2E,EAAavP,KAC5E,MAAMkQ,EAAwC,IAAIp9B,aAAao8B,GACzDiB,EAAyC,IAAIr9B,aAAao8B,GAC1DkB,EAAyC,IAAIt9B,aAAao8B,GAC1DmB,EAA0C,IAAIv9B,aAAao8B,GAC3D3D,EAAcxoC,KAAK6O,MAAMs9B,QAC/B,IAAK,IAAItvC,EAAI,EAAGA,EAAIsvC,EAAYtvC,GAAK,EACjC,GAAIA,EAAI2rC,EAAa,CACjB,MAAM7kB,GAAM9mB,EAAI2rC,IAAgB2D,MAAiB3D,GAAgB6D,EACjEc,EAAsCtwC,GAAKmD,KAAKG,IAAIwjB,GACpDypB,EAAuCvwC,GAAKmD,KAAKE,IAAIyjB,GACrD0pB,EAAuCxwC,GAAK,EAC5CywC,EAAwCzwC,GAAK,MAE5C,CACD,MAAM8mB,EAAK9mB,GAAKsvC,MAAiB3D,GAAgB6D,EACjDc,EAAsCtwC,GAAK,EAC3CuwC,EAAuCvwC,GAAK,EAC5CwwC,EAAuCxwC,GAAKmD,KAAKG,IAAIwjB,GACrD2pB,EAAwCzwC,GAAKmD,KAAKE,IAAIyjB,GAG9D,MAAMyF,EAAsBH,EAAgC1N,EAAe,CACvET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiB,IAEfuqB,EAAiC3jB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAExGgwB,EAAuC9E,EAA2BntB,EAAe,IAChF+wB,EACHhhB,MAAO6hB,IAELM,EAAkC7jB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAEzGkwB,EAAwChF,EAA2BntB,EAAe,IACjF+wB,EACHhhB,MAAO8hB,IAGLP,EAAqBnE,EAA2BntB,EAAe,IAAK+wB,EAAoChhB,MAAO8gB,IAC/GuB,EAAkC/jB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAEzGowB,EAAwClF,EAA2BntB,EAAe,IACjF+wB,EACHhhB,MAAO+hB,IAELQ,EAAmCjkB,EAAqBrO,EAAe,IAAK2tB,EAAwB1rB,KAAM,IAE1GswB,EAAyCpF,EAA2BntB,EAAe,IAClF+wB,EACHhhB,MAAOgiB,IAEX,MAAO,CACHN,eACInF,EAAcvoB,QAAQ8J,GACtBye,EAAcvoB,aAAqC1Y,IAA7BimC,EAAkBxtB,OAAuBwtB,EAAoBA,EAAkBxtB,OAAO,IAC5G+J,EAAoB9J,QAAQiuB,EAAgC,GAC5DnkB,EAAoB9J,QAAQmuB,EAAiC,GAC7DrkB,EAAoB9J,QAAQquB,EAAiC,GAC7DvkB,EAAoB9J,QAAQuuB,EAAkC,GAC9DhB,EAAkBvtB,QAAQktB,GAC1BA,EAAYltB,aAAwD1Y,IAAhD4mC,EAAqCnuB,OACnDmuB,EACAA,EAAqCnuB,OAAO,IAClDmtB,EAAYltB,aAAyD1Y,IAAjD8mC,EAAsCruB,OACpDquB,EACAA,EAAsCruB,OAAO,IACnDmtB,EAAYltB,aAAyD1Y,IAAjDgnC,EAAsCvuB,OACpDuuB,EACAA,EAAsCvuB,OAAO,IACnDmtB,EAAYltB,aAA0D1Y,IAAlDknC,EAAuCzuB,OACrDyuB,EACAA,EAAuCzuB,OAAO,IACpDmuB,EAAqCluB,QAAQiuB,EAA+B/vB,MAC5EkwB,EAAsCpuB,QAAQmuB,EAAgCjwB,MAC9EowB,EAAsCtuB,QAAQquB,EAAgCnwB,MAC9EswB,EAAuCxuB,QAAQuuB,EAAiCrwB,MAChF+vB,EAA+BjuB,QAAQ2d,EAAmB,EAAG,GAC7D0Q,EAAgCruB,QAAQ2d,EAAmB,EAAG,GAC9DwQ,EAAgCnuB,QAAQ2d,EAAmB,EAAG,GAC9D4Q,EAAiCvuB,QAAQ2d,EAAmB,EAAG,IAEnEgQ,kBACIpF,EAAcjoB,WAAWwJ,GACzBye,EAAcjoB,gBAAwChZ,IAA7BimC,EAAkBxtB,OAAuBwtB,EAAoBA,EAAkBxtB,OAAO,IAC/G+J,EAAoBxJ,WAAW2tB,EAAgC,GAC/DnkB,EAAoBxJ,WAAW6tB,EAAiC,GAChErkB,EAAoBxJ,WAAW+tB,EAAiC,GAChEvkB,EAAoBxJ,WAAWiuB,EAAkC,GACjEhB,EAAkBjtB,WAAW4sB,GAC7BA,EAAY5sB,gBAA2DhZ,IAAhD4mC,EAAqCnuB,OACtDmuB,EACAA,EAAqCnuB,OAAO,IAClDmtB,EAAY5sB,gBAA4DhZ,IAAjD8mC,EAAsCruB,OACvDquB,EACAA,EAAsCruB,OAAO,IACnDmtB,EAAY5sB,gBAA4DhZ,IAAjDgnC,EAAsCvuB,OACvDuuB,EACAA,EAAsCvuB,OAAO,IACnDmtB,EAAY5sB,gBAA6DhZ,IAAlDknC,EAAuCzuB,OACxDyuB,EACAA,EAAuCzuB,OAAO,IACpDmuB,EAAqC5tB,WAAW2tB,EAA+B/vB,MAC/EkwB,EAAsC9tB,WAAW6tB,EAAgCjwB,MACjFowB,EAAsChuB,WAAW+tB,EAAgCnwB,MACjFswB,EAAuCluB,WAAWiuB,EAAiCrwB,MACnF+vB,EAA+B3tB,WAAWqd,EAAmB,EAAG,GAChE0Q,EAAgC/tB,WAAWqd,EAAmB,EAAG,GACjEwQ,EAAgC7tB,WAAWqd,EAAmB,EAAG,GACjE4Q,EAAiCjuB,WAAWqd,EAAmB,EAAG,MAS/D8Q,CAA4BxyB,EAAessB,EAAe2E,EAAavP,GAElF,MAAM5S,KAEV,MAAO,CAAC9O,GAAiBT,eAAcC,mBAAkB+C,SAAQsgB,MAC7D,GAAyB,QAArBrjB,EACA,MAAMsP,IAEV,MAAM4S,EAAoBG,EAA8B7hB,EAAe,IAChE6iB,EACHtjB,aAAc,EACdC,mBACAgI,eAAgB,IAEd8kB,EAAgBje,EAAqBrO,EAAe,IAAK6iB,EAAkBtjB,eAAcC,mBAAkByC,KAAM,IACjHgvB,EAAc5iB,EAAqBrO,EAAe,CACpDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAMM,IAEV,IAAI,aAAEkvB,EAAY,gBAAEC,GAAoBV,EAAmBhxB,EAAeT,EAAc+sB,EAAe2E,EAAavP,GACpHvhC,OAAOC,eAAe6wC,EAAYhvB,KAAM,eAAgB,CAAEtE,IAAK,IAAM,IACrExd,OAAOC,eAAe6wC,EAAYhvB,KAAM,WAAY,CAAEtE,IAAK,IAAM,IACjExd,OAAOC,eAAe6wC,EAAYhvB,KAAM,WAAY,CAAEtE,IAAK,KAAO,IAClE,MAAM80B,EAAqC,CACvC,mBAGA,mBACI,OAAOnG,EAAc/sB,cAEzB,iBAAiBlf,GACTisC,EAAc/sB,eAAiBlf,IAC3BssC,GACA+E,MAEDD,eAAcC,mBAAoBV,EAAmBhxB,EAAe3f,EAAOisC,EAAe2E,EAAavP,IACtGiL,GACA8E,KAGRnF,EAAc/sB,aAAelf,GAEjC,uBACI,OAAOisC,EAAc9sB,kBAEzB,qBAAqBnf,GACjB,GAAc,gBAAVA,GAAqC,QAAVA,EAC3B,MAAMyuB,IAEVwd,EAAc9sB,iBAAmBnf,GAErC,4BACI,OAAOisC,EAAc7sB,uBAEzB,0BAA0Bpf,GACtBisC,EAAc7sB,sBAAwBpf,GAE1C,cACI,OAAOisC,EAAcrsB,SAEzB,aACI,MAAO,CAACqsB,IAEZ,qBACI,OAAOA,EAAc9kB,gBAEzB,sBACI,OAAO8kB,EAAc7kB,iBAEzB,UACI,OAAOwpB,EAAYhvB,MAEvB6P,iBAAgB,IAAIiR,IACTuJ,EAAcxa,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEjE7Y,cAAa,IAAI6Y,IACNuJ,EAAcpiB,cAAc6Y,EAAK,IAE5ClR,oBAAmB,IAAIkR,IACZuJ,EAAcza,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxE,IAAI4J,GAAc,EASlB,OAAOzL,EAAmBnT,GAAqB0kB,EAAoC/Q,IAR7D,KAClB+P,IACA9E,GAAc,KAEO,KACrB+E,IACA/E,GAAc,OtF0BiB+F,CAAyC7Q,GAA+BnU,GAAiCW,GAAsB8e,GAA4Bre,GAAyBoS,IAClHpS,IACvG6jB,GuFhS+C,EAAC7X,EAAmByV,EAA8BjsB,EAAoBsX,EAAkB5H,IAClI,KACH,MAAM4e,EAAkC,IAAIh3B,QAgC5C,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMg6B,EAAiCD,EAAgCj1B,IAAIiL,GAC3E,YAAuCvd,IAAnCwnC,EACOjuB,QAAQC,QAAQguB,GAnCJpqB,OAAOC,EAAOE,EAA2B/P,KACpE,IAAI63B,EAAyBpsB,EAAmBoE,GAKhD,MAAMoqB,EAAyChzB,EAAiB4wB,EAAwB9nB,GACxF,IAAKkqB,EAAwC,CACzC,MAAMhxC,EAAU,CACZyd,aAAcmxB,EAAuBnxB,aACrCC,iBAAkBkxB,EAAuBlxB,iBACzCC,sBAAuBixB,EAAuBjxB,sBAC9C8C,IAAKmuB,EAAuBnuB,IAAIliB,OAEpCqwC,EAAyBH,EAA6B3nB,EAA2B9mB,GAerF,OAbA8wC,EAAgC/0B,IAAI+K,EAA2B8nB,GAC1DoC,QAIKhY,EAAkBlS,EAA2BF,EAAMnG,IAAKmuB,EAAuBnuB,IAAK1J,SAHpF+iB,EAAiBhT,EAA2BF,EAAMnG,IAAKmuB,EAAuBnuB,IAAK1J,GAKzF2K,EAAuBktB,SACjB1c,EAAwBtL,EAAOE,EAA2B8nB,EAAuB5sB,OAAO,GAAIjL,SAG5Fmb,EAAwBtL,EAAOE,EAA2B8nB,EAAwB73B,GAErF63B,GAQIqC,CAAuBrqB,EAAOE,EAA2B/P,MvFwPzCm6B,CAAsClY,GAAmByV,GAA8BjsB,EAAoBsX,GAAkB5H,IAC9Jif,GbzR2C,EAACzc,EAAsB+F,EAAkBgU,EAA8BoC,EAAgC7d,EAAkBM,IAC/J,cAA+BoB,EAClC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzC4uC,EAAyBH,EAA6BvwB,EAAegZ,GACrElS,EAAYsO,EAA4BpV,GAE9C8W,MAAM7W,GAAS,EAAOywB,EADY5pB,EAAY6rB,IAAmC,MAEjFzyC,KAAKgzC,KAAO3W,EAAiBr8B,KAAM4mB,EAAW4pB,EAAuBnuB,KAEzE,UACI,OAAOriB,KAAKgzC,Oa6QYC,CAAkC3c,GAAsB+F,GAAkBgU,GAA8BoC,GAAgC7d,GAAkBM,IACxLge,GwFlS6C,EAACjG,EAA4B7oB,EAAoB0P,IACzF,KACH,MAAMqf,EAAgC,IAAIz3B,QAwB1C,MAAO,CACHyY,OAAO3L,EAAOE,EAA2B/P,GACrC,MAAMy6B,EAA+BD,EAA8B11B,IAAIiL,GACvE,YAAqCvd,IAAjCioC,EACO1uB,QAAQC,QAAQyuB,GA3BN7qB,OAAOC,EAAOE,EAA2B/P,KAClE,IAAIu0B,EAAuB9oB,EAAmBoE,GAG9C,IAD6C5I,EAAiBstB,EAAsBxkB,GACzC,CACvC,MAAM9mB,EAAU,CACZyd,aAAc6tB,EAAqB7tB,aACnCC,iBAAkB4tB,EAAqB5tB,iBACvCC,sBAAuB2tB,EAAqB3tB,sBAC5CsQ,MAAOqd,EAAqBrd,MAC5BC,WAAYod,EAAqBpd,YAErCod,EAAuBD,EAA2BvkB,EAA2B9mB,GASjF,OAPAuxC,EAA8Bx1B,IAAI+K,EAA2BwkB,GACzD5pB,EAAuB4pB,SACjBpZ,EAAwBtL,EAAOE,EAA2BwkB,EAAqBtpB,OAAO,GAAIjL,SAG1Fmb,EAAwBtL,EAAOE,EAA2BwkB,EAAsBv0B,GAEnFu0B,GAQImG,CAAqB7qB,EAAOE,EAA2B/P,MxFkQzC26B,CAAoCrG,GAA4B7oB,EAAoB0P,IACnHyf,GX9RyC,EAACjd,EAAsBrL,EAAyBgiB,EAA4BiG,EAA8Bte,EAAkBM,EAA6BgL,IAC7L,cAA6B5J,EAChC3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+Y,EAAgB,IAAK,MAAoBl3B,GACzCsrC,EAAuBD,EAA2BntB,EAAegZ,GAIvElC,MAAM7W,GAAS,EAAMmtB,EAHHhY,EAA4BpV,GACFozB,IAAiC,MAG7ElzC,KAAKwzC,mBAAoB,EACzBxzC,KAAKyzC,sBAAwBvG,EAE7BhN,EAAqBlgC,KAAM,GAE/B,YACI,OAAIA,KAAKwzC,kBACE,KAEJxzC,KAAKyzC,sBAAsB5jB,MAEtC,UAAU1vB,GAEN,GAAc,OAAVA,EACAH,KAAKwzC,mBAAoB,EACzBxzC,KAAKyzC,sBAAsB5jB,MAAQ,IAAIvb,aAAa,CAAC,EAAG,QAEvD,CAGD,GAAInU,EAAMe,OAAS,EACf,MAAM+pB,IAEVjrB,KAAKwzC,mBAAoB,EACzBxzC,KAAKyzC,sBAAsB5jB,MAAQ1vB,GAG3C,iBACI,OAAOH,KAAKyzC,sBAAsB3jB,WAEtC,eAAe3vB,GACXH,KAAKyzC,sBAAsB3jB,WAAa3vB,IWqPlBuzC,CAAgCpd,GAAsBrL,GAAyBgiB,GAA4BiG,GAA8Bte,GAAkBM,GAA6BgL,IACpNyT,GyFtS+B,CAAC77B,GAAsB,OAAXA,GAAmBA,EAAO67B,gBzFsSnDC,CAAsB,IACxC/qB,G0FvSgD,CAAC/Q,GAC5C,CAAColB,EAAa/T,EAAY0qB,KAC7B5zC,OAAO8xB,iBAAiBja,EAAQ,CAC5Bg8B,aAAc,CACV59B,cAAc,EACduH,IAAG,IACQlZ,KAAKoD,MAAMu1B,EAAc/T,IAGxC+T,YAAa,CACThnB,cAAc,EACduH,IAAG,IACQyf,KAInB,IACI,OAAO2W,IAEX,QACmB,OAAX/7B,WACOA,EAAOg8B,oBACPh8B,EAAOolB,e1FiRW6W,CAAuC,IAC1EC,GAAiC,IAAIt4B,QACrCu4B,G2FzSoD,EAACD,EAAgClf,IAC/EhV,IACJ,IAAIo0B,EAA4BF,EAA+Bv2B,IAAIqC,GACnE,QAAkC3U,IAA9B+oC,EACA,OAAOA,EAEX,GAA6C,OAAzCpf,EACA,MAAM,IAAIjzB,MAAM,uDAIpB,OAFAqyC,EAA4B,IAAIpf,EAAqC,EAAG,EAAG,KAC3Ekf,EAA+Br2B,IAAImC,EAAeo0B,GAC3CA,G3F8R8BC,CAA2CH,GAAgClf,IAClHsf,G4F1SiD,CAACt8B,GACrC,OAAXA,EACO,KAEJA,EAAOwY,eAAe,oBAAsBxY,EAAOu8B,iBAAmB,K5FsSvCC,CAAwC,IAErEC,GAAwBZ,GzG5RM,EAAChhB,EAAiB/D,EAAyB4lB,EAAgB3rB,EAAkC4rB,EAAa7f,EAAkBqf,EAAsC/e,EAA6Bwf,EAAiBC,EAAkBC,EAA6C98B,IAC/S,CAACiI,EAAS80B,EAAWjzC,EAAU,CAAEkzC,YAAa,WACjD,MAAMh1B,EAAgB8U,EAAiB7U,GAEvC,QAAmC5U,IAA/B2U,EAAci1B,aACd,OAAOrwB,QAAQsP,IAAI,CACfygB,EAAYI,GACZnwB,QAAQC,QAAQgO,EAAgBiiB,EAA6CA,MAC9E1hB,MAAK,GAAG3W,EAAQy4B,GAAcC,MAC7B,MAAOx4B,EAAkBC,GAAiCJ,EAAsBC,EAAQy4B,GA2BlFE,EAAuCD,EACvCv4B,EACAA,EAA8BC,QAAQ,yCAA0C,qMAsChFw4B,EAAO,IAAIC,KAAK,CAFA,GAAG34B,0BAAyCy4B,oDAJzCD,EAA0B,GAAK,sEAC7BA,EACrB,GACA,6IAGiC,CAAEhzC,KAAM,0CACzCua,EAAMO,IAAIs4B,gBAAgBF,GAChC,OAAOr1B,EAAci1B,aAChBO,UAAU94B,EAAK5a,GACfsxB,MAAK,KACN,IAAIgC,EAA4BpV,GAKhC,OADkCm0B,EAAqCn0B,GACtCi1B,aAAaO,UAAU94B,EAAK5a,MAE5D2zC,SAAQ,IAAMx4B,IAAIy4B,gBAAgBh5B,QAG/C,MAAMi5B,EAA4Bd,EAAiBl3B,IAAIsC,GACvD,QAAkC5U,IAA9BsqC,GAA2CA,EAA0B92B,IAAIk2B,GACzE,OAAOnwB,QAAQC,UAEnB,MAAM+wB,EAA2BhB,EAAgBj3B,IAAIsC,GACrD,QAAiC5U,IAA7BuqC,EAAwC,CACxC,MAAMC,EAA0BD,EAAyBj4B,IAAIo3B,GAC7D,QAAgC1pC,IAA5BwqC,EACA,OAAOA,EAGf,MAAM1pB,EAAUwoB,EAAYI,GACvB3hB,MAAK,EAAE3W,EAAQy4B,MAChB,MAAOv4B,EAAkBC,GAAiCJ,EAAsBC,EAAQy4B,GAmBxF,OAAOR,EAHe,GAAG/3B,6GAA4HC,8BAKpJwW,MAAK,KACN,MAAM0iB,EAAkC99B,EAAO+9B,MAAMvY,MACrD,QAAwCnyB,IAApCyqC,EAEA,MAAM,IAAIE,YAEdjtB,EAAiC/I,EAAcod,YAAapd,EAAcqJ,YAAY,IAAMysB,EAAgC,aACzHzqC,GAAW,CAACjC,EAAMkU,KACjB,GAAoB,KAAhBlU,EAAK6sC,OACL,MAAMnnB,IAEV,MAAMonB,EAAoC/5B,EAAwCwB,IAAIqC,GACtF,QAA0C3U,IAAtC6qC,EAAiD,CACjD,GAAIA,EAAkCr3B,IAAIzV,GACtC,MAAM0lB,IAEVzR,EAAoBC,GACpBH,EAA2BG,EAAcF,sBACzC84B,EAAkCr4B,IAAIzU,EAAMkU,QAG5CD,EAAoBC,GACpBH,EAA2BG,EAAcF,sBACzCjB,EAAwC0B,IAAImC,EAAe,IAAIiG,IAAI,CAAC,CAAC7c,EAAMkU,QAEhF0C,EAAcqJ,gBAAYhe,OAAWA,QAwB5C,YAtBiCA,IAA7BuqC,EACAhB,EAAgB/2B,IAAIoC,EAAS,IAAIgG,IAAI,CAAC,CAAC8uB,EAAW5oB,MAGlDypB,EAAyB/3B,IAAIk3B,EAAW5oB,GAE5CA,EACKiH,MAAK,KACN,MAAM+iB,EAAmBtB,EAAiBl3B,IAAIsC,QACrB5U,IAArB8qC,EACAtB,EAAiBh3B,IAAIoC,EAAS,IAAIsD,IAAI,CAACwxB,KAGvCoB,EAAiBr3B,IAAIi2B,MAGxBU,SAAQ,KACT,MAAMW,EAAkBxB,EAAgBj3B,IAAIsC,QACpB5U,IAApB+qC,GACAA,EAAgBl4B,OAAO62B,MAGxB5oB,GyG+GTkqB,CAA4BxjB,GAAiB/D,G6F7Sf,CAAC9W,GACzByE,GAAW,IAAImI,SAAQ,CAACC,EAASyxB,KACrC,GAAe,OAAXt+B,EAGA,YADAs+B,EAAO,IAAIN,aAGf,MAAMO,EAAOv+B,EAAOgC,SAASu8B,KAC7B,GAAa,OAATA,EAEAD,EAAO,IAAIN,iBAEV,CACD,MAAMQ,EAASx+B,EAAOgC,SAASy8B,cAAc,UAEvCpB,EAAO,IAAIC,KAAK,CAAC74B,GAAS,CAAEta,KAAM,2BAClCua,EAAMO,IAAIs4B,gBAAgBF,GAC1BqB,EAAyB1+B,EAAO2+B,QAChCC,EAAuC,KACzC5+B,EAAO2+B,QAAUD,EACjBz5B,IAAIy4B,gBAAgBh5B,IAExB1E,EAAO2+B,QAAU,CAACpsB,EAASssB,EAAKvsB,EAAQF,EAAOH,IAEvC4sB,IAAQn6B,GAAQm6B,IAAQ7+B,EAAOiC,SAAS68B,MAAmB,IAAXxsB,GAA0B,IAAVF,GAChEwsB,IACAN,EAAOrsB,IACA,GAEoB,OAA3BysB,EACOA,EAAuBnsB,EAASssB,EAAKvsB,EAAQF,EAAOH,QAD/D,EAIJusB,EAAOG,QAAU,KACbC,IAEAN,EAAO,IAAIN,cAEfQ,EAAOO,OAAS,KACZH,IACA/xB,KAEJ2xB,EAAOK,IAAMn6B,EACb85B,EAAOr0C,KAAO,SACdo0C,EAAKS,YAAYR,O7FiQ+CS,CAAqB,IAASluB,I8F5S/FN,MAAO/L,IACV,IACI,MAAMorB,QAAiBoP,MAAMx6B,GAC7B,GAAIorB,EAASqP,GACT,MAAO,OAAOrP,EAASsP,OAAQtP,EAASprB,KAGhD,OAGA,M3MX8B,IAAI4D,aAAa,GAAI,gB6G6SsHwU,GAAkBqf,GAAsC/e,GAA6B,IAAIxZ,QAAW,IAAIA,Q+F5SxN,EAAC04B,EAAmCtf,IAC1FvM,UAEH,GAA0C,OAAtC6rB,EACA,OAAO,EAEX,GAA6C,OAAzCtf,EACA,OAAO,EAEX,MAAMqgB,EAAO,IAAIC,KAAK,CAAC,wHAAyH,CAC5InzC,KAAM,0CAEJk1C,EAAsB,IAAIriB,EAAqC,EAAG,IAAK,KACvEtY,EAAMO,IAAIs4B,gBAAgBF,GAChC,IAAIiC,GAA0B,EAC1BC,GAAiC,EACrC,UACUF,EAAoBpC,aAAaO,UAAU94B,GACjD,MAAM86B,EAAmB,IAAIlD,EAAkC+C,EAAqB,IAAK,CAAE5vB,gBAAiB,IACtGgwB,EAAaJ,EAAoBvmB,mBACvC0mB,EAAiBE,KAAKlmB,UAAY,IAAO8lB,GAA0B,EACnEE,EAAiBG,iBAAmB,IAAOJ,GAAiC,EAC5EE,EAAW1zB,QAAQyzB,SACbH,EAAoBjP,iBAE9B,OAGA,QACInrB,IAAIy4B,gBAAgBh5B,GAExB,OAAO46B,IAA4BC,G/F6QyPK,CAAkDtD,GAAmCtf,IAErX,SACE3pB,EACAwsC,GgGjT+B,EAAC5hB,EAAsBb,IAChDC,GACGY,EAAqBZ,IAAaD,EAA4BC,GhG+SrDyiB,CAAsB7hB,GAAsBb,IACvDhJ,GiGhTwB,EAACkN,EAAkBzG,EAAiBklB,EAAsBC,EAAqBC,EAAsBnjB,EAAkB+iB,EAAiB33B,EAAqD8L,EAAoB4N,EAAmCO,IAC9Q,CAAC+d,EAAYC,KAChB,MAAMn4B,EAAgB63B,EAAgBK,GAAcA,EAAapjB,EAAiBojB,GAElF,GAAID,EAAqBp5B,IAAIs5B,GAAY,CACrC,MAAMnhC,ECPwB,IAAIsJ,aAAa,GAAI,kBDQnD,OAAOsE,QAAQ0xB,OAAOt/B,GAG1B,IACIihC,EAAqBn5B,IAAIq5B,GAE7B,OAIA,OAAItlB,EAAgB7G,GAAoB,IAAMA,EAAmBhM,KACtDA,EAAcoM,gBAAgB+rB,GAAW/kB,MAAM5S,IAE7CqS,EAAgB3S,GAAqD,IAAMA,EAAoDM,MAChI2Z,EAA6C3Z,GAEjD8Y,EAAiBxa,IAAI0B,GACdA,KAIR,IAAIoE,SAAQ,CAACC,EAASyxB,KACzB,MAAM8B,EAAW,KAEb,IEhCiB,CAACjnB,IAC9B,MAAM,MAAEE,GAAU,IAAIE,eACtBF,EAAMK,YAAYP,EAAa,CAACA,KF+BhBknB,CAAkBF,GAEtB,SAIEG,EAAQthC,IACVs/B,EAAOt/B,GACPohC,KAGJ,IAEIp4B,EAAcoM,gBAAgB+rB,GAAY33B,IAGK,mBAAhCA,EAAYoH,kBACnBgS,EAAkCpZ,GAClCD,EAAoCC,IAExC8Y,EAAiBxa,IAAI0B,GACrB43B,IACAvzB,EAAQrE,MACRxJ,IAGIshC,EADQ,OAARthC,EG1DiB,IAAIsJ,aAAa,GAAI,iBH8DjCtJ,MAIjB,MAAOA,GACHshC,EAAKthC,QjG+OUuhC,CAAsBjf,GAAkBzG,GkGlTnC,EEAD,EpGkTgG,IAAInX,QAAWoZ,GAAkB+iB,GAAiB33B,EAAqD8L,GAAoB4N,GAAmCO,IAC3Rqe,GqGnT2C,EAAC/D,EAAuB3b,EAAyBuB,EAAwB+D,EAAkCkC,EAA6B2B,EAA8BM,EAAgCc,EAA+BgB,EAA0BjY,EAAiByY,EAAsBa,EAAmCgB,EAAqBsC,EAA0ByB,EAAoCkB,EAA2BsD,EAAuBS,EAAyBuD,EAA6BQ,IAC1iB,cAA+BhJ,EAClC5hC,YAAY6hC,EAAgB9pB,GACxBkW,MAAM4T,EAAgB9pB,GACtB1gB,KAAKwqC,eAAiBA,EACtBxqC,KAAKu4C,mBACyBptC,IAA1BopC,OACMppC,EACA,CACEmqC,UAAW,CAACT,EAAWjzC,IACZ2yC,EAAsBv0C,KAAM60C,EAAWjzC,IAIlE,mBACI,OAAO5B,KAAKu4C,cAEhBllB,iBACI,OAAO,IAAIuF,EAAwB54B,MAEvCutB,qBACI,OAAO,IAAI6S,EAA4BpgC,MAE3CilB,aAAavE,EAAkBxf,EAAQioB,GACnC,OAAO,IAAIgR,EAAuB,CAAEj5B,SAAQwf,mBAAkByI,eAElEhE,qBACI,OAAO,IAAI+Y,EAAiCl+B,MAEhD6hC,oBAAoBva,EAAiB,GACjC,OAAO,IAAIya,EAA6B/hC,KAAM,CAAEsnB,mBAEpDoG,sBAAsBnG,EAAkB,GACpC,OAAO,IAAI8a,EAA+BriC,KAAM,CAAEunB,oBAEtDyb,uBACI,OAAO,IAAIG,EAA8BnjC,MAE7CgkC,kBACI,OAAO,IAAIG,EAAyBnkC,MAExCkuB,YAAY1D,EAAe,GACvB,OAAO,IAAIma,EAAqB3kC,KAAM,CAAEwqB,iBAE5C8a,2BACI,OAAO,IAAIE,EAAkCxlC,MAEjD+kB,aACI,OAAO,IAAIyhB,EAAoBxmC,MAEnCyoC,gBAAgBnd,EAAaF,GACzB,OAAO,IAAI0d,EAAyB9oC,KAAM,CAAEorB,WAAUE,gBAE1DsF,mBACI,OAAO,IAAI6a,EAA0BzrC,MAEzCwtC,eACI,OAAO,IAAIuB,EAAsB/uC,MAErCmwC,mBAAmBL,EAAMD,EAAM2I,EAAc,CAAEluB,sBAAsB,IACjE,OAAO,IAAIklB,EAAwBxvC,KAAM,IAAKw4C,EAAa3I,OAAMC,SAErES,qBACI,OAAO,IAAIwC,EAA4B/yC,MAE3CksC,mBACI,OAAO,IAAIqH,EAA0BvzC,MAEzCksB,gBAAgB+rB,EAAWQ,EAAiBC,GACxC,OAAOxsB,EAAgBlsB,KAAKwqC,eAAgByN,GACvC/kB,MAAM5S,IACwB,mBAApBm4B,GACPA,EAAgBn4B,GAEbA,KAEN6L,OAAOrV,IAIR,KAH6B,mBAAlB4hC,GACPA,EAAc5hC,GAEZA,OrGmOc6hC,CAAkCpE,GAAuB3b,GAAyBuB,GAAwB+D,GAAkCkC,GAA6B2B,GAA8BM,GAAgCc,GAA+BgB,GAA0BjY,GAAiByY,GAAsBa,GAAmCgB,GAAqBsC,GAA0ByB,GAAoCkB,GAA2BsD,GAAuBS,GAAyBuD,GAA6BQ,IACnkBqF,GsGpTsD,EAACtiB,EAAsBuiB,EAAyCjkB,EAAkBM,IACnI,cAA0CoB,EAC7C3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC+4B,ECJqC,EAACr0B,EAAoB7iB,IACjE6iB,EAAmBs0B,yBAAyBn3C,EAAQo3C,cDGTH,CAAwC/4B,EAAele,GAEjG,GAAIszB,EAA4BpV,GAC5B,MAAMjK,YAEV+gB,MAAM7W,GAAS,EAAM+4B,EAAmC,MACxD94C,KAAKi5C,mCAAqCH,EAE9C,mBACI,OAAO94C,KAAKi5C,mCAAmCD,etGuSZE,CAA6C5iB,GuGpTrC,EvGoToG1B,GAAkBM,IACvKikB,GpChT0D,EAAC7iB,EAAsB8iB,EAA6CxkB,EAAkBM,IAC3I,cAA8CoB,EACjD3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GAEvC,GAAImV,EAA4BpV,GAC5B,MAAM,IAAIjK,UAEd,MACMwjC,E4IbyC,EAAC50B,EAAoB7iB,KAC5E,MAAMy3C,EAAwC50B,EAAmB60B,+BAMjE,OALAhtB,GAA6B+sB,EAAuCz3C,GAEN,IAA1Dy3C,EAAsC9xB,iBACtCtnB,OAAOC,eAAem5C,EAAuC,kBAAmB,CAAE57B,IAAK,IAAM,IAE1F47B,G5IM+CD,CAA4Ct5B,EADpE,IAAK,MAAoBle,IAE/Cg1B,MAAM7W,GAAS,EAAOs5B,EAAuC,MAC7Dr5C,KAAKu5C,uCAAyCF,EAElD,aACI,OAAOr5C,KAAKu5C,uCAAuCC,SoCkSZC,CAAiDnjB,GwGpTzC,ExGoT4G1B,GAAkBM,IACnLwkB,GyGtTqD,EAACpjB,EAAsBqjB,EAAwC/kB,EAAkBM,IACjI,cAAyCoB,EAC5C3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GACjC65B,ECJoC,EAACn1B,GAAsBo1B,kBACzE,MAAMC,EAAoBD,EAAYE,iBAKtCD,EAAkBE,MAAK,CAAC11C,EAAGwK,IAAOxK,EAAEU,GAAK8J,EAAE9J,IAAM,EAAIV,EAAEU,GAAK8J,EAAE9J,GAAK,EAAI,IACvE,MAAMi1C,EAA4BH,EAAkB34C,MAAM,EAAG,GACvDy4C,EAAmCn1B,EAAmBy1B,wBAAwB,IAAIC,YAAYF,IAMpG,OADAh6C,OAAOC,eAAe05C,EAAkC,cAAe,CAAEz5C,MAAO05C,IACzED,GDV0CD,CAAuC75B,EAAele,GAE/F,GAAIszB,EAA4BpV,GAC5B,MAAM,IAAIjK,UAEd+gB,MAAM7W,GAAS,EAAM65B,EAAkC,MACvD55C,KAAKo6C,kCAAoCR,EAE7C,kBACI,OAAO55C,KAAKo6C,kCAAkCP,czGySZQ,CAA4C/jB,G0GtTpC,E1GsTkG1B,GAAkBM,IAEpKolB,G2GxT0D,EAAChkB,EAAsBikB,EAA6C3lB,IACzH,cAA8C0B,EACjD3tB,YAAYoX,EAASne,GACjB,MAAMke,EAAgB8U,EAAiB7U,GAEvC6W,MAAM7W,GAAS,EAD+Bw6B,EAA4Cz6B,EAAele,GAC7C,Q3GmTrB44C,CAAiDlkB,G4GxTlC,EAACrL,EAAyBiK,IACjF,CAACzQ,GAAsBg2B,uBAE1B,GAA+D,mBAApDh2B,EAAmBi2B,6BAC1B,OAAOj2B,EAAmBi2B,6BAA6BD,GAE3D,MAAMZ,EAAc,IAAIM,YAAY,CAACM,IAC/Bb,EAAmCn1B,EAAmBy1B,wBAAwBL,GAEpF,GAA8B,UAA1BY,EAAiBE,KACjB,MAAM1vB,IAGV,GAAIiK,EAA4BzQ,GAC5B,MAAM,IAAI5O,UAEd,OAAO+jC,G5GuSqCgB,CAAmD3vB,GAAyBiK,IACuCN,IACjKimB,G6GvTuC,EAACvC,EAA6BrtB,EAAyB2D,EAAyBgB,EAAoBgpB,EAAwCO,EAA4CO,EAAuCY,EAA4C3kB,IAC7S,cAA2B2iB,EAC9B3vC,YAAY/G,EAAU,IAClB,GAAsC,OAAlC+zB,EACA,MAAM,IAAI9zB,MAAM,gDAEpB,MAAM4iB,EAAqB,IAAIkR,EAA8B/zB,GAE7D,GAA2B,OAAvB6iB,EACA,MAAMmL,IAGV,IAAKpN,EAAmB5gB,EAAQ6gB,aAC5B,MAAM,IAAI5M,UAAU,uBAAuBjU,EAAQ6gB,+EAGvD,QAA2BtX,IAAvBvJ,EAAQunB,YAA4B1E,EAAmB0E,aAAevnB,EAAQunB,WAC9E,MAAMyF,IAEVgI,MAAMnS,EAAoB,GAC1B,MAAM,YAAEhC,GAAgB7gB,GAClB,WAAEunB,GAAe1E,EAkCvB,GAhCAzkB,KAAK86C,aACyC,iBAAnCr2B,EAAmBwI,YACpBxI,EAAmBwI,YACH,aAAhBxK,EACI,IAAM0G,EACU,gBAAhB1G,QAAiDtX,IAAhBsX,EAC7B,IAAM0G,EACU,aAAhB1G,EACI,KAAO0G,EAKuE,IAA3E5kB,KAAK2oB,IAAI,EAAG3oB,KAAK4oB,IAAI,IAAK5oB,KAAKoD,MAAO8a,EAAc0G,EAAc,OAAgBA,EAC3GnpB,KAAK+6C,oBAAsBt2B,EAEgB,uBAAvCkR,EAA8BzsB,MAC9BlJ,KAAKg7C,gBAAkBv2B,EAAmBM,aAC1C/kB,KAAK2rC,sBAAwBlnB,EAAmBmM,mBAChD5wB,KAAKg7C,gBAAgBj5B,KAAK5hB,MAAQ,MAClCH,KAAK2rC,sBAAsB9nB,QAAQ7jB,KAAKg7C,iBAAiBn3B,QAAQY,EAAmBjV,aACpFxP,KAAK2rC,sBAAsBjmB,UAG3B1lB,KAAKg7C,gBAAkB,KACvBh7C,KAAK2rC,sBAAwB,MAEjC3rC,KAAKi7C,OAAS,KAKmB,YAA7Bx2B,EAAmBsS,MAAqB,CACxC/2B,KAAKi7C,OAAS,YACd,MAAMC,EAAc,KACI,cAAhBl7C,KAAKi7C,SACLj7C,KAAKi7C,OAAS,MAElBx2B,EAAmBkN,oBAAoB,cAAeupB,IAE1Dz2B,EAAmBmN,iBAAiB,cAAespB,IAG3D,kBACI,OAAOl7C,KAAK86C,aAEhB,YACI,OAAuB,OAAhB96C,KAAKi7C,OAAkBj7C,KAAKi7C,OAASj7C,KAAK+6C,oBAAoBhkB,MAEzEokB,QAEI,MAAmB,WAAfn7C,KAAK+2B,MACE/2B,KAAK+6C,oBAAoBI,QAAQjoB,MAAK,KACzC,MAAMjI,QAIM,cAAhBjrB,KAAKi7C,SACLj7C,KAAKi7C,OAAS,MAEXj7C,KAAK+6C,oBAAoBI,QAAQjoB,MAAK,KACZ,OAAzBlzB,KAAKg7C,iBAA2D,OAA/Bh7C,KAAK2rC,wBACtC3rC,KAAK2rC,sBAAsB5/B,OAC3B/L,KAAKg7C,gBAAgB72B,aACrBnkB,KAAK2rC,sBAAsBxnB,cAE/B5B,EAAqBviB,UAG7B+4C,yBAAyBC,GACrB,OAAO,IAAIJ,EAAuC54C,KAAM,CAAEg5C,iBAE9DM,+BACI,OAAO,IAAIH,EAA2Cn5C,MAE1Dk6C,wBAAwBL,GACpB,OAAO,IAAIH,EAAsC15C,KAAM,CAAE65C,gBAE7Da,6BAA6BD,GACzB,OAAO,IAAIH,EAA2Ct6C,KAAM,CAAEy6C,qBAElEW,SACI,MAAoB,cAAhBp7C,KAAKi7C,OACE,IAAIv2B,SAAQ,CAACC,EAASyxB,KACzB,MAAMiF,EAAiB,KACnBr7C,KAAK+6C,oBAAoBppB,oBAAoB,cAAe0pB,GACrB,YAAnCr7C,KAAK+6C,oBAAoBhkB,MACzBpS,IAGA3kB,KAAKo7C,SAASloB,KAAKvO,EAASyxB,IAGpCp2C,KAAK+6C,oBAAoBnpB,iBAAiB,cAAeypB,MAG1Dr7C,KAAK+6C,oBAAoBK,SAASjvB,OAAOrV,IAG5C,QAAY3L,IAAR2L,GAAkC,KAAbA,EAAI2J,KACzB,MAAMwK,IAEV,MAAMnU,KAGdwkC,UACI,OAAOt7C,KAAK+6C,oBAAoBO,UAAUnvB,OAAOrV,IAE7C,QAAY3L,IAAR2L,EACA,MAAMmU,IAEV,MAAMnU,O7GiLUykC,CAA8BjD,GAA6BrtB,GAAyB2D,GAAyBgB,GAAoBgpB,GAAwCO,GAA4CO,GAAuCY,GAA4C3kB,IAElU6lB,G8G3T8C,CAAClR,GACzCxqB,IACJ,MAAM27B,EAA8BnR,EAAgC7sB,IAAIqC,GACxE,QAAoC3U,IAAhCswC,EACA,MAAM,IAAI55C,MAAM,gDAEpB,OAAO45C,G9GqTwBC,CAAqCpR,IACtEqR,G+G5T6C,CAACH,GACzC,CAAC17B,EAAew3B,KACnBkE,EAA+B17B,GAAelB,IAAI04B,I/G0TpBsE,CAAoCJ,IACpEK,GgH5TsC,CAAC17B,GAClC,CAACuK,EAAkBlb,EAAa2O,EAAS,EAAGzV,EAAQ,KACvD,MAAMiiB,EAAkBD,EAAiBvM,GACzC,QAAwBhT,IAApBwf,EACA,MAAMxK,IAEV,OAAI+F,GAAkB1W,GACXmb,EAAgB9G,QAAQrU,EAAa,EAAG9G,GAE5CiiB,EAAgB9G,QAAQrU,EAAa,IhHmTrBssC,CAA6B37B,GACtD47B,GiH9TgD,CAACP,GAC5C,CAAC17B,EAAew3B,KACnBkE,EAA+B17B,GAAe9B,OAAOs5B,IjH4TpB0E,CAAuCR,IAC1ES,G3CvTyC,CAAC97B,GACrC,CAACuK,EAAkBlE,EAAiCrI,EAAoBzV,EAAQ,SACvDyC,IAAxBqb,EACOkE,EAAiB/nB,SAASgoB,GAAoBA,EAAgBxG,eAEtC,iBAAxBqC,EACAiE,GAA0BtK,EAAsBuK,EAAkBlE,GAAqBrC,aAE9F+B,GAAkBM,QACHrb,IAAXgT,EACOuM,EAAiB/nB,SAASgoB,GAAoBA,EAAgBxG,WAAWqC,UAEtErb,IAAVzC,EACO+hB,GAA0BtK,EAAsBuK,EAAkBvM,GAAQgG,WAAWqC,EAAqB,GAE9GiE,GAA0BtK,EAAsBuK,EAAkBvM,GAAQgG,WAAWqC,EAAqB,EAAG9d,QAEzGyC,IAAXgT,EACOuM,EAAiB/nB,SAASgoB,GAAoBA,EAAgBxG,WAAWqC,KAE7EiE,GAA0BtK,EAAsBuK,EAAkBvM,GAAQgG,WAAWqC,EAAqB,G2CmSvF01B,CAAgC/7B,GAC5Dg8B,GAAoC,IAAIzgC,QACxC0gC,GkHjU+C,EAACD,EAAmC3+B,IAC7E+L,GAA2B/L,EAAe2+B,EAAmC5yB,GlHgUjD8yB,CAAsCF,GAAmC3+B,GAC3G8+B,GmH3TkD,EAACT,EAAwB17B,EAAsB8K,EAAyB0W,EAA+BnU,EAAiCuV,EAAgC5U,EAAsBO,EAAiCE,EAAyBqtB,EAA2BpzB,EAAkCuzB,EAAiCpb,IACnY,CAAClhB,EAAemN,EAAarE,EAAsBhnB,KACtD,GAA+B,IAA3BA,EAAQ0lB,gBAAoD,IAA5B1lB,EAAQ2lB,gBACxC,MAAMqH,IAEV,MAAMjG,EAAqB1lB,MAAMC,QAAQtB,EAAQ+mB,oBAC3C/mB,EAAQ+mB,mBACR1lB,MAAMY,KAAKjC,EAAQ+mB,oBAEzB,GAAIA,EAAmBnD,MAAMnG,GAAiBA,EAAe,IACzD,MAAMuP,IAEV,GAAIjG,EAAmBznB,SAAWU,EAAQ2lB,gBACtC,MAAMpH,IAGV,GAAiC,aAA7Bve,EAAQ0d,iBACR,MAAMsP,IAEV,MAAM9F,EAAwBlnB,EAAQyd,aAAezd,EAAQ0lB,eACvDyB,EAAyBJ,EAAmBK,QAAO,CAACC,EAAK9oB,IAAU8oB,EAAM9oB,GAAO,GAChFo8C,OAAmEpxC,IAA9Cyd,EAAqB1L,qBAAqC,EAAI0L,EAAqB1L,qBAAqBhc,OAEnI,GAAI4nB,EAAwByzB,EAAqB,GAAKxzB,EAAyB,EAC3E,MAAM6F,IAEV,MAAM4tB,EAAiB,IAAInrB,eACrBorB,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAIt7C,EAAI,EAAGA,EAAIQ,EAAQ0lB,eAAgBlmB,GAAK,EAC7Cq7C,EAAU/xC,KAAKyjB,EAAqBrO,EAAe,CAC/CT,aAAczd,EAAQyd,aACtBC,iBAAkB1d,EAAQ0d,iBAC1BC,sBAAuB3d,EAAQ2d,sBAC/BwC,KAAM,KAEV26B,EAA0BhyC,KAAK8iB,EAAgC1N,EAAe,CAC1ET,aAAczd,EAAQyd,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiB3lB,EAAQyd,gBAGjC,MAAMs9B,EAAsB,GAC5B,QAAkDxxC,IAA9Cyd,EAAqB1L,qBACrB,IAAK,MAAM,aAAE3K,EAAY,SAAEmqB,EAAQ,SAAEC,EAAQ,KAAEzzB,KAAU0f,EAAqB1L,qBAAsB,CAChG,MAAM2sB,EAAqB9G,EAA+BjjB,EAAe,CACrET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB0C,YAAwC9W,IAAhCvJ,EAAQ4lB,cAActe,GACxBtH,EAAQ4lB,cAActe,QACLiC,IAAjBoH,EACI,EACAA,IAEdtS,OAAO8xB,iBAAiB8X,EAAmB5nB,OAAQ,CAC/C1P,aAAc,CACVkL,IAAK,SAAwBtS,IAAjBoH,EAA6B,EAAIA,GAEjDmqB,SAAU,CACNjf,IAAK,SAAoBtS,IAAbuxB,EAAyB9b,EAA6B8b,GAEtEC,SAAU,CACNlf,IAAK,SAAoBtS,IAAbwxB,EAAyBhc,EAA6Bgc,KAG1EggB,EAAoBjyC,KAAKm/B,GAGjC,MAAM+S,EAAyBjb,EAA8B7hB,EAAe,CACxET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB/iB,KAAK2oB,IAAI,EAAGpE,EAAwByzB,KAElD5tB,EAAa3B,GAAkBC,EAAanN,EAAcqJ,YAC1Die,EAAsB1Y,EAAgC5O,EAAe6O,EAAY7F,EAAwByzB,EAE/Gh4C,KAAK2oB,IAAI,EAAGnE,IACN8zB,EAA4BrvB,EAAgC1N,EAAe,CAC7ET,aAAc9a,KAAK2oB,IAAI,EAAGnE,GAC1BzJ,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiBhjB,KAAK2oB,IAAI,EAAGnE,KAE3B+zB,EAA2B,GACjC,IAAK,IAAI17C,EAAI,EAAGA,EAAIQ,EAAQ2lB,gBAAiBnmB,GAAK,EAC9C07C,EAAyBpyC,KAAKi3B,EAA8B7hB,EAAe,CACvET,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgBqB,EAAmBvnB,MAG3C,IAAK,IAAIA,EAAI,EAAGA,EAAIQ,EAAQ0lB,eAAgBlmB,GAAK,EAAG,CAChDq7C,EAAUr7C,GAAGyiB,QAAQ64B,EAA0Bt7C,IAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIO,EAAQyd,aAAche,GAAK,EAC3Cq7C,EAA0Bt7C,GAAGyiB,QAAQ+4B,EAAwBv7C,EAAGD,EAAIQ,EAAQyd,aAAehe,GAGnG,MAAM07C,EAAe,IAAI71B,QAA0D/b,IAA9Cyd,EAAqB1L,qBACpD,GACA0L,EAAqB1L,qBAAqB/Z,KAAI,EAAG+F,QAAQoJ,KACvD,MAAMu3B,EAAqB8S,EAAoBrqC,GAG/C,OAFAu3B,EAAmBhmB,QAAQ+4B,EAAwB,EAAG9zB,EAAwBxW,GAC9Eu3B,EAAmBnkB,MAAM,GAClB,CAACxc,EAAM2gC,EAAmB5nB,YAEzC26B,EAAuB/4B,QAAQujB,GAC/B,IAAI7nB,EAAwB3d,EAAQ2d,sBAChCk4B,EAAmB,KAEvB,MAAM/sB,EAA+C,IAA5B9oB,EAAQ2lB,gBAAwB,CAAC6f,GAAuB0V,EAC3EE,EAA8B,CAChC,iBACI,OAAOruB,GAEX,mBACI,OAAO/sB,EAAQyd,cAEnB,iBAAiB49B,GAEb,MAAMhyB,KAEV,uBACI,OAAOrpB,EAAQ0d,kBAEnB,qBAAqB29B,GAEjB,MAAMhyB,KAEV,4BACI,OAAO1L,GAEX,0BAA0Bpf,GACtB,IAAK,MAAMu/B,KAAY+c,EACnB/c,EAASngB,sBAAwBpf,EAErCof,EAAwBpf,GAE5B,cACI,OAAOinC,EAAoBrnB,SAE/B,aACI,OAAO08B,GAEX,qBACI,OAAO76C,EAAQ0lB,gBAEnB,sBACI,OAAO1lB,EAAQ2lB,iBAEnB,uBACI,OAAOkwB,GAEX,qBAAqBt3C,GACe,mBAArBs3C,GACPuF,EAA4BrrB,oBAAoB,iBAAkB8lB,GAEtEA,EAAoC,mBAAVt3C,EAAuBA,EAAQ,KACzB,mBAArBs3C,GACPuF,EAA4BprB,iBAAiB,iBAAkB6lB,IAGvE,iBACI,OAAOsF,GAEX,WACI,OAAOP,EAAeprB,OAE1BQ,iBAAgB,IAAIiR,IACTuE,EAAoBxV,iBAAiBiR,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEvEhf,QAASg4B,EAAuBxjC,KAAK,KAAMqS,GAC3CvG,WAAY83B,EAA0B5jC,KAAK,KAAMqS,GACjDV,cAAa,IAAI6Y,IACNuE,EAAoBpd,cAAc6Y,EAAK,IAElDlR,oBAAmB,IAAIkR,IACZuE,EAAoBzV,oBAAoBkR,EAAK,GAAIA,EAAK,GAAIA,EAAK,KAGxEqa,EAAwB,IAAIn3B,IACM,IAAE6L,EAwBGD,EAxB7C6qB,EAAerrB,MAAMS,kBAAqBA,EAuBvC4qB,EAAerrB,MAAMS,iBAtBb,IAAIiR,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMsa,EAA4C,mBAAZta,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG5Q,YAC9D4Q,EAAK,GAAG5Q,YACR,KACV,GAA+B,OAA3BkrB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsBz/B,IAAIolB,EAAK,SAC/B13B,IAAzBiyC,EACAva,EAAK,GAAKua,GAGVva,EAAK,GAAMxd,IACPwD,EAAiC/I,EAAcod,YAAapd,EAAcqJ,YAAY,IAAMg0B,EAAuB93B,MAEvH63B,EAAsBv/B,IAAIw/B,EAAwBta,EAAK,MAInE,OAAOjR,EAAiBpa,KAAKglC,EAAerrB,MAAO0R,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGlF2Z,EAAerrB,MAAMQ,qBAAwBA,EAW1C6qB,EAAerrB,MAAMQ,oBAVb,IAAIkR,KACP,GAAgB,YAAZA,EAAK,GAAkB,CACvB,MAAMua,EAAuBF,EAAsBz/B,IAAIolB,EAAK,SAC/B13B,IAAzBiyC,IACAF,EAAsBl/B,OAAO6kB,EAAK,IAClCA,EAAK,GAAKua,GAGlB,OAAOzrB,EAAoBna,KAAKglC,EAAerrB,MAAO0R,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAGrF,IAAIvR,EAAY,KAChBrxB,OAAOC,eAAes8C,EAAerrB,MAAO,YAAa,CACrD1T,IAAK,IAAM6T,EACX3T,IAAMxd,IACuB,mBAAdmxB,GACPkrB,EAAerrB,MAAMQ,oBAAoB,UAAWL,GAExDA,EAA6B,mBAAVnxB,EAAuBA,EAAQ,KACzB,mBAAdmxB,IACPkrB,EAAerrB,MAAMS,iBAAiB,UAAWN,GACjDkrB,EAAerrB,MAAMzL,YAIjCkD,EAAqBtS,UAAUkhC,KAAOgF,EAAerrB,MACrD,IAAI9H,EAAwB,KChPO,EAACvJ,EAAeyJ,EAAwBX,EAAsBy0B,KACrG,IAAI/zB,EAAqBpN,EAAuBuB,IAAIqC,QACzB3U,IAAvBme,IACAA,EAAqB,IAAI5N,QACzBQ,EAAuByB,IAAImC,EAAewJ,IAE9C,MAAMg0B,ECPwC/0B,OAAOK,EAAsBy0B,IAEpE,IAAIz0B,OCH6B,CAACy0B,GAClC,IAAI34B,SAAQ,CAACC,EAASyxB,KACzB,MAAM,MAAEjlB,EAAK,MAAEC,GAAU,IAAIC,eAC7BF,EAAMG,UAAY,EAAGC,WACjBJ,EAAMgqB,QACN/pB,EAAM+pB,QACNx2B,EAAQ4M,IAEZJ,EAAMosB,eAAiB,EAAGhsB,WACtBJ,EAAMgqB,QACN/pB,EAAM+pB,QACN/E,EAAO7kB,IAGXH,EAAMI,YAAY6rB,MDZsBG,CAA6BH,IDMpCI,CAAmC70B,EAAsBy0B,GAE9F,OADA/zB,EAAmB3L,IAAI4L,EAAwB+zB,GACxCA,GDyOkCI,CAA4B59B,EAAek9B,EAA6Bp0B,EAAsBhnB,GACtGsxB,MAAMyqB,GAAkBt0B,EAAwBs0B,IAC7E,MAAM/5B,EAASqE,GAAmBrmB,EAAQ0lB,eAAgB1lB,EAAQyd,cAC5DoK,EAAUxB,GAAmBrmB,EAAQ2lB,gBAAiBoB,GACtDjH,OAA2DvW,IAA9Cyd,EAAqB1L,qBAClC,GACA0L,EAAqB1L,qBAAqB8L,QAAO,CAACU,GAAUxgB,WAAW,IAAMwgB,EAAQ,CAACxgB,GAAO,IAAIoL,aAAa,QAAS,IAC7H,IAAIwS,GAAW,EACf,MAAM82B,EAAyB,KACvBh8C,EAAQ2lB,gBAAkB,GAC1B6f,EAAoBjjB,WAAW04B,GAEnC,IAAK,IAAIz7C,EAAI,EAAG0oB,EAAkC,EAAG1oB,EAAIQ,EAAQ2lB,gBAAiBnmB,GAAK,EAAG,CACtF,MAAMy8C,EAA0Bf,EAAyB17C,GACzD,IAAK,IAAIC,EAAI,EAAGA,EAAIsnB,EAAmBvnB,GAAIC,GAAK,EAC5Cw7C,EAA0B14B,WAAW05B,EAAyB/zB,EAAkCzoB,EAAGA,GAEvGyoB,GAAmCnB,EAAmBvnB,KAGxD08C,EAAqB,IAAI/3B,IAE/BqhB,EAAoBhiB,eAAiB,EAAGG,cAAakiB,mBACjD,GAA8B,OAA1Bpe,EAAgC,CAChC,MAAMpK,EAAem9B,EAAgCY,GACrD,IAAK,IAAI57C,EAAI,EAAGA,EAAIutB,EAAYvtB,GAAK,IAAK,CACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIO,EAAQ0lB,eAAgBjmB,GAAK,EAC7C,IAAK,IAAIkB,EAAI,EAAGA,EAAIX,EAAQyd,aAAc9c,GAAK,EAC3CmlB,GAAgBnC,EAAa3B,EAAOviB,GAAIkB,EAAGA,EAAGnB,QAGJ+J,IAA9Cyd,EAAqB1L,sBACrB0L,EAAqB1L,qBAAqBva,SAAQ,EAAGuG,QAAQoJ,KACzDoV,GAAgBnC,EAAa7D,EAAYxY,EAAM4f,EAAwBxW,EAAOlR,MAGtF,IAAK,IAAIC,EAAI,EAAGA,EAAIO,EAAQ0lB,eAAgBjmB,GAAK,EAC7C,IAAK,IAAIkB,EAAI,EAAGA,EAAIomB,EAAmBtnB,GAAIkB,GAAK,EAEX,IAA7BknB,EAAQpoB,GAAGkB,GAAGulB,aACd2B,EAAQpoB,GAAGkB,GAAK,IAAI+R,aAAa,MAI7C,IACI,MAAMqV,EAAyB/F,EAAOzgB,KAAI,CAACuF,EAAO4J,KAE9C,GADoB2M,EAAa3M,GACjBiM,KAAO,EAEnB,OADAu/B,EAAmBngC,IAAIrL,EAAOqc,EAAa,KACpCjmB,EAEX,MAAMud,EAAQ63B,EAAmBrgC,IAAInL,GACrC,YAAcnH,IAAV8a,EACO,IAEPvd,EAAMwW,OAAOgG,GAAgBA,EAAYhG,OAAOuG,GAAsB,IAAXA,QAC7C,IAAVQ,EACA63B,EAAmB9/B,OAAO1L,GAG1BwrC,EAAmBngC,IAAIrL,EAAO2T,EAAQ,IAGvCvd,MAELkhB,EAAmBf,EAAiC/I,EAAcod,YAAc97B,EAAI0e,EAAcqJ,WAAYrJ,EAAcqJ,YAAY,IAAME,EAAsBQ,QAAQF,EAAwBF,EAAS/H,KACnNoF,EAAW8C,EACX,IAAK,IAAIvoB,EAAI,EAAGyoB,EAAkC,EAAGzoB,EAAIO,EAAQ2lB,gBAAiBlmB,GAAK,EAAG,CACtF,IAAK,IAAIkB,EAAI,EAAGA,EAAIomB,EAAmBtnB,GAAIkB,GAAK,EAC5C2d,GAAcunB,EAAche,EAAQpoB,GAAIkB,EAAGunB,EAAkCvnB,EAAGnB,GAEpF0oB,GAAmCnB,EAAmBtnB,IAG9D,MAAO0oB,GACHjD,GAAW,EACXk2B,EAA4BhzB,cAAc,IAAIC,WAAW,iBAAkB,CACvEC,MAAOH,EAAMG,MACbC,SAAUJ,EAAMI,SAChBC,OAAQL,EAAMK,OACdC,QAASN,EAAMM,WAGvB,IAAKvD,EAAU,CACX,IAAK,IAAIzlB,EAAI,EAAGA,EAAIO,EAAQ0lB,eAAgBjmB,GAAK,EAAG,CAChDo7C,EAAUp7C,GAAG8iB,WAAWu4B,EAA0Br7C,IAClD,IAAK,IAAIkB,EAAI,EAAGA,EAAIX,EAAQyd,aAAc9c,GAAK,EAC3Cm6C,EAA0Bt7C,GAAG+iB,WAAWy4B,EAAwBr6C,EAAGlB,EAAIO,EAAQyd,aAAe9c,GAGtG,QAAkD4I,IAA9Cyd,EAAqB1L,qBAAoC,CACzD,MAAMhc,EAAS0nB,EAAqB1L,qBAAqBhc,OACzD,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAChC,MAAMwoC,EAAqB8S,EAAoBt7C,GAC/CwoC,EAAmB1lB,WAAWy4B,EAAwB,EAAG9zB,EAAwBznB,GACjFwoC,EAAmB99B,QAG3B6wC,EAAuBz4B,WAAWijB,GAClCA,EAAoBhiB,eAAiB,KACjCqnB,EACAmR,IAGAG,IAEJ,UAKhB,IAAItR,GAAc,EAElB,MAAMre,EAAiBD,EAAqBrO,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAM,IAEJi8B,EAAmB,IAAM5W,EAAoBvjB,QAAQuK,GAAgBvK,QAAQ/D,EAActQ,aAC3FuuC,EAAsB,KACxB3W,EAAoBjjB,WAAWiK,GAC/BA,EAAejK,cA0BnB,OADA65B,IACOhd,EAAmBgc,GAxBJ,KAClB,GAAIl2B,EAAU,CACVi3B,IACIn8C,EAAQ2lB,gBAAkB,GAC1B6f,EAAoBvjB,QAAQg5B,GAEhC,IAAK,IAAIz7C,EAAI,EAAG0oB,EAAkC,EAAG1oB,EAAIQ,EAAQ2lB,gBAAiBnmB,GAAK,EAAG,CACtF,MAAMy8C,EAA0Bf,EAAyB17C,GACzD,IAAK,IAAIC,EAAI,EAAGA,EAAIsnB,EAAmBvnB,GAAIC,GAAK,EAC5Cw7C,EAA0Bh5B,QAAQg6B,EAAyB/zB,EAAkCzoB,EAAGA,GAEpGyoB,GAAmCnB,EAAmBvnB,IAG9DqrC,GAAc,KAEO,KACjB3lB,IACAk3B,IACAJ,KAEJnR,GAAc,MnHlEgBwR,CAAyCpC,GAAwB17B,EAAsB8K,GAAyB0W,GAA+BnU,GAAiCuV,GAAgC5U,GAAsBO,GAAiCE,GAAyBqtB,GAA2BpzB,GAAkCuzB,GAAiCpb,IAClakd,GuHlU6C,EAACjzB,EAAyBqxB,EAAmCnuB,EAAsBS,EAAyBoS,IACpJ,CAAClhB,EAAemN,EAAamnB,EAAmClrC,EAAM0f,EAAsBhnB,KAC/F,GAA0C,OAAtCwyC,EACA,IACI,MAAM7qB,EAAyB,IAAI6qB,EAAkCt0B,EAAe5W,EAAMtH,GACpFs7C,EAAwB,IAAIn3B,IAClC,IAAI0xB,EAAmB,KAqFvB,GApFAx3C,OAAO8xB,iBAAiBxI,EAAwB,CAK5ClK,aAAc,CACV5B,IAAK,IAAM7b,EAAQyd,aACnB1B,IAAK,KACD,MAAMsN,MAGd3L,iBAAkB,CACd7B,IAAK,IAAM,WACXE,IAAK,KACD,MAAMsN,MAIdwsB,iBAAkB,CACdh6B,IAAK,IAAMg6B,EACX95B,IAAMxd,IAC8B,mBAArBs3C,GACPluB,EAAuBoI,oBAAoB,iBAAkB8lB,GAEjEA,EAAoC,mBAAVt3C,EAAuBA,EAAQ,KACzB,mBAArBs3C,GACPluB,EAAuBqI,iBAAiB,iBAAkB6lB,OAK1EluB,EAAuBqI,kBAAqBA,EAkCzCrI,EAAuBqI,iBAjCf,IAAIiR,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMsa,EAA4C,mBAAZta,EAAK,GACrCA,EAAK,GACc,iBAAZA,EAAK,IAA+B,OAAZA,EAAK,IAA8C,mBAAxBA,EAAK,GAAG5Q,YAC9D4Q,EAAK,GAAG5Q,YACR,KACV,GAA+B,OAA3BkrB,EAAiC,CACjC,MAAMC,EAAuBF,EAAsBz/B,IAAIolB,EAAK,SAC/B13B,IAAzBiyC,EACAva,EAAK,GAAKua,GAGVva,EAAK,GAAMxd,IAEY,UAAfA,EAAMpjB,MACNhC,OAAO8xB,iBAAiB1M,EAAO,CAC3BpjB,KAAM,CAAE9B,MAAO,oBAEnBg9C,EAAuB93B,IAGvB83B,EAAuB,IAAIlzB,WAAW4Y,EAAK,GAAI,IAAKxd,MAG5D63B,EAAsBv/B,IAAIw/B,EAAwBta,EAAK,MAMnE,OADAjR,EAAiBpa,KAAK+R,EAAwB,QAASsZ,EAAK,GAAIA,EAAK,IAC9DjR,EAAiBpa,KAAK+R,KAA2BsZ,KAGhEtZ,EAAuBoI,qBAAwBA,EAa5CpI,EAAuBoI,oBAZf,IAAIkR,KACP,GAAgB,mBAAZA,EAAK,GAAyB,CAC9B,MAAMua,EAAuBF,EAAsBz/B,IAAIolB,EAAK,SAC/B13B,IAAzBiyC,IACAF,EAAsBl/B,OAAO6kB,EAAK,IAClCA,EAAK,GAAKua,GAKlB,OADAzrB,EAAoBna,KAAK+R,EAAwB,QAASsZ,EAAK,GAAIA,EAAK,IACjElR,EAAoBna,KAAK+R,EAAwBsZ,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAOvD,IAA5BjhC,EAAQ2lB,gBAAuB,CAC/B,MAAM6G,EAAiBD,EAAqBrO,EAAe,CACvDT,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvBwC,KAAM,IAMV,OAJAwH,EAAuB1F,QAAQuK,GAAgBvK,QAAQ/D,EAActQ,aAI9DwxB,EAAmBzX,GAHJ,IAAM6E,EAAejK,eAClB,IAAMiK,EAAevK,QAAQ/D,EAActQ,eAIxE,OAAO+Z,EAEX,MAAOzS,GAEH,GAAiB,KAAbA,EAAI2J,KACJ,MAAMmO,IAEV,MAAM9X,EAtCuC,IAAE6a,EAnCHC,EA6EpD,QAA6BzmB,IAAzByd,EACA,MAAMgG,IAGV,MCxHgD,CAACyuB,IACrD,MAAM,MAAElsB,GAAU,IAAIE,eACtB,IAEIF,EAAMK,YAAY6rB,GAEtB,QACIlsB,EAAMgqB,UDgHNgD,CAAyCv8C,GAClC06C,EAAkCx8B,EAAemN,EAAarE,EAAsBhnB,IvH2M9Dw8C,CAAoCnzB,GAAyBqxB,GAAmCnuB,GAAsBS,GAAyBoS,IAC9Kqd,GnDxP+C,EAACzjB,EAAmBihB,EAAwB/gB,EAAmC6G,EAA+BnU,EAAiCuV,EAAgC5U,EAAsB4tB,EAAkCE,EAA2BpzB,EAAkCzE,EAAoBgwB,EAAmCtf,EAAsC4G,EAAkB5H,EAAyBgU,IACtd,CAAC5+B,EAAMtH,EAASgnB,KACnB,MAAMsZ,EAA2B,IAAIxmB,QACrC,IAAI4iC,EAAyB,KAoJ7B,MAAO,CACHnqB,OAAO3L,EAAOE,EAA2B/P,GACrCojC,EAAiCrzB,EAA2BF,GAC5D,MAAM+1B,EAA2Crc,EAAyBzkB,IAAIiL,GAC9E,YAAiDvd,IAA7CozC,EACO75B,QAAQC,QAAQ45B,GAxJXh2B,OAAOC,EAAOE,EAA2B/P,KAC7D,IAAI4Q,EAAyBnF,EAAmBoE,GAC5Cg2B,EAAoB,KACxB,MAAMC,EAAyC7+B,EAAiB2J,EAAwBb,GAClFC,EAAqB1lB,MAAMC,QAAQtB,EAAQ+mB,oBAC3C/mB,EAAQ+mB,mBACR1lB,MAAMY,KAAKjC,EAAQ+mB,oBAEzB,GAA0C,OAAtCyrB,EAA4C,CAC5C,MAAMrrB,EAAyBJ,EAAmBK,QAAO,CAACC,EAAK9oB,IAAU8oB,EAAM9oB,GAAO,GAChF08C,EAA4BrvB,EAAgC9E,EAA2B,CACzFrJ,aAAc9a,KAAK2oB,IAAI,EAAGnE,GAC1BzJ,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiBhjB,KAAK2oB,IAAI,EAAGnE,KAE3B+zB,EAA2B,GACjC,IAAK,IAAI17C,EAAI,EAAGA,EAAIonB,EAAMjB,gBAAiBnmB,GAAK,EAC5C07C,EAAyBpyC,KAAKi3B,EAA8BjZ,EAA2B,CACnFrJ,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgBqB,EAAmBvnB,MAG3C,MAAMkrC,EAAiBne,EAAqBzF,EAA2B,CACnErJ,aAAczd,EAAQyd,aACtBC,iBAAkB1d,EAAQ0d,iBAC1BC,sBAAuB3d,EAAQ2d,sBAC/BwC,KAAM,IAEVuqB,EAAezoB,QAAUg4B,EAAuBxjC,KAAK,KAAMykC,GAC3DxQ,EAAenoB,WAAa83B,EAA0B5jC,KAAK,KAAMykC,GACjE0B,EAAoB,CAAC3B,EAA2BC,EAA0BxQ,QAEpEmS,IACNl1B,EAAyB,IAAI6qB,EAAkC1rB,EAA2Bxf,IAG9F,GADAg5B,EAAyBvkB,IAAI+K,EAAiD,OAAtB81B,EAA6Bj1B,EAAyBi1B,EAAkB,IACtG,OAAtBA,EAA4B,CAC5B,GAA+B,OAA3BF,EAAiC,CACjC,QAA6BnzC,IAAzByd,EACA,MAAM,IAAI/mB,MAAM,sCAEpB,GAA6C,OAAzCizB,EACA,MAAM,IAAIjzB,MAAM,uDAGpB,MAAMinB,EAAwBN,EAAMnJ,aAAemJ,EAAMlB,eACnDi1B,OAAmEpxC,IAA9Cyd,EAAqB1L,qBAAqC,EAAI0L,EAAqB1L,qBAAqBhc,OAC7Hwf,EAAmBoI,EAAwByzB,EAC3CmC,EAAen2B,UACjB,MAAMmgB,EAA6B,IAAI5T,EAAqCpU,EAGpC,IAAxCnc,KAAK+O,KAAKkV,EAAMzI,QAAQ7e,OAAS,KAAYwnB,EAA0BS,YACjEszB,EAAY,GACZC,EAA4B,GAClC,IAAK,IAAIt7C,EAAI,EAAGA,EAAIQ,EAAQ0lB,eAAgBlmB,GAAK,EAC7Cq7C,EAAU/xC,KAAKyjB,EAAqBua,EAA4B,CAC5DrpB,aAAczd,EAAQyd,aACtBC,iBAAkB1d,EAAQ0d,iBAC1BC,sBAAuB3d,EAAQ2d,sBAC/BwC,KAAM,KAEV26B,EAA0BhyC,KAAK8iB,EAAgCkb,EAA4B,CACvFrpB,aAAczd,EAAQyd,aACtBC,iBAAkB,WAClBC,sBAAuB,WACvBgI,gBAAiB3lB,EAAQyd,gBAGjC,MAAMs9B,QAA4Bj4B,QAAQsP,IAAI/wB,MAAMY,KAAK2kB,EAAM9G,WAAWrQ,UAAUlO,KAAIolB,MAAOlH,IAC3F,MAAMwoB,EAAqB9G,EAA+B2F,EAA4B,CAClFrpB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB0C,OAAQZ,EAAWlhB,QAGvB,aADMu7B,EAAiBgN,EAA4BrnB,EAAYwoB,EAAmB5nB,OAAQtJ,GACnFkxB,MAEL+S,EAAyBjb,EAA8B+G,EAA4B,CACrFrpB,aAAc,EACdC,iBAAkB,WAClBC,sBAAuB,WACvB+H,eAAgB/iB,KAAK2oB,IAAI,EAAGpE,EAAwByzB,KAExD,IAAK,IAAIn7C,EAAI,EAAGA,EAAIQ,EAAQ0lB,eAAgBlmB,GAAK,EAAG,CAChDq7C,EAAUr7C,GAAGyiB,QAAQ64B,EAA0Bt7C,IAC/C,IAAK,IAAIC,EAAI,EAAGA,EAAIO,EAAQyd,aAAche,GAAK,EAC3Cq7C,EAA0Bt7C,GAAGyiB,QAAQ+4B,EAAwBv7C,EAAGD,EAAIQ,EAAQyd,aAAehe,GAGnG,IAAK,MAAOiR,EAAOu3B,KAAuB8S,EAAoBv1B,UAC1DyiB,EAAmBhmB,QAAQ+4B,EAAwB,EAAG9zB,EAAwBxW,GAC9Eu3B,EAAmBnkB,MAAM,GAI7B,OAFAk3B,EAAuB/4B,QAAQ6kB,EAA2Bl5B,mBACpDkV,QAAQsP,IAAIyoB,EAAUt5C,KAAKu8B,GAAa5L,EAAwBtL,EAAOkgB,EAA4BhJ,EAAU/mB,MAC5GmvB,EAAgCY,IAE3C4V,EAAyBh2B,GAAcE,EAA4B,IAArB9H,EAAyB,WAAag+B,IAAgBh2B,EAA2B9mB,EAAS+mB,EAAoBC,EAAsBC,GAEtL,MAAMK,QAAwBo1B,EACxB7c,EAAwB3G,EAAkCpS,EAA2B,CACvF5H,OAAQ,KACRzB,aAAc,EACdC,iBAAkB,MAClBC,sBAAuB,WACvBwB,MAAM,EACNC,QAAS,EACTC,UAAW,EACXC,aAAc,KAEX27B,EAA2BC,EAA0BxQ,GAAkBkS,EACtD,OAApBt1B,IACAuY,EAAsB3gB,OAASoI,EAC/BuY,EAAsB/b,MAAM,IAEhC+b,EAAsB5d,QAAQg5B,GAC9B,IAAK,IAAIz7C,EAAI,EAAG0oB,EAAkC,EAAG1oB,EAAIonB,EAAMjB,gBAAiBnmB,GAAK,EAAG,CACpF,MAAMy8C,EAA0Bf,EAAyB17C,GACzD,IAAK,IAAIC,EAAI,EAAGA,EAAIsnB,EAAmBvnB,GAAIC,GAAK,EAC5Cw7C,EAA0Bh5B,QAAQg6B,EAAyB/zB,EAAkCzoB,EAAGA,GAEpGyoB,GAAmCnB,EAAmBvnB,GAE1D,OAAOkrC,EAEX,GAAKmS,EAQD,IAAK,MAAOE,EAAIt9B,KAAemH,EAAM9G,WAAW0F,gBACtCwT,EAAkBlS,EAA2BrH,EAEnDkI,EAAuB7H,WAAWjE,IAAIkhC,GAAKhmC,QAV/C,IAAK,MAAOgmC,EAAIt9B,KAAemH,EAAM9G,WAAW0F,gBACtCsU,EAAiBhT,EAA2BrH,EAElDkI,EAAuB7H,WAAWjE,IAAIkhC,GAAKhmC,GAWnD,aADMmb,EAAwBtL,EAAOE,EAA2Ba,EAAwB5Q,GACjF4Q,GASI4Y,CAAgB3Z,EAAOE,EAA2B/P,MmD0FlCimC,CAAsChkB,GAAmBihB,GAAwB/gB,GAAmC6G,GAA+BnU,GAAiCuV,GAAgC5U,GAAsB4tB,GAAkCE,GAA2BpzB,GAAkCzE,EAAoBgwB,GAAmCtf,GAAsC4G,GAAkB5H,GAAyBgU,IAClf+W,GyHrU4C,CAAC7K,GACvCl0B,GACGk0B,EAA+Bv2B,IAAIqC,GzHmUbg/B,CAAmC9K,IAClE+K,G0HtU+C,CAAC5C,GAC3C,CAAC5yB,EAAwBtK,KAC5Bk9B,EAAkCx+B,IAAI4L,EAAwBtK,I1HoU9B+/B,CAAsC7C,IAExE8C,GAA8BtL,GvD5Ta,EAACgI,EAA+BrlB,EAAsB+F,EAAkBgiB,EAAgCH,EAA8B/8B,EAAyB09B,EAA8BjqB,EAAkBM,EAA6Bkf,EAAmC8K,EAAiCH,EAAiCjtB,IACvX,cAA+BwE,EAClC3tB,YAAYoX,EAAS7W,EAAMtH,GACvB,IAAIyH,EACJ,MAAMyW,EAAgB8U,EAAiB7U,GACjC6G,EAAYsO,EAA4BpV,GACxCgZ,EkLlB6B,CAACl3B,IACrC,IACAA,EACH+mB,wBAAmDxd,IAA/BvJ,EAAQ+mB,mBACtB/mB,EAAQ+mB,mBACmB,IAA3B/mB,EAAQ0lB,gBAAoD,IAA5B1lB,EAAQ2lB,gBAMlC,CAAC3lB,EAAQyd,cACXpc,MAAMY,KAAK,CAAE3C,OAAQU,EAAQ2lB,kBAAmB,IAAM,MlLMtC23B,CAAgC,IAAK,MAAoBt9C,IACzEo0C,EAAoC/5B,EAAwCwB,IAAIqC,GAChF8I,EAAuBotB,aAA6F,EAASA,EAAkCv4B,IAAIvU,GAEnKi2C,EAA2Cv4B,GAAqC,WAAxB9G,EAAciX,MACtEjX,EACuD,QAAtDzW,EAAKw1C,EAA6B/+B,UAAmC,IAAPzW,EAAgBA,EAAKyW,EACpFyJ,EAAyB20B,EAA6BiB,EAA0Cv4B,EAAY,KAAO7G,EAAQkN,YAAamnB,EAAmClrC,EAAM0f,EAAsBkQ,GAM7MlC,MAAM7W,GAAS,EAAMwJ,EALc3C,EAAYy3B,EAA+Bn1C,EAAM4vB,EAAelQ,GAAwB,MAM3H,MAAMlH,EAAa,GACnB6H,EAAuB7H,WAAW/e,SAAQ,CAACs0B,EAAkB0nB,KACzD,MAAMt9B,EAAagb,EAAiBr8B,KAAM4mB,EAAWqQ,GACrDvV,EAAWhX,KAAK,CAACi0C,EAAIt9B,OAEzBrhB,KAAKo/C,wBAA0B71B,EAC/BvpB,KAAKq/C,kBAAoB,KACzBr/C,KAAKs/C,YAAc,IAAIp4B,GAAYxF,GAK/BkF,GACA+0B,EAA8B77B,EAAe9f,MAEjD,MAAM,aAAEif,GAAiBkC,EAAwBnhB,MACjD++C,EAAgCx1B,EAAwBtK,GAE5D,uBACI,OAAOjf,KAAKq/C,kBAEhB,qBAAqBl/C,GACjB,MAAMu+B,EAAmC,mBAAVv+B,EAAuB2xB,EAAkB9xB,KAAMG,GAAS,KACvFH,KAAKo/C,wBAAwB3H,iBAAmB/Y,EAChD,MAAM6gB,EAAyBv/C,KAAKo/C,wBAAwB3H,iBAC5Dz3C,KAAKq/C,kBAC0B,OAA3BE,GAAmCA,IAA2B7gB,EACxDv+B,EACAo/C,EAEd,iBACI,OAAyB,OAArBv/C,KAAKs/C,YAEEt/C,KAAKo/C,wBAAwB19B,WAEjC1hB,KAAKs/C,YAEhB,WACI,OAAOt/C,KAAKo/C,wBAAwB5H,OuDmQ1CgI,CAAkC7D,GAA+BrlB,GAAsB+F,GAAkBgiB,GAAgCH,GAA8B/8B,EAAyB09B,GAA8BjqB,GAAkBM,GAA6Bkf,G2HzUpO,E3HyUwS2K,GAAiCjtB,SAClX3mB,EAeAs0C,G4HvV8C,EAACx0B,EAAyB2D,EAAyBgB,EAAoB2a,EAAoC5U,IACpJ,cAAkC4U,EACrC5hC,YAAY/G,EAAU,IAClB,GAAsC,OAAlC+zB,EACA,MAAM,IAAI9zB,MAAM,gDAEpB,MAAM4iB,EAAqB,IAAIkR,EAA8B/zB,GAE7D,GAA2B,OAAvB6iB,EACA,MAAMmL,IAGV,IAAKpN,EAAmB5gB,EAAQ6gB,aAC5B,MAAM,IAAI5M,UAAU,uBAAuBjU,EAAQ6gB,+EAGvD,QAA2BtX,IAAvBvJ,EAAQunB,YAA4B1E,EAAmB0E,aAAevnB,EAAQunB,WAC9E,MAAMyF,IAEVgI,MAAMnS,EAAoB,GAC1B,MAAM,YAAEhC,GAAgB7gB,GAClB,WAAEunB,GAAe1E,EAkCvB,GAhCAzkB,KAAK86C,aACyC,iBAAnCr2B,EAAmBwI,YACpBxI,EAAmBwI,YACH,aAAhBxK,EACI,IAAM0G,EACU,gBAAhB1G,QAAiDtX,IAAhBsX,EAC7B,IAAM0G,EACU,aAAhB1G,EACI,KAAO0G,EAKuE,IAA3E5kB,KAAK2oB,IAAI,EAAG3oB,KAAK4oB,IAAI,IAAK5oB,KAAKoD,MAAO8a,EAAc0G,EAAc,OAAgBA,EAC3GnpB,KAAK+6C,oBAAsBt2B,EAEgB,uBAAvCkR,EAA8BzsB,MAC9BlJ,KAAKg7C,gBAAkBv2B,EAAmBM,aAC1C/kB,KAAK2rC,sBAAwBlnB,EAAmBmM,mBAChD5wB,KAAKg7C,gBAAgBj5B,KAAK5hB,MAAQ,MAClCH,KAAK2rC,sBAAsB9nB,QAAQ7jB,KAAKg7C,iBAAiBn3B,QAAQY,EAAmBjV,aACpFxP,KAAK2rC,sBAAsBjmB,UAG3B1lB,KAAKg7C,gBAAkB,KACvBh7C,KAAK2rC,sBAAwB,MAEjC3rC,KAAKi7C,OAAS,KAKmB,YAA7Bx2B,EAAmBsS,MAAqB,CACxC/2B,KAAKi7C,OAAS,YACd,MAAMC,EAAc,KACI,cAAhBl7C,KAAKi7C,SACLj7C,KAAKi7C,OAAS,MAElBx2B,EAAmBkN,oBAAoB,cAAeupB,IAE1Dz2B,EAAmBmN,iBAAiB,cAAespB,IAG3D,kBACI,OAAOl7C,KAAK86C,aAEhB,YACI,OAAuB,OAAhB96C,KAAKi7C,OAAkBj7C,KAAKi7C,OAASj7C,KAAK+6C,oBAAoBhkB,MAEzEokB,QAEI,MAAmB,WAAfn7C,KAAK+2B,MACE/2B,KAAK+6C,oBAAoBI,QAAQjoB,MAAK,KACzC,MAAMjI,QAIM,cAAhBjrB,KAAKi7C,SACLj7C,KAAKi7C,OAAS,MAEXj7C,KAAK+6C,oBAAoBI,QAAQjoB,MAAK,KACZ,OAAzBlzB,KAAKg7C,iBAA2D,OAA/Bh7C,KAAK2rC,wBACtC3rC,KAAK2rC,sBAAsB5/B,OAC3B/L,KAAKg7C,gBAAgB72B,aACrBnkB,KAAK2rC,sBAAsBxnB,cAE/B5B,EAAqBviB,UAG7Bo7C,SACI,MAAoB,cAAhBp7C,KAAKi7C,OACE,IAAIv2B,SAAQ,CAACC,EAASyxB,KACzB,MAAMiF,EAAiB,KACnBr7C,KAAK+6C,oBAAoBppB,oBAAoB,cAAe0pB,GACrB,YAAnCr7C,KAAK+6C,oBAAoBhkB,MACzBpS,IAGA3kB,KAAKo7C,SAASloB,KAAKvO,EAASyxB,IAGpCp2C,KAAK+6C,oBAAoBnpB,iBAAiB,cAAeypB,MAG1Dr7C,KAAK+6C,oBAAoBK,SAASjvB,OAAOrV,IAG5C,QAAY3L,IAAR2L,GAAkC,KAAbA,EAAI2J,KACzB,MAAMwK,IAEV,MAAMnU,KAGdwkC,UACI,OAAOt7C,KAAK+6C,oBAAoBO,UAAUnvB,OAAOrV,IAE7C,QAAY3L,IAAR2L,EACA,MAAMmU,IAEV,MAAMnU,O5H6NiB4oC,CAAqCz0B,GAAyB2D,GAAyBgB,GAAoB2a,GAAoC5U,IAEhLgqB,G6H3V+C,EAAC/wB,EAAyBkG,IACpE,CAACpU,EAAkBxf,EAAQioB,KAC9B,GAA6C,OAAzC2L,EACA,MAAM,IAAIjzB,MAAM,uDAEpB,IACI,OAAO,IAAIizB,EAAqCpU,EAAkBxf,EAAQioB,GAE9E,MAAOrS,GAEH,GAAiB,gBAAbA,EAAI5N,KACJ,MAAM0lB,IAEV,MAAM9X,I7H8UsB8oC,CAAsChxB,GAAyBkG,IACjGoT,G8H3V8B,EAAC9O,EAAkBzG,EAAiBgB,EAAsB6nB,EAAgC1T,EAAiC9nB,EAAqD0Z,EAAmCO,KACnP,MAAMthB,EAAQ,GACd,MAAO,CAACnJ,EAAakZ,IAA8BiL,EAAqBnkB,GACnE2kB,OAAO3kB,EAAakZ,EAA2B/P,GAK/Cua,MAAK,IAAMxO,QAAQsP,IAAI/wB,MAAMY,KAAK23C,EAA+B9yB,IAA4BvlB,KAAKm0C,GAAqB3jB,EAAqB2jB,GAAkBnjB,OAAOmjB,EAAkB5uB,EAA2B/P,QAClNua,MAAK,IAAM4U,EAAgCpf,KAC3CwK,MAAM5S,IAGoC,mBAAhCA,EAAYoH,iBACnBgS,EAAkCpZ,GAClCD,EAAoCC,IAG9BqS,EAAgB3S,GAAqD,IAAMA,EAAoDM,MACrI2Z,EAA6C3Z,GAEjD8Y,EAAiBxa,IAAI0B,GACdA,M9HqUQu/B,CAAqBzmB,GAAkBzG,GAAiBgB,GAAsB6nB,GAAgC1T,GAAiC9nB,EAAqD0Z,GAAmCO,IACxP6lB,GlCxVqD,EAACntB,EAAiB1H,EAAyB00B,EAAiCpV,EAAoCrC,IAChK,cAAyCqC,EAC5C5hC,YAAY/G,GACR,MAAM,OAAEV,EAAM,iBAAEwf,EAAgB,WAAEyI,GAAe,IAAK,MAAoBvnB,GACpE8mB,EAA4Bi3B,EAAgCj/B,EAAkBxf,EAAQioB,GAEvFwJ,EAAgB7G,IAAoB,IAAMA,GAAmBpD,MAC9DA,EAA0BkJ,iBAAiB,cAAe,MACtD,IAAIxwB,EAAI,EACR,MAAM2+C,EAAyB16B,IACP,YAAhBrlB,KAAKi7C,SACD75C,EAAI,GACJsnB,EAA0BiJ,oBAAoB,cAAeouB,GAC7D16B,EAAM26B,2BACNhgD,KAAKigD,2BAA2B56B,IAGhCjkB,GAAK,IAIjB,OAAO2+C,GAd+C,IAiB9DnpB,MAAMlO,EAA2BhI,GACjC1gB,KAAKkgD,QAAUh/C,EACflB,KAAKmgD,2BAA6Bz3B,EAClC1oB,KAAKi7C,OAAS,KAElB,aAEI,YAA+C9vC,IAA3CnL,KAAKmgD,2BAA2Bj/C,OACzBlB,KAAKkgD,QAETlgD,KAAKmgD,2BAA2Bj/C,OAE3C,YACI,OAAuB,OAAhBlB,KAAKi7C,OAAkBj7C,KAAKmgD,2BAA2BppB,MAAQ/2B,KAAKi7C,OAE/E/S,iBAKI,MAAoB,YAAhBloC,KAAKi7C,OACEv2B,QAAQ0xB,OAAOnrB,MAE1BjrB,KAAKi7C,OAAS,UACP/S,EAAeloC,KAAKwP,YAAaxP,KAAKmgD,4BAA4B5K,SAAQ,KAC7Ev1C,KAAKi7C,OAAS,KACd14B,EAAqBviB,UAG7BigD,2BAA2B56B,GACH,OAAhBrlB,KAAKi7C,OACLj7C,KAAKmgD,2BAA2Bn2B,cAAc3E,GAG9CyS,YAAW,IAAM93B,KAAKigD,2BAA2B56B,OkC8RnB+6B,CAA4CztB,GAAiB1H,GAAyB00B,GAAiCpV,GAAoCrC,IAEnMmY,GjB1V8C,EAAC/H,EAA6B3lB,EAAiB1H,EAAyB00B,EAAiCzX,IAClJ,cAAkCoQ,EACrC3vC,YAAYrE,EAAGwK,EAAGwxC,GACd,IAAI1+C,EACJ,GAAiB,iBAAN0C,QAAwB6G,IAAN2D,QAAyB3D,IAANm1C,EAC5C1+C,EAAU,CAAEV,OAAQ4N,EAAG4R,iBAAkBpc,EAAG6kB,WAAYm3B,OAEvD,IAAiB,iBAANh8C,EAIZ,MAAM,IAAIzC,MAAM,uCAHhBD,EAAU0C,EAKd,MAAM,OAAEpD,EAAM,iBAAEwf,EAAgB,WAAEyI,GAAe,IAAK,MAAoBvnB,GACpE8mB,EAA4Bi3B,EAAgCj/B,EAAkBxf,EAAQioB,GAEvFwJ,EAAgB7G,IAAoB,IAAMA,GAAmBpD,MAC9DA,EAA0BkJ,iBAAiB,cAAe,MACtD,IAAIxwB,EAAI,EACR,MAAM2+C,EAAyB16B,IACP,YAAhBrlB,KAAKi7C,SACD75C,EAAI,GACJsnB,EAA0BiJ,oBAAoB,cAAeouB,GAC7D16B,EAAM26B,2BACNhgD,KAAKigD,2BAA2B56B,IAGhCjkB,GAAK,IAIjB,OAAO2+C,GAd+C,IAiB9DnpB,MAAMlO,EAA2BhI,GACjC1gB,KAAKkgD,QAAUh/C,EACflB,KAAKmgD,2BAA6Bz3B,EAClC1oB,KAAKi7C,OAAS,KAElB,aAEI,YAA+C9vC,IAA3CnL,KAAKmgD,2BAA2Bj/C,OACzBlB,KAAKkgD,QAETlgD,KAAKmgD,2BAA2Bj/C,OAE3C,YACI,OAAuB,OAAhBlB,KAAKi7C,OAAkBj7C,KAAKmgD,2BAA2BppB,MAAQ/2B,KAAKi7C,OAE/E/S,iBAKI,MAAoB,YAAhBloC,KAAKi7C,OACEv2B,QAAQ0xB,OAAOnrB,MAE1BjrB,KAAKi7C,OAAS,UACP/S,EAAeloC,KAAKwP,YAAaxP,KAAKmgD,4BAA4B5K,SAAQ,KAC7Ev1C,KAAKi7C,OAAS,KACd14B,EAAqBviB,UAG7BigD,2BAA2B56B,GACH,OAAhBrlB,KAAKi7C,OACLj7C,KAAKmgD,2BAA2Bn2B,cAAc3E,GAG9CyS,YAAW,IAAM93B,KAAKigD,2BAA2B56B,OiBsR1Bk7B,CAAqCjI,GAA6B3lB,GAAiB1H,GAAyB00B,GAAiCzX,IAOvKsY,G+HtW0B,EAAC3rB,EAAckB,IAC1CZ,IACJ,MAAMrV,EAAgB+U,EAAapX,IAAI0X,GACvC,OAAOY,EAAqBjW,IAAkBiW,EAAqBZ,I/HmW1CsrB,CAAwB3kC,EAAeia,IAC3D2qB,GgIvWuB,EAACC,EAAgBz6B,IACzCiP,GAAawrB,EAAehiC,IAAIwW,IAAajP,EAAkBiP,GhIsW7CyrB,CAAqBjlC,EAAkB,IACxDklC,GiIxWwB,EAACtkB,EAAiBpG,IAC3ChB,GAAaoH,EAAgB5d,IAAIwW,IAAagB,EAAmBhB,GjIuW9C2rB,CAAsBjlC,EAAmBsa,IAC3D4qB,GkIzWiC,EAAClsB,EAAcK,IACjDC,IACJ,MAAMrV,EAAgB+U,EAAapX,IAAI0X,GACvC,OAAOD,EAA4BpV,IAAkBoV,EAA4BC,IlIsWjD6rB,CAA+BllC,EAAeoZ,IACzE+rB,GAAc,ImI1Wa14B,OAAOoK,EAAiBuuB,EAAkDC,EAAoCC,EAAuDC,EAAgCC,EAAmCC,EAA2CC,EAA0CC,EAAiDC,EAA+CC,EAAsCC,EAAkCC,EAA4BC,EAAmEC,EAAyC/wB,OAC7oB2B,EAAgBuuB,EAAkDA,IAClEvuB,EAAgBwuB,EAAoCA,IACpDxuB,EAAgB0uB,EAAgCA,IAChD1uB,EAAgB2uB,EAAmCA,IACnD3uB,EAAgB6uB,EAA0CA,IAC1D7uB,EAAgB8uB,EAAiDA,IACjE9uB,EAAgB+uB,EAA+CA,IAC/D/uB,EAAgBgvB,EAAsCA,IACtDhvB,EAAgBivB,EAAkCA,IAClDjvB,EAAgBkvB,EAA4BA,IAC5ClvB,EAAgBmvB,EAAmEA,YAC7Dp9B,QAAQsP,IAAI,CAC9BrB,EAAgByuB,EAAuDA,GACvEzuB,EAAgB4uB,EAA2CA,GAC3D5uB,EAAgBovB,EAAyCA,GACzDpvB,EAAgB3B,EAA0BA,MAE/B9R,OAAO3e,GAAWA,InIwVRyhD,CAAyBrvB,GoItWY,CAACmC,GAC5D,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MACM7U,EAD4B,IAAI6U,EAAqC,EAAG,EAAG,OAC7B7P,aAAa,EAAG,EAAG,OAEvE,QAAwC9Z,IAApC8U,EAAkBC,cAClB,OAAO,EAEX,MAAM3D,EAAS,IAAIjI,aAAa,GAChC,IACI2L,EAAkByH,gBAAgBnL,EAAQ,EAAG,GAEjD,MACI,OAAO,EAEX,OAAO,GpIoV4D0lC,CAAuDntB,IqI1W1E,CAACa,GAC9C,KACH,GAAsC,OAAlCA,EACA,OAAO,EAGX,QAAgDxqB,IAA5CwqB,EAA8Brf,gBAA6EnL,IAAlDwqB,EAA8Brf,UAAU6kC,MACjG,OAAO,EAEX,MAAM+G,EAAe,IAAIvsB,EACnBwsB,OAAgDh3C,IAAvB+2C,EAAa/G,MAC5C,IACI+G,EAAa/G,QAEjB,OAGA,OAAOgH,GrIyV0JC,CAAyCzsB,IsItWvI,CAACb,GACjE,KACH,GAA6C,OAAzCA,EACA,OAAOpQ,QAAQC,SAAQ,GAE3B,MAAMwyB,EAAsB,IAAIriB,EAAqC,EAAG,EAAG,OAE3E,OAAO,IAAIpQ,SAASC,IAChB,IAAI09B,GAAY,EAChB,MAAMhH,EAAkBvkC,IAChBurC,IACAA,GAAY,EACZlL,EAAoBjP,iBACpBvjB,EAAQ7N,aAAejB,aAG/B,IAAIoW,EAEJ,IACIA,EAAUkrB,EAELjrB,gBAAgB,MAAM,QAExBmvB,GAEP,MAAOvkC,GACHukC,EAAevkC,QAGH3L,IAAZ8gB,GAEAA,EAAQE,MAAMkvB,OtIuUoNiH,CAA4DxtB,IuI1W1P,CAACa,GAC1C,KACH,GAAsC,OAAlCA,EACA,OAAO,EAEX,IAAIusB,EACJ,IACIA,EAAe,IAAIvsB,EAA8B,CAAElT,YAAa,aAEpE,MACI,OAAO,EAGX,OADAy/B,EAAa/G,SACN,GvI6VsUoH,CAAqC5sB,IwIzWnU,CAACb,GAC7C,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MACM1G,EAD4B,IAAI0G,EAAqC,EAAG,EAAG,OAChC/P,aAC3Ck8B,EAAc7yB,EAAevK,QAAQuK,KAAoBA,EAE/D,OADAA,EAAejK,WAAWiK,GACnB6yB,GxIgW2YuB,CAAwC1tB,IyItWnY,EAACsf,EAAmCtf,IACxFvM,UAEH,GAA0C,OAAtC6rB,EACA,OAAO,EAEX,GAA6C,OAAzCtf,EACA,OAAO,EAEX,MAAMqgB,EAAO,IAAIC,KAAK,CAAC,sGAAuG,CAC1HnzC,KAAM,0CAEJk1C,EAAsB,IAAIriB,EAAqC,EAAG,IAAK,KACvEtY,EAAMO,IAAIs4B,gBAAgBF,GAChC,IAAIsN,GAAmB,EACvB,UACUtL,EAAoBpC,aAAaO,UAAU94B,GACjD,MAAM86B,EAAmB,IAAIlD,EAAkC+C,EAAqB,IAAK,CAAE5vB,gBAAiB,IACtGgwB,EAAaJ,EAAoBvmB,mBACvC0mB,EAAiBE,KAAKlmB,UAAY,IAAOmxB,GAAmB,EAC5DlL,EAAW1zB,QAAQyzB,GACnBC,EAAW7xB,MAAM,SACXyxB,EAAoBjP,iBACrBua,SACK,IAAI/9B,SAASC,GAAYmT,WAAWnT,EAAS,KAG3D,OAGA,QACI5H,IAAIy4B,gBAAgBh5B,GAExB,OAAOimC,GzIqU0dC,CAAgDtO,GAAmCtf,I0IvW9f,CAACA,GACpD,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MACM8M,EADsB,IAAI9M,EAAqC,EAAG,EAAG,OACvB+M,sBAKpD,GAAiD,QAA7CD,EAAwBtiB,iBACxB,OAAO,EAEX,IACIsiB,EAAwBviB,aAAe,EAE3C,MACI,OAAO,EAEX,OAAO,G1ImVolBsjC,CAA+C7tB,I2I1W7kB,CAACA,GAC3D,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MAAMpM,EAA4B,IAAIoM,EAAqC,EAAG,EAAG,OAEjF,YAAuD3pB,IAAnDud,EAA0Bsa,sBAGGta,EAA0Bsa,uBAK3B/gB,OAAOya,WAAa9sB,OAAOgzC,mB3I2VsnBC,CAAsD/tB,I4IzW5qB,CAACA,GACzD,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MAAMqiB,EAAsB,IAAIriB,EAAqC,EAAG,EAAG,OACrEiP,EAAsBoT,EAAoBnT,kBAChDD,EAAoBjjB,OAASq2B,EAAoBlyB,aAAa,EAAG,EAAGkyB,EAAoBhuB,YACxF,IACI4a,EAAoBjjB,OAASq2B,EAAoBlyB,aAAa,EAAG,EAAGkyB,EAAoBhuB,YAE5F,MACI,OAAO,EAEX,OAAO,G5I2VuwB25B,CAAoDhuB,I6IzWhxB,CAACA,GAChD,KACH,GAA6C,OAAzCA,EACA,OAAO,EAEX,MACMiP,EADsB,IAAIjP,EAAqC,EAAG,EAAG,OAC3BkP,kBAChD,IACID,EAAoB1kB,aAAe,EAEvC,MACI,OAAO,EAEX,OAAO,G7I4Vk2B0jC,CAA2CjuB,IAAuC/D,G8I1Wn5B,CAACjZ,GACtC,IAAiB,OAAXA,GAAmBA,EAAOwY,eAAe,mB9IyW66B0yB,CAAiC,I+IzWj7B,CAACrtB,GAC7E,KACH,GAAsC,OAAlCA,EACA,OAAO,EAEX,MAAMusB,EAAe,IAAIvsB,EACzB,IAEI,OADAusB,EAAahI,wBAAwB,IAAIC,cAClC,EAEX,MAAOrjC,GACH,OAAO,I/I8V8/BmsC,CAAwEttB,IgJvW5hC,CAACb,GACnD,KACH,GAA6C,OAAzCA,EACA,OAAOpQ,QAAQC,SAAQ,GAE3B,MAAM+D,EAA4B,IAAIoM,EAAqC,EAAG,EAAG,OAKjF,QAAqD3pB,IAAjDud,EAA0B6nB,mBAC1B,OAAO7rB,QAAQC,SAAQ,GAG3B,QAAuDxZ,IAAnDud,EAA0Bsa,qBAC1B,OAAOte,QAAQC,SAAQ,GAE3B,MAAMklB,EAAqBnhB,EAA0Bsa,uBAC/CkgB,EAAex6B,EAA0B6nB,qBAM/C,OALA1G,EAAmBxqB,aAAe,EAClCwqB,EAAmB5nB,OAAO9hB,MAAQ,EAClC+iD,EAAa7jC,aAAe,EAC5BwqB,EAAmBnkB,QACnBmkB,EAAmBhmB,QAAQq/B,GAAcr/B,QAAQ6E,EAA0BlZ,aACpEkZ,EAA0Bwf,iBAAiBhV,MAAMpS,GAA2C,IAAhCA,EAAOP,eAAe,GAAG,MhJ+UqhC4iC,CAA8CruB,IAAuC9D,IgFvWjqC,IAACsc,I,8lBiEH9C,aAqBA,aAIE,WAAY8V,EAAoBC,GAC9BrjD,KAAKojD,MAAQA,EACbpjD,KAAKqjD,aAAeA,EACpBrjD,KAAKsjD,MAAQ,KA+BjB,OA5BE,YAAAC,KAAA,WACQ,IAGFC,EAHIJ,EAAwBpjD,KAAnB,MAAEqjD,EAAiBrjD,KAAL,aACrBsjD,EAAQF,EAAMK,gBAIpB,GAAIH,EAAO,CACT,IAAMI,EAAgC,IAAI,EAAAC,cACxCN,EACAC,GAEFE,EAAW,IAAII,EAAcR,EAAOC,EAAc,CAAEK,cAAa,SAEjEF,EAAW,IAAIK,EAAqBT,EAAOC,GAG7CrjD,KAAKojD,MAAMU,WAAWN,IAGxB,YAAAO,MAAA,aACA,YAAAC,OAAA,aACA,YAAAC,KAAA,aACA,YAAAroB,OAAA,aACA,YAAAsoB,aAAA,aAEA,YAAA3sC,SAAA,WACE,MAAO,WAEX,EAtCA,GAAa,EAAA4sC,eAwCb,iBAOE,WAAYf,EAAYC,GACtBrjD,KAAKojD,MAAQA,EACbpjD,KAAKokD,YAAchB,EAAMgB,YACzBpkD,KAAKqjD,aAAeA,EACpBrjD,KAAKqkD,QAAU,KA8FnB,OA3FE,YAAAd,KAAA,SAAKe,QAAA,IAAAA,MAAA,GACG,MAIFtkD,KAHFqkD,EAAO,UACPE,EAAe,kBACNC,EAAO,gBAGlB,IAAIH,EAAJ,CAEA,GAAIE,EAAiB,CACnB,IAAME,EAAoBF,EAAkB,IAQ5C,OAPA7rC,QAAQxI,IACN,sBAAsBs0C,EAAO,yBAAyBC,EAAkBC,QACtE,GACD,MAGH1kD,KAAK2kD,kBAAkBJ,GAChBE,EAKT,IAAMG,EAA8B,IAAhBN,EAGpB,OAFAtkD,KAAK2kD,kBAAkBC,GAEhBN,IAGT,YAAAP,MAAA,WACE/jD,KAAKukD,gBAAkBvkD,KAAK6kD,aAC5BnsC,QAAQxI,IACN,qBAAqBlQ,KAAKojD,MAAMoB,QAAO,0BACrCxkD,KAAKukD,gBAAkB,KACvBG,QAAQ,GAAE,MAIhB,YAAAG,WAAA,WACE,IAAMC,EAAM,IAAIC,KACV,EAA6D/kD,KAA3DqkD,EAAO,UAAE,IAAAW,kCAA0B,IAAG,EAAAF,EAAG,EAAEV,EAAW,cAE9D,OAAIC,GACFD,EAAYa,aAAaZ,UAElBrkD,KAAKglD,2BAEYzgD,KAAK2oB,IAC3B83B,EAA6BF,EAAII,UACjC,IAKG,GAGT,YAAAlB,OAAA,WACEhkD,KAAK6kD,oBACE7kD,KAAKukD,iBAGd,YAAAI,kBAAA,SAAkBQ,GAAlB,WACEnlD,KAAKqkD,QAAUrkD,KAAKokD,YAAYtsB,YAC9B,WAAM,SAAKstB,iBACXD,GAEFnlD,KAAKglD,4BAA6B,IAAID,MAAOG,UAAYC,GAG3D,YAAAC,aAAA,WACE1sC,QAAQ2sC,KAAK,gBAAgBrlD,KAAI,sCAGnC,YAAAikD,KAAA,WACEjkD,KAAKgkD,SACLhkD,KAAKolD,gBAGP,YAAAxpB,OAAA,WACEljB,QAAQxI,IAAI,iCAGd,YAAAo1C,gBAAA,WACQ,IAAElC,EAAwBpjD,KAAnB,MAAEqjD,EAAiBrjD,KAAL,aACrBulD,EAAe,IAAIpB,EAAaf,EAAOC,GAC7CD,EAAMU,WAAWyB,IAInB,YAAArB,aAAA,SAAasB,KACf,EAzGA,GA2GA,cAEE,WAAYpC,EAAYC,GAAxB,MACE,YAAMD,EAAOC,IAAa,K,OAC1B,EAAKoC,eAAiB,EAAKpC,aAAaqC,c,EAgB5C,OApB2B,OAOzB,YAAAnC,KAAA,WACE,YAAMA,KAAI,UAACvjD,KAAKylD,iBAGlB,YAAAL,aAAA,WACEplD,KAAKslD,mBAGP,YAAA/tC,SAAA,WACE,MAAO,YAAYvX,KAAKylD,eAAef,QAAQ,GAAE,MAGnD,YAAAR,aAAA,aACF,EApBA,CAA2ByB,GAsB3B,cAEE,WACEvC,EACAC,EACA,G,IAAEK,EAAa,gBAHjB,EAKE,YAAMN,EAAOC,IAAa,K,OAC1B,EAAKK,cAAgBA,E,EAiCzB,OAzC4B,OAW1B,YAAAH,KAAA,WACQ,IACJH,EAEEpjD,KAFG,MACY4lD,EACf5lD,KAD6B,6BAE3B6lD,EAAyB,YAAMtC,KAAI,UAACqC,GAErCC,IAEWzC,EAAM0C,OAAOD,IAEf7lD,KAAKslD,oBAGrB,YAAAvB,MAAA,WACE,YAAMA,MAAK,WACX/jD,KAAKojD,MAAM2C,cAGb,YAAAX,aAAA,WACQ,MAAyCplD,KAAvCojD,EAAK,QAAEC,EAAY,eAAEK,EAAa,gBAC1CN,EAAMU,WAAW,IAAIkC,EAAa5C,EAAOC,EAAc,CAAEK,cAAa,MAGxE,YAAAnsC,SAAA,WAEI,MACEvX,KAAI,cADW4lD,EAAc,iBAEjC,MAAO,mBAFmC,UAET,KAAKA,EAAelB,QAAQ,GAAE,MAEnE,EAzCA,CAA4BiB,GA2C5B,cAEE,WAAYvC,EAAYC,EAAmB,G,IAAEK,EAAa,gBAA1D,EACE,YAAMN,EAAOC,IAAa,K,OAC1B,EAAKK,cAAgBA,E,EA+BzB,OAnC2B,OAOzB,YAAAH,KAAA,WACQ,IACJH,EAEEpjD,KAFG,MACYimD,EACfjmD,KADiC,iCAErC,YAAMujD,KAAI,UAAC0C,GACX7C,EAAM8C,aAIR,YAAAnC,MAAA,WACE,YAAMA,MAAK,WACX/jD,KAAKojD,MAAM2C,cAGb,YAAAxuC,SAAA,WAEI,MACEvX,KAAI,cACR,MAAO,kBAFmB,UAEM,KAFc,qBAEU0kD,QAAQ,GAAE,MAGpE,YAAAU,aAAA,WACQ,MAAyCplD,KAAvCojD,EAAK,QAAEC,EAAY,eAAEK,EAAa,gBAC1CN,EAAMU,WACJ,IAAIqC,EAAe/C,EAAOC,EAAc,CAAEK,cAAa,MAG7D,EAnCA,CAA2BiC,GAqC3B,cAEE,WACEvC,EACAC,EACA,G,IAAEK,EAAa,gBAHjB,EAKE,YAAMN,EAAOC,IAAa,K,OAC1B,EAAKK,cAAgBA,E,EAkCzB,OA1C6B,OAW3B,YAAAH,KAAA,WACQ,IACJH,EAEEpjD,KAFG,MACYomD,EACfpmD,KAD8B,8BAE5BqmD,EAAmB,YAAM9C,KAAI,UAAC6C,GAE/BC,IAEDjD,EAAMkD,QAAQD,GAChBjD,EAAM8C,YAENlmD,KAAKslD,oBAIT,YAAAvB,MAAA,WACE,YAAMA,MAAK,WACX/jD,KAAKojD,MAAM2C,cAGb,YAAAX,aAAA,WACEplD,KAAKojD,MAAMU,WAAW,IAAIyC,EAAavmD,KAAKojD,MAAOpjD,KAAKqjD,gBAG1D,YAAA9rC,SAAA,WAEI,MACEvX,KAAI,cACR,MAAO,oBAFmB,UAEQ,KAFS,kBAEY0kD,QAAQ,GAAE,MAErE,EA1CA,CAA6BiB,GA8C7B,cAIE,WAAYvC,EAAYC,G,OACtB,YAAMD,EAAOC,IAAa,KAoB9B,OAxBU,OAOR,YAAAE,KAAA,WACE,YAAMA,KAAI,UAXqC,KAcjD,YAAAW,aAAA,SAAasB,QAAA,IAAAA,MAAA,IACX,YAAMtB,aAAY,UAACsB,GACnBxlD,KAAKgkD,SACLhkD,KAAKslD,mBAGP,YAAAF,aAAA,WACEplD,KAAKslD,mBAGP,YAAA/tC,SAAA,WACE,MAAO,yBAEX,EAzBA,CACUouC,GA0BG,EAAAa,sBAAwB,SAACpD,EAAYC,GAMhD,OAFiB,IAHYA,EAAY,iBAEHkD,EAAepC,GACrBf,EAAOC,K,k+CCzVzC,IAAMoD,EACJ,gEAOF,aASE,WAAY3uC,EAAgB4uC,GAE1B1mD,KAAK2mD,QAAU7uC,EAAO8uC,OACtB5mD,KAAK6mD,WAAaH,EAClB1mD,KAAK8mD,WAAa,GAyHtB,OAlHQ,YAAArpC,IAAN,SAAaspC,EAAcx1B,EAAc3vB,G,YAAA,IAAAA,MAAA,I,mFAGhC,OAFPA,EAAQmN,OAAS,MACjBnN,EAAQolD,YAAc,wBACf,GAAMhnD,KAAKinD,KAAQF,EAAMx1B,EAAM3vB,I,OAAtC,MAAO,CAAP,EAAO,kBAOH,YAAAslD,KAAN,SAAcH,EAAcx1B,EAAc3vB,G,YAAA,IAAAA,MAAA,I,mFAEjC,OADPA,EAAQmN,OAAS,OACV,GAAM/O,KAAKinD,KAAQF,EAAMx1B,EAAM3vB,I,OAAtC,MAAO,CAAP,EAAO,kBAOH,YAAAulD,MAAN,SAAeJ,EAAcx1B,EAAc3vB,G,YAAA,IAAAA,MAAA,I,mFAElC,OADPA,EAAQmN,OAAS,QACV,GAAM/O,KAAKinD,KAAQF,EAAMx1B,EAAM3vB,I,OAAtC,MAAO,CAAP,EAAO,kBAWH,YAAAqlD,KAAN,SACEF,EACAx1B,EACA61B,G,YADA,IAAA71B,MAAA,I,6GAeA,IAAS3uB,KAZH4Z,EAAM,IAAIO,IAAI/c,KAAK6mD,WAAaE,GAEhCC,EAAwBI,EAAU,YAArBr4C,EAAWq4C,EAAU,OAClCC,EAA2B,CAC/Bt4C,OAAM,EACNu4C,KAAM,OACNC,KAAM,GACNC,QAAS,IAGLC,EAAc,IAAIC,gBAAgB,IAExBN,EACdK,EAAYE,OAAO/kD,EAAKwkD,EAAWxkD,IAKrC,OAFM4kD,EAAkC,GAEhCz4C,GAEN,IAAK,MACL,IAAK,OACH,IAASnM,KAAO2uB,EAAMk2B,EAAYE,OAAO/kD,EAAK2uB,EAAK3uB,IACnD,MAEF,QACMglD,EAAqB,GACpBZ,IAEHA,EAAc,mBACdY,EAAaC,KAAKC,UAAUv2B,IAGX,uBAAfy1B,IACFQ,EAAQ,gBAAkBR,GAE5BK,EAAYE,KAAOK,EAKvBprC,EAAIurC,OAASN,EAAYlwC,WAErBvX,KAAK8mD,aACPU,EAAuB,cAAIxnD,KAAK8mD,YAGlCO,EAAYG,QAAUA,E,iBAKT,O,sBAAA,GAAMxQ,MAAMx6B,EAAIjF,WAAY8vC,I,cAAvCzf,EAAW,S,aAGX,M,WADAlvB,QAAQqR,MAAM,2BAA4B,EAAMM,SAC1Co8B,E,OAGR,IAAK7e,EAASqP,GAEZ,MADAv+B,QAAQqR,MAAM,6BAA8B6d,EAASogB,QAC/CvB,E,iBAIO,O,sBAAA,GAAM7e,EAASqgB,Q,OAC5B,MAAO,CAAP,EADa,U,OAIb,M,WADAvvC,QAAQqR,MAAM,sCAAuC,GAC/C08B,E,yBAMV,sBAAI,wBAAS,C,IAAb,SAAcyB,GACZloD,KAAK8mD,WAAa,SAASoB,G,gCAE/B,EAtIA,GAAa,EAAAC,a,ysDCNA,EAAAC,KAGP,WAEN,iBAGE,WAAYC,EAAmB,G,IAAEC,EAAS,YACxCtoD,KAAKuoD,WAAaF,EAClBroD,KAAKwoD,WAAaF,EAWtB,OARE,YAAA/wC,SAAA,WACE,MAAO,sBAAsBvX,KAAKuoD,WAAU,KAGxC,YAAA1kC,QAAN,SAAiB0N,G,YAAA,IAAAA,MAAA,I,yFAER,OADD3vB,EAAU,EAAH,KAAQ2vB,GAAI,CAAEk3B,WAAYzoD,KAAKuoD,aACrC,GAAMvoD,KAAKwoD,WAAW/qC,IAAO,EAAA2qC,KAAMxmD,I,OAA1C,MAAO,CAAP,EAAO,kBAEX,EAhBA,GAAa,EAAA8mD,S,22BCTb,YACA,SAGA,SACA,SAGa,EAAAC,iBAOR1oD,OAAO2oD,OAAO,CACjBC,SAAS,EACTC,QAAS,EACTC,OAAQ,EACRC,OAAQ,IACRC,QAAS,MAGX,IAAMC,EAAe,WAAc,SAAAP,iBAAiBI,QA2BpD,SAAgBI,EACdC,EACA,QADA,IAAAA,MAAA,I,IACKC,EAAS,IAAd,IAEA,OAAI,EAAAC,QAAQF,GAAiBF,EAEtB,SAAC5F,EAAmB,GAGzB,I,IAH8BiG,EAAW,IAAhB,IACnBC,EAAQ,GAEK,MAAAJ,EAAA,eAAS,CAAvB,IACCK,GAAO3rC,EADE,MACKwlC,EAAO,EAAF,KAAO+F,GAAcE,IAE5C,GAAIE,IAAS,EAAAd,iBAAiBE,QAAS,OAAOY,EAE9CD,EAAM9+C,KAAK++C,GAKb,OADED,EAAME,MAAK,SAACC,GAAM,OAAAA,IAAM,EAAAhB,iBAAiBG,YAAYU,EAAM,IAOjE,SAASI,EACPtG,EACA,G,IACEuG,EAAa,gBAOf,OANe,kBAMU,EAAAC,cAAcC,UAAYF,GAAiBvG,EAnCtE,mBAsCA,IAAM0G,EAA4B,SAACC,EAAaC,GAC9C,iBAASD,EAAMC,EAAM,CAAEplD,MAAO,YA6EhC,SAAgBqlD,IACd,OAAO,SAAC7G,EAAmB,G,IAAE8G,EAAY,eACvC,GAAI,EAAAd,QAAQc,GAAe,OAAO,EAAAzB,iBAAiBI,OAInD,IAFQ,MAAkCzF,EAAK,QAE3B,WAFY,IAAG,KAAE,EAEjB,eAAiB,CAAhC,IAAM+G,EAAK,KACd,GAAID,EAAa7oC,SAAS8oC,GAAQ,OAAO,EAAA1B,iBAAiBI,OAG5D,OAAO,EAAAJ,iBAAiBE,SAK5B,SAAgByB,IACd,OAAO,SACLhH,EACA,G,IAAE,IAAAiH,sBAAc,IAAG,IAAC,EAAE,IAAAC,0BAAkB,IAAG,WAAQ,EAE3CC,EAA8CnH,EAAK,gBAAlCoH,EAA6BpH,EAAK,cAAnBqH,EAAcrH,EAAK,UAE3D,IAAKmH,IAAoBC,EAAe,OAAO,EAAA/B,iBAAiBE,QAChE,GACE4B,GAAmBF,GACnBG,GAAiBH,GAChBI,GAAaA,EAAY,EAE1B,OAAO,EAAAhC,iBAAiBE,QAE1B,IAAM+B,EAAkBJ,EAAmBlwC,cAE3C,OAAO,EAAAquC,iBAAiBiC,IAAoB,EAAAjC,iBAAiBG,SAKjE,SAAgB+B,IACd,OAAO,SACLvH,EACA1hD,GAKQ,IAAAkpD,EAAUxH,EAAK,MAEvB,IAAMwH,IAASlB,EAA+BtG,EAAO1hD,GACnD,OAAO,EAAA+mD,iBAAiBG,QAElB,IAAAe,EAAkBjoD,EAAO,cAEjC,OAAI,UAAsBioD,EAAeiB,GAChC,EAAAnC,iBAAiBK,OAEjB,EAAAL,iBAAiBE,SAjIjB,EAAAkC,oBACX,WACA,gBACEzH,EACA1hD,GAMA,GAAIA,EAAQopD,gBAAkB,EAAAlB,cAAcC,SAC1C,OAAO,EAAApB,iBAAiBI,OAE1B,IAAKa,EAA+BtG,EAAO1hD,GACzC,OAAO,EAAA+mD,iBAAiBG,QAElB,IAAemC,EAAuB3H,EAAK,cAC3CuG,EAAmCjoD,EAAO,cAA3BspD,EAAoBtpD,EAAO,gBAElD,IAAKqpD,EACH,MAAM,IAAIppD,MAAM,oCAMlB,OALiBmoD,EACfH,EACAoB,GAGaC,EACN,EAAAvC,iBAAiBK,OAEjB,EAAAL,iBAAiBE,UAOjB,EAAAsC,qBAAuB,SAClC7H,EACA1hD,GAOA,GAAIA,EAAQwpD,gBAAkB,EAAAtB,cAAcC,SAC1C,OAAO,EAAApB,iBAAiBI,OAE1B,IACGa,EAA+BtG,EAAO,CACrC0H,cAAeppD,EAAQwpD,cACvBvB,cAAejoD,EAAQioD,gBAGzB,OAAO,EAAAlB,iBAAiBG,QAElB,IAAAe,EAAoCjoD,EAAO,cAA5BypD,EAAqBzpD,EAAO,QAAnB0pD,EAAY1pD,EAAO,QAEnD,QAAgBuJ,IAAZkgD,QAAqClgD,IAAZmgD,EAC3B,OAAO,EAAA3C,iBAAiBG,QAElB,IAAAyC,EAAkBjI,EAAK,cAE/B,IAAKiI,EAAe,MAAM,IAAI1pD,MAAM,+BACpC,IAAMiE,EAAWkkD,EAA0BH,EAAe0B,GAE1D,OAAIzlD,GAAYulD,GAAWvlD,GAAYwlD,EAC9B,EAAA3C,iBAAiBK,OAEjB,EAAAL,iBAAiBE,SAK5B,kBAeA,qBAsBA,qBAwBa,EAAA2C,kBACX,WACA,gBAAClI,EAAmB,G,IAAE,IAAAmI,sBAAc,IAAG,MAAG,EAChCC,EAAmBpI,EAAK,eAEhC,OAAKoI,IAGF,IAAI3G,MAAOG,WACgB,iBAAlBwG,EACJA,EACAA,EAAexG,YACrB,KAE6BuG,EACtB,EAAA9C,iBAAiBE,QAEjB,EAAAF,iBAAiBI,OAZE,EAAAJ,iBAAiBK,SAgBpC,EAAA2C,gBACX,WACA,gBACErI,EACA,G,IAAEsI,EAAS,YAAEC,EAAO,UAEpB,OAAID,GAAaC,IACND,GAAatI,EAAMwI,SAAYF,MACpCC,GAAWvI,EAAMwI,SAAYD,GAC7B,EAAAlD,iBAAiBK,OACjB,EAAAL,iBAAiBE,QAEd,EAAAF,iBAAiBI,SAKjB,EAAAgD,4BAA8B5C,EAAe,CA7O1D,SACEC,EACA,QADA,IAAAA,MAAA,I,IACKC,EAAS,OA6Od2C,EA7OA,IAEA,OAAI,EAAA1C,QAAQF,GAAiBF,EAEtB,SAAC5F,EAAmB,GACzB,I,IAD8BiG,EAAW,IAAhB,IACJ,MAAAH,EAAA,eAAS,CAAzB,IACCK,GAAO3rC,EADI,MACGwlC,EAAO,EAAF,KAAO+F,GAAcE,IAC5C,GACEE,IAAS,EAAAd,iBAAiBE,SAC1BY,IAAS,EAAAd,iBAAiBG,QAE1B,OAAOW,EAIX,OAAO,EAAAd,iBAAiBE,SA8N1BmD,CAAe,CACb1B,IACAO,IAEA1B,EAAe,CACb,EAAA4B,sBAEA,EAAAI,2BAKJ,EAAAK,oBAEArB,IACA,EAAAwB,qB,4qBC1RF,aACA,SACA,SA4DA,aAOE,WAAY,G,IACV,IAAAM,cAAM,IAAG,KAAE,EACX,IAAAC,mBAAW,IAAG,KAAE,EAChB,IAAAC,mBAAW,IAAG,IAAAJ,4BAA2B,EACzC,IAAAK,mBAAW,IAAG,KAAE,EAChB,IAAA/C,iBAAS,IAAG,KAAE,EAWd,GAHArpD,KAAKisD,OAASA,EACdjsD,KAAKqsD,aAAaJ,EAAQC,GAEQ,iBAAvB7C,EAAUiD,SACnB,MAAM,IAAIzqD,MAAM,qCAClB7B,KAAKusD,YAAc,IAAI,EAAAC,YAAY,CACjCJ,YAAW,EACXE,SAAUjD,EAAUiD,WAEtBtsD,KAAKysD,cAAgB,GACrBzsD,KAAKqpD,UAAYA,EACjBrpD,KAAKmsD,YAAcA,EACnBnsD,KAAK0sD,aA8ET,OA3EE,YAAAL,aAAA,SAAaJ,EAA2BC,QAA3B,IAAAD,MAAA,SAA2B,IAAAC,MAAA,IACtClsD,KAAKisD,OAASA,EAAO9oD,IAnFK,SAAC+oD,GAC7B,IAAMS,EAAmBT,EAAYljC,QACnC,SAAC4jC,EAA2BC,G,MAA4B,cACnDD,KAAW,MACbC,EAAWC,UAAWD,EAAU,MAEnC,IAGF,OAAO,SAACvJ,GAEJ,MAGEA,EAAK,WAHKyJ,OAAsB,IAAG,IAAC,EACtC,EAEEzJ,EAAK,SAFG0J,OAAsB,IAAG,IAAC,EAC9BC,EACJ3J,EAAK,KAEH4J,EAAqBF,EAAyBD,EAGpD,IAAKE,EAAU,MAAM,IAAIprD,MAAM,2BAC/B,IAAMsrD,EAAS,EAAAC,cAAcH,GAEvBI,EAAc,KAClB9B,cAAe,EAAA+B,eAAe,CAC5BC,SAAUjK,EAAMiK,UAAY,EAC5BC,UAAWlK,EAAMkK,WAAa,IAEhC7C,UAAW,EACXuC,mBAAkB,EAClBF,uBAAsB,EACtBD,uBAAsB,GACnBzJ,GAAK,CACRwI,QAASxI,EAAMwI,QAAU,IAAI/G,KAAKzB,EAAMwI,cAAW3gD,EACnDsiD,KAAMN,IAGFN,EAAaF,EAAiBrJ,EAAMt+C,IAO1C,OALI6nD,IACFQ,EAAe5C,gBAAkBoC,EAAWnnC,MAC5C2nC,EAAe3C,cAAgBmC,EAAWa,KAGrCL,GAwCkBM,CAAsBzB,KAGjD,YAAA0B,aAAA,SACExK,EACA,GAFF,WAII,GADsB,iBACtB,EAAAyK,wBAAe,IAAG,KAAE,EACjBtE,EAAW,IAHhB,sCASMF,EAAY,EAAH,OACVrpD,KAAKqpD,WACLjG,EAAMiG,WACNE,GAEL7wC,QAAQxI,IACN,qBAAqBkzC,EAAK,SACxBpjD,KAAKisD,OAAO/qD,OAAM,cACN2mD,KAAKC,UAAUuB,IAE/B,IAAMyE,EAAe9tD,KAAKisD,OAAOjjC,QAC/B,SAAC+kC,EAAsBzK,GACrB,GAAIuK,EAAgBtsC,SAAS+hC,GAAQ,OAAOyK,EAC5C,IAAMtE,EAAqB,EAAK0C,YAAY7I,EAAO+F,GASnD,OAPII,IAEFsE,EAAStE,GAAQsE,EAAStE,IAAS,GAEnCsE,EAAStE,GAAM/+C,KAAK44C,IAGfyK,IAET,IAGIC,EAAgB/tD,OAAOyC,KAAKorD,GAAc3qD,KAAI,SAACmB,GACnD,OAAAsL,OAAOq+C,SAAS3pD,MAGlB,GAAI0pD,IAAkB,GAAtB,CAKA,IAKME,EAAiBJ,EALIE,EAAchU,OAAO,KAKW,GAC3DkU,EAAelU,MACb,SAAC11C,EAAewK,GAAkB,OAAAA,EAAE67C,UAAarmD,EAAEqmD,aAGrD,IAAMwD,EAAYD,EAAe5wB,MAGjC,OAFI6wB,GAAWA,EAAUxD,YAElBwD,EAjBLz1C,QAAQ2sC,KAAK,4BAoBjB,YAAAqH,WAAA,WACE1sD,KAAKusD,YAAYvS,KAAKh6C,KAAKisD,SAG7B,YAAArtC,IAAA,SAAI0kC,GACFtjD,KAAKisD,OAAOvhD,KAAK44C,GACjBtjD,KAAK0sD,cAET,EA9GA,GAAa,EAAA0B,a,uGC9Db,aAEA,SAOA,aAGE,WAAY,G,IACV,IAAAhC,mBAAW,IAAG,KAAE,EAChB,IAAAE,gBAAQ,IAAG,WAAQ,EAKf,EAAAhD,QAAQ8C,GACVpsD,KAAKosD,YAAc,CAACiC,EAAqBC,qBAAqBhC,IAG9DtsD,KAAKosD,YAA6BA,EAjBfjpD,KAAI,SAAC+F,GAAS,OAAAmlD,EAAqBnlD,MA0B5D,OAHE,YAAA8wC,KAAA,SAAKiS,GACHjsD,KAAKosD,YAAYzpD,SAAQ,SAAC4rD,GAAe,OAAAA,EAAWtC,OAExD,EAvBA,GAAa,EAAAO,e,m+CCqBb,IAEA,aAGE,WAAYnE,EAAmBzmD,GAC7B5B,KAAKuoD,WAAaF,EAClBroD,KAAKwoD,WAAa5mD,EAAQ0mD,UAa9B,OAVE,YAAA/wC,SAAA,WACE,MAAO,2BAA2BvX,KAAKuoD,WAAU,KAG7C,YAAA1kC,QAAN,SAAc0N,G,YAAA,IAAAA,MAAA,I,mFAIL,OAHPA,EAAKk3B,WAAazoD,KAAKuoD,WACvBh3B,EAAKi9B,QAAS,EAEP,GAAMxuD,KAAKwoD,WAAW/qC,IAlBZ,gBAkBiD8T,I,OAAlE,MAAO,CAAP,EAAO,kBAEX,EAlBA,GAAa,EAAAk9B,c,i+CC3Bb,iBAYE,WACEC,EACApG,EACAqG,EACAC,GAEA5uD,KAAK6uD,YAAc,YACnB7uD,KAAK8uD,WAAaJ,EAClB1uD,KAAKwoD,WAAaF,EAClBtoD,KAAK+uD,aAAeJ,EACpB3uD,KAAKgvD,WAAaJ,EAwFtB,OApFE,YAAAr3C,SAAA,WACE,MAAO,YAAYvX,KAAKivD,UAKpB,YAAAprC,QAAN,W,gFAKE,OAJI0N,EAAO,CACT29B,WAAYlvD,KAAK8uD,YAGZ,CAAP,EAAO9uD,KAAKwoD,WACTtB,KAAqB,cAAe31B,GACpC2B,MAAK,SAAC3B,GACL,EAAKs9B,YAAct9B,EAAKvsB,cAQxB,YAAAmqD,OAAN,SACElX,EACAmX,EACA79B,G,YAAA,IAAAA,MAAA,I,iGAOA,OAAKvxB,KAAK6uD,aAMNQ,EAAW,IAAIC,SACfntD,EAAoC,GAItCA,EAHGovB,EAAKg8B,UAAah8B,EAAKi8B,UAGZ,CACZD,SAAUh8B,EAAKg8B,SACfC,UAAWj8B,EAAKi8B,WAJJxtD,KAAK+uD,aAAaQ,gBAOlC72C,QAAQxI,IAAI/N,GAEZktD,EAAS1H,OAAO,aAAc3nD,KAAK8uD,WAAWv3C,YAC9C83C,EAAS1H,OAAO,OAAQ1P,GACxBoX,EAAS1H,OAAO,WAAYxlD,EAAYorD,SAAUh2C,YAClD83C,EAAS1H,OAAO,YAAaxlD,EAAYqrD,UAAWj2C,YAEhDga,EAAKi+B,SACPH,EAAS1H,OAAO,UAAWp2B,EAAKi+B,SAE9Bj+B,EAAKk+B,YACPJ,EAAS1H,OAAO,aAAcp2B,EAAKk+B,YAGjC1I,EAAO,cAAc/mD,KAAK6uD,YAAW,IAEzCn2C,QAAQg3C,KAAK,aAAaN,EAAQ,gBAAgBrI,GAE9CnlD,EAAU,CACZolD,YAAa,uBAGH,GAAMhnD,KAAKwoD,WAAWrB,MAChCJ,EACAsI,EACAztD,KAxCO,CAAP,EAAO8iB,QAAQ0xB,OACb,6E,UAoCEuZ,EAAM,SAKZj3C,QAAQg3C,KAAK,aAAcC,IACvBA,EAAIC,OAAJ,YACF,MAAM,IAAI/tD,MAAM8tD,EAAIC,Q,OAGpB,SAAM5vD,KAAKgvD,WAAWa,mB,OACtB,OADA,SACO,CAAP,EAAOF,WAGb,EA9GA,GAAa,EAAAG,Y,uGCLb,aACA,SAKMC,EAAsC,CAC1CxC,SAAU,WACVC,WAAY,YAIRwC,EAAiC,CACrCC,oBAAoB,EACpBC,QAV+B,EAW/BC,WAAY3vD,KAIR4vD,EAAqC,CACzCH,oBAAoB,EACpBC,QAAS1vD,IACT2vD,WAAY,GAOd,aAgBE,WAAYp4C,EAAgCnW,GAC1C5B,KAAKqwD,WAAat4C,EAEV,IAAAu4C,EAAiC1uD,EAAO,cAAzBopD,EAAkBppD,EAAO,cAC1C2uD,EAAgBD,GAElBP,EAEJ/vD,KAAKwwD,2BAA6B9rC,QAAQC,QAAQ4rC,GAClDvwD,KAAKswD,cAAgBC,EACrBvwD,KAAKywD,YAAcF,EACnBvwD,KAAK0wD,YAAc34C,EAAU24C,YAC7B1wD,KAAK2wD,UACH54C,EAAU24C,aAAe1F,IAAkB,EAAAlB,cAAc8G,UAC3D5wD,KAAK6wD,eAAiB,aACtB7wD,KAAK8wD,YAAc,KA2FvB,OAtFE,YAAAC,QAAA,WACE/wD,KAAK2wD,WAAY,EACb3wD,KAAK8wD,cACPp4C,QAAQxI,IAAI,8BAA+BlQ,KAAK8wD,aAChD9wD,KAAK0wD,YAAYM,WAAWhxD,KAAK8wD,oBAC1B9wD,KAAK8wD,cAKhB,YAAAv5C,SAAA,WACE,MAAO,yBAAyBvX,KAAK2wD,UAAS,KAIhD,YAAApB,cAAA,WACE,OAAOvvD,KAAKywD,aAGd,YAAA5sC,QAAA,SAAQotC,GACNjxD,KAAK6wD,eAAiBI,EAElBjxD,KAAK2wD,WACP3wD,KAAKkxD,UAQT,YAAAA,OAAA,sBACE,IAAIlxD,KAAK2wD,YAAa3wD,KAAK8wD,YAA3B,CAIM,IACJR,EAEEtwD,KAFW,cACC0wD,EACZ1wD,KADuB,uBAG3BA,KAAK2wD,WAAY,EAEjB,EAAAx1C,OAAOjL,IAAI,mCAEXlQ,KAAKwwD,2BAA6B,IAAI9rC,SAAQ,SAACC,GAC7C+rC,EAAYS,oBACV,SAACC,GACS,IAAA5tD,EAAW4tD,EAAe,OAClC,EAAKX,YAAcjtD,EACnB,EAAA2X,OAAOu0C,KAAK,gCAAiClsD,GAC7C,EAAKqtD,eAAertD,GACpBmhB,EAAQnhB,MAEV,SAACumB,GACC,EAAA5O,OAAOkqC,KACL,sCAAsCt7B,EAAMM,QAAO,WAAWN,EAAMtJ,KAAI,wEAE1EkE,EAAQ2rC,KAEVN,MAIJhwD,KAAK8wD,YAAcJ,EAAYW,eAC7B,SAACC,GACS,IAAA9tD,EAAW8tD,EAAe,OAClC,EAAKb,YAAcjtD,EACnB,EAAA2X,OAAOu0C,KAAK,gCAAiClsD,GAC7C,EAAKqtD,eAAertD,MAEtB,SAACumB,GACC,SAAA5O,OAAOkqC,KACL,wCAAwCt7B,EAAMM,QAAO,WAAWN,EAAMtJ,KAAI,OAE9E2vC,KAQJ,YAAAmB,0BAAA,WACE,OAAOvxD,KAAKwwD,4BAEhB,EA1HA,GAAa,EAAAgB,e,wrBC7Bb,aACA,SACA,SACA,SASa,EAAA1H,cAAgB7pD,OAAO2oD,OAAO,CACzCmB,SAAU,EACV0H,OAAQ,EACRb,UAAW,IAGb,iBAWE,WAAY,G,IACVc,EAAM,SACNtN,EAAW,cACXuN,EAAgB,mBAChBC,EAAoB,uBACpB,IAAAxI,eAAO,IAAG,KAAE,EACZ,IAAAgD,mBAAW,IAAG,KAAE,EAChB,IAAA/C,iBAAS,IAAG,KAAE,EAThB,KAAAwI,cAAiC,GAmB/B7xD,KAAK8xD,SAAU,EAEf9xD,KAAK+xD,aAAe3N,EACpBpkD,KAAKgyD,QAAUN,EACf1xD,KAAKiyD,sBAAwBL,EAC7B,IAAM3F,EAAuByF,EAAOzF,SAC9BC,EAAcwF,EAAOxF,cAE3BlsD,KAAKqpD,UAAY,EAAH,CACZQ,cAAe,EAAAyD,eAAe,CAC5BC,SAAUoE,EAAiBpE,SAC3BC,UAAWmE,EAAiBnE,aAE3BnE,GAGLrpD,KAAKkyD,UAAY,IAAI,EAAA9D,UAAU,CAC7BnC,OAAM,EACNC,YAAW,EAEX9C,QAAO,EACPgD,YAAW,EACX/C,UAAWrpD,KAAKqpD,YAiGtB,OA7FE,YAAAnF,aAAA,SAAa,GAAE,IAAAyN,EAAgB,mBAAKnM,EAAM,IAA7B,sBAWX,GAVImM,IACFnM,EAAOqE,cAAgB,EAAAyD,eAAe,CACpCC,SAAUoE,EAAiBpE,SAC3BC,UAAWmE,EAAiBnE,aAGhCxtD,KAAKqpD,UAAY,EAAH,KAAQrpD,KAAKqpD,WAAc7D,GACrCxlD,KAAKmyD,UACPnyD,KAAKmyD,SAASjO,aAAasB,GAEzBxlD,KAAK6xD,cACP,IAAgB,UAAA7xD,KAAK6xD,cAAL,eAAJ,KAER3N,aAAalkD,KAAK8xD,QAAStM,IAKnC,YAAA4M,UAAA,SAAU5N,GACJxkD,KAAKmyD,UAAUnyD,KAAKmyD,SAASlO,KAAKO,IAGxC,YAAAP,KAAA,aACA,YAAAoO,YAAA,SAAY7N,GACNxkD,KAAKmyD,UAAUnyD,KAAKmyD,SAASv2B,OAAO4oB,IAG1C,YAAAjtC,SAAA,WACE,MAAO,mBAGT,YAAA+6C,YAAA,sBACE,IAAKtyD,KAAKmyD,SAAU,CAClB,IAAM,EAAe,EAAAI,kBAAkBvyD,KAAK+xD,cAE5C,IAAK/xD,KAAKqpD,UAAUQ,cAClB,MAAM,IAAIhoD,MAAM,6CAClB,IAAM,EAAgB7B,KAAKqpD,UAAUQ,cAC/B2I,EAAWxyD,KAAKgyD,QAAQQ,WAE1B,EAAwC,EAAAC,YAC1CzyD,KAAK+xD,aAAah4C,SAASxC,WAC3B,oBAEEm7C,EAAc1yD,KAAKgyD,QAAQW,cAE3B,IACF,EAAgB/iD,OAAO,GACvB8iD,EAAcA,EAAY50C,QAAO,SAAC80C,GAAM,OAAAA,EAAE5tD,KAAO,KAEjD0T,QAAQg3C,KAAK,oBAAoB,IAGnC1vD,KAAKmyD,SAAW,IAAI,EAAAU,SAAS,CAC3BnB,OAAQ1xD,KAAKgyD,QACbU,YAAW,EACX7I,cAAa,EACbqI,UAAWlyD,KAAKkyD,UAChBhQ,aAAY,EACZkC,YAAapkD,KAAK+xD,eAGpB/xD,KAAK6xD,cAAgBW,EAASrvD,KAC5B,SAAC2vD,GACC,WAAI,EAAAC,aAAa,CACf7Q,aAAY,EACZ2H,cAAa,EACbmJ,cAAe,EAAKf,sBACpB1gC,KAAMuhC,OAIZ9yD,KAAKkkD,aAAalkD,KAAKqpD,aAI3B,YAAA4J,OAAA,WAcE,OAZAjzD,KAAKsyD,cAEDtyD,KAAK8xD,SACP9xD,KAAK8xD,SAAU,EACX9xD,KAAKmyD,UAAUnyD,KAAKmyD,SAASpO,QACjC/jD,KAAK6xD,cAAclvD,SAAQ,SAACuwD,GAAM,OAAAA,EAAEnP,aAEpC/jD,KAAK8xD,SAAU,EACX9xD,KAAKmyD,UAAUnyD,KAAKmyD,SAAS5O,OACjCvjD,KAAK6xD,cAAclvD,SAAQ,SAACuwD,GAAM,OAAAA,EAAE3P,WAG/BvjD,KAAK8xD,SAEhB,EAnJA,GAAa,EAAAqB,S,yGCdb,aAEA,aAWE,WAAY9P,EAA6BC,GAErC,IAAA8P,EAKE/P,EAAY,qBAJdgQ,EAIEhQ,EAAY,sBAHdiQ,EAGEjQ,EAAY,kBAFdkQ,EAEElQ,EAAY,mBADdmQ,EACEnQ,EAAY,mBAGd0J,EAGEzJ,EAAK,uBAFP0J,EAEE1J,EAAK,uBADP4J,EACE5J,EAAK,mBAETtjD,KAAKsjD,MAAQA,EACbtjD,KAAKyzD,QAAUnQ,EAAMt+C,GAErBhF,KAAK0zD,YAAcnvD,KAAK4oB,IAAIomC,EAAoB3jD,OAAOs9C,IACvDltD,KAAK2zD,YAAcpvD,KAAK4oB,IAAIqmC,EAAoB5jD,OAAOs9C,IACvDltD,KAAKsR,SAAW,EAAAsiD,OAAO5zD,KAAK0zD,YAAa1zD,KAAK2zD,aAE9C,IAAME,EAAcjkD,OAAOo9C,GAA0BhtD,KAAKsR,SAC1DtR,KAAK0lB,MAAQ,EAAAkuC,OAAO7G,EAAwB8G,GAE5C7zD,KAAK4lD,eAAiBrhD,KAAK4oB,IAAIimC,EAAsBpzD,KAAKsR,SAAW,GACrEtR,KAAKomD,gBACH7hD,KAAK4oB,IAAIkmC,EAAuBrzD,KAAKsR,SAAW,GAChD1B,OAAO0jD,GACTtzD,KAAKimD,mBACHjmD,KAAKsR,SAAWtR,KAAK4lD,eAAiB5lD,KAAKomD,gBASjD,OANE,YAAA7uC,SAAA,WAIE,MAAO,kBADHvX,KAAI,UAGZ,EAlDA,GAAa,EAAA2jD,iB,wGCJb,aAEA,aAYE,WACEmQ,EACAtO,GAEAxlD,KAAK+zD,YAAc,CAACvO,EAAOwO,UAAWxO,EAAOyO,WAC7Cj0D,KAAKsR,SAAW,CAACk0C,EAAO0O,YAAa1O,EAAO2O,aAC5Cn0D,KAAKo0D,QAAU,CAAC5O,EAAO6O,WAAY7O,EAAO8O,YAC1Ct0D,KAAKu0D,WAAa,CAAC/O,EAAOgP,cAAehP,EAAOiP,eAChDz0D,KAAK00D,YAAc,CAAClP,EAAOmP,eAAgBnP,EAAOoP,gBAClD50D,KAAK60D,mBAAqBrP,EAAOsP,iBACjC90D,KAAK+0D,KAAOvP,EAAOwP,YAClBh1D,KAAKyrD,eAAiBjG,EAAOyP,iBAAmB,IAC9Cj1D,KAAKk1D,kBAAmB,EAAA5kC,eAAek1B,EAAQ,yBAC1CA,EAAO2P,mBAEfn1D,KAAKo1D,qBAAsB,EAAA9kC,eAAek1B,EAAQ,4BAC5CA,EAAO6P,sBAEbr1D,KAAKszD,kBAAoB,EAEzB,IAAMgC,EAAyBxB,EAAe,wBAE1CwB,IACFt1D,KAAKszD,kBAAoB1jD,OAAO0lD,GAChC58C,QAAQxI,IAAI,+BAAgClQ,KAAKszD,oBAqEvD,OAjEE,sBAAI,2BAAY,C,IAAhB,WACE,OAAO,EAAAM,OAAO5zD,KAAKu1D,sBAAuBv1D,KAAKw1D,wB,gCAGjD,sBAAI,4BAAa,C,IAAjB,WACE,OAAO,EAAA5B,OAAO5zD,KAAKy1D,kBAAmBz1D,KAAK01D,oB,gCAG7C,sBAAI,mCAAoB,C,IAAxB,WACE,OAAOnxD,KAAK4oB,IACV,EAAAymC,OAAO5zD,KAAK21D,iBAAkB31D,KAAK41D,kBACnC51D,KAAK61D,kB,gCAIT,sBAAI,oCAAqB,C,IAAzB,WACE,OAAOtxD,KAAK4oB,IACV,EAAAymC,OAAO5zD,KAAK81D,kBAAmB91D,KAAK+1D,mBACpC/1D,KAAK61D,kB,gCAIT,sBAAI,oCAAqB,C,IAAzB,WACE,OAAO71D,KAAK+zD,YAAY,I,gCAG1B,sBAAI,oCAAqB,C,IAAzB,WACE,OAAO/zD,KAAK+zD,YAAY,I,gCAG1B,sBAAI,gCAAiB,C,IAArB,WACE,OAAO/zD,KAAKo0D,QAAQ,I,gCAGtB,sBAAI,gCAAiB,C,IAArB,WACE,OAAOp0D,KAAKo0D,QAAQ,I,gCAGtB,sBAAI,iCAAkB,C,IAAtB,WACE,OAAOp0D,KAAKsR,SAAS,I,gCAGvB,sBAAI,iCAAkB,C,IAAtB,WACE,OAAOtR,KAAKsR,SAAS,I,gCAGvB,sBAAI,8BAAe,C,IAAnB,WACE,OAAQtR,KAAKwzD,mBAAqBxzD,KAAKuzD,oBAAsB,G,gCAG/D,sBAAI,+BAAgB,C,IAApB,WACE,OAAOvzD,KAAKu0D,WAAW,I,gCAGzB,sBAAI,+BAAgB,C,IAApB,WACE,OAAOv0D,KAAKu0D,WAAW,I,gCAGzB,sBAAI,gCAAiB,C,IAArB,WACE,OAAOv0D,KAAK00D,YAAY,I,gCAG1B,sBAAI,gCAAiB,C,IAArB,WACE,OAAO10D,KAAK00D,YAAY,I,gCAE5B,EAzGA,GAAa,EAAAsB,gB,uxBCJb,aAIA,SAOA,aAYE,WAAY,GAAZ,WACEtE,EAAM,SACN,IAAAgB,mBAAW,IAAG,KAAE,EAChB7I,EAAa,gBACbzF,EAAW,cACX8N,EAAS,YACN+D,EAAoB,IANb,oEAeVj2D,KAAK6pD,cAAgBA,EACrB7pD,KAAKysD,cAAgB,GACrBzsD,KAAKkyD,UAAYA,EACjBlyD,KAAK8xD,SAAU,EACf9xD,KAAKoqD,aAAe,GACpBpqD,KAAKgyD,QAAUN,EAEf,IAAIwE,EAAgB,EACdC,EAAY,EAAA1D,YAChBrO,EAAYrqC,SAASxC,WACrB,mBAGF,GAAI4+C,EAAW,CACb,IAAMC,EAAcxmD,OAAOumD,GAC3BD,EAA8B,IAAdE,EAChB19C,QAAQxI,IAAI,6BAA6BkmD,EAAY1R,QAAQ,GAAE,KAGjE1kD,KAAKq2D,eAAiBH,EACtB,IAAMI,EAAa,GACbC,EAAW,IAAIxwC,IAErB2sC,EAAY/vD,SAAQ,SAACs1C,GAEnB,IAAMmL,EAAQ,IAAI,EAAAoT,mBAAmB,EAAD,GAClCve,UAAS,GACNge,GAAoB,CACvB7R,YAAW,EACX+N,SAAU,KAIZmE,EAAWlT,EAAMoB,SAAWpB,EAC5BmT,EAAS54C,IAAIylC,EAAO,QACnB,IAEHpjD,KAAKu2D,SAAWA,EAChBv2D,KAAKs2D,WAAaA,EAmGtB,OAhGE,sBAAI,qBAAM,C,IAAV,WAEE,OAAO,EAAP,GAAWt2D,KAAKu2D,SAAS7zD,S,gCAG3B,sBAAI,qCAAsB,C,IAA1B,WAGE,IAFA,IAAMupD,EAAS,GAEC,MAAAjsD,KAAKu2D,SAASllD,SAAd,eAAwB,CAAnC,IAAM/M,EAAC,KACNA,GACF2nD,EAAOvhD,KAAKpG,GAGhB,OAAO2nD,G,gCAGT,YAAA/H,aAAA,SAAa,GACX,IAAA2F,EAAa,gBACbO,EAAY,eACT5E,EAAM,IAHE,kCAQPqE,IAAe7pD,KAAK6pD,cAAgBA,GACpCO,IACFpqD,KAAKoqD,aAAeA,EAAajnD,KAAI,SAACyvD,GAAM,OAAAhjD,OAAOgjD,OAErD5yD,KAAKy2D,OAAO9zD,SAAQ,SAACiwD,GAAM,OAAAA,EAAE1O,aAAasB,OAG5C,YAAAjC,KAAA,WACEvjD,KAAKy2D,OAAO9zD,SAAQ,SAACiwD,GAAM,OAAAA,EAAErP,UAC7BvjD,KAAK02D,sBAAwB,IAAI3R,KACjC/kD,KAAK8xD,SAAU,GAGjB,YAAA7N,KAAA,SAAKO,GACH,QAAsB,IAAXA,EAAX,CAEA,IAAMpB,EAAQpjD,KAAKs2D,WAAW1mD,OAAO40C,IACjCpB,GAAOA,EAAMa,SAGnB,YAAAroB,OAAA,SAAO4oB,GAEL,IAAMpB,EAAQpjD,KAAKs2D,WAAW1mD,OAAO40C,IACjCpB,GAAOA,EAAMxnB,UAGnB,YAAAmoB,MAAA,WACE/jD,KAAKy2D,OAAO9zD,SAAQ,SAACiwD,GAAM,OAAAA,EAAE7O,WAEzB/jD,KAAK02D,wBACP12D,KAAKq2D,eACHr2D,KAAKq2D,iBACJ,IAAItR,MAAO4R,kBACV32D,KAAK02D,sBAAsBC,0BACxB32D,KAAK02D,uBAGd12D,KAAK8xD,SAAU,GAGjB,sBAAI,4BAAa,C,IAAjB,WACE,IAAMhN,EAAM,IAAIC,KACV6R,EAAgB52D,KAAK02D,sBACvB12D,KAAK02D,sBACL5R,EACE+R,EACJ/R,EAAI6R,kBAAoBC,EAAcD,kBAExC,OAAO32D,KAAKq2D,eAAiBQ,G,gCAG/B,YAAAjgD,KAAA,SAAKkgD,GACG,MAKF92D,KAJFkyD,EAAS,YACerE,EAAe,yBACvCqI,EAAa,gBACb9L,EAAY,eAERG,EAAiB2L,EAAgB,IAEjC/H,EAAY+D,EAAUtE,aAAakJ,EAAU,CACjDjJ,gBAAe,EACftD,eAAc,EACdV,cAAe7pD,KAAK6pD,cACpBO,aAAY,IAMd,OAHApqD,KAAKu2D,SAAS54C,IAAIm5C,EAAU3I,GAC5BnuD,KAAKgyD,QAAQ+E,uBAEN5I,GAEX,EApKA,GAAa,EAAA0E,Y,sVCXb,aACA,SACA,SAuEMmE,EAAgC,CACpC,QACA,OACA,UACA,UACA,WAEIC,EAAc,IAEpB,aAaE,WAAY,GAAZ,WACE/U,EAAY,eACZkC,EAAW,cACXnM,EAAS,YACTka,EAAQ,WAORnyD,KAAKwkD,QAAUvM,EAAUjzC,GACzBhF,KAAKwqD,mBAAqBvS,EAAUif,qBACpCl3D,KAAKmyD,SAAWA,EAChBnyD,KAAK8xD,SAAU,EACf9xD,KAAKokD,YAAcA,EAEnB,IAAM+S,EAAe,IAAIC,MAEzBD,EAAaE,YAAc,YAC3BF,EAAap2C,MAAO,EAEpB,IAAMu2C,EAAWpV,EAAanJ,yBAAyBoe,GACjDz3B,EAAWwiB,EAAan9B,aAE9BuyC,EAASzzC,QAAQ6b,GACjBA,EAAS7b,QAAQq+B,EAAa1yC,aAE9BwnD,EAA8Br0D,SAAQ,SAACuG,GACrC,OAAAiuD,EAAavlC,iBAAiB1oB,GAAM,WAClC,OAAAwP,QAAQxI,IAAI,MAAM,EAAI,UAAUhH,EAAI,iBAIxCiuD,EAAavlC,iBAAiB,SAAS,WAAM,SAAK2lC,kBAClDJ,EAAavlC,iBAAiB,SAAS,WAAM,SAAK4lC,kBAElD,IAAMnU,EAAe,IAAI,EAAA2S,cACvB,SAACyB,GAAU,SAAAhF,YAAYrO,EAAYrqC,SAASxC,WAAYkgD,KACxDxf,GAGFj4C,KAAKkiD,aAAeA,EACpBliD,KAAKm3D,aAAeA,EACpBn3D,KAAK0/B,SAAWA,EAChB1/B,KAAKqjD,aAAeA,EACpBrjD,KAAKqpD,UAAY,CAAEmB,mBAAoBvS,EAAUif,sBAEjDl3D,KAAK03D,uBA6LT,OA1LE,YAAAA,qBAAA,WACE13D,KAAK+2B,MAAQ,EAAAyvB,sBAAsBxmD,KAAMA,KAAKqjD,eAGhD,YAAAkU,aAAA,SAAaI,GACXj/C,QAAQ2sC,KAAK,MAAMrlD,KAAI,wCAAyC23D,GAChE33D,KAAK03D,wBAGP,YAAAF,aAAA,WACE9+C,QAAQxI,IAAI,MAAMlQ,KAAI,wBAGxB,YAAAujD,KAAA,WACE7qC,QAAQxI,IAAO,EAAA0nD,UAAS,IAAI53D,KAAI,KAAKA,KAAK+2B,OACrC/2B,KAAK+2B,MAEL/2B,KAAK+2B,MAAMwsB,OADd7qC,QAAQ2sC,KAAK,0DAIjB,YAAAnB,aAAA,SAAasB,QAAA,IAAAA,MAAA,IACXxlD,KAAKqpD,UAAY,EAAH,KAAQrpD,KAAKqpD,WAAc7D,GACrCxlD,KAAK+2B,MAAO/2B,KAAK+2B,MAAMmtB,aAAalkD,KAAKqpD,WACxC3wC,QAAQ2sC,KAAK,wBAKpB,YAAAwS,SAAA,WACQ,IACQ91C,EAEV/hB,KAFc,cACAk9B,EACdl9B,KADyB,yBAE7B+hB,EAAKyb,sBAAsBN,IAG7B,YAAA46B,YAAA,WACQ,IACQ/1C,EAEV/hB,KAFc,cACAk9B,EACdl9B,KADyB,yBAE7B+hB,EAAK0O,eAAewmC,EAAa/5B,IAInC,YAAA4oB,OAAA,SAAOiS,GACL,IAAMC,EAAeh4D,KAAKg4D,aAC1B,IAAKA,IAAiBA,EAAaC,OAEjC,OADAv/C,QAAQ2sC,KAAK,+BACN,EAGT,IAEM6S,EAFel4D,KAAKqjD,aAAa8U,aAEJH,EAAaC,OAEhD,IAIE,OAHAj4D,KAAK83D,cACL93D,KAAKkmD,YACLlmD,KAAKo4D,SAASF,EAAaH,IACpB,EACP,MAAOjhD,GAGP,OAFA9W,KAAKg4D,kBAAe7sD,EACpBuN,QAAQ2sC,KAAQrlD,KAAI,kBAAmBg4D,EAAclhD,IAC9C,IAIX,YAAAshD,SAAA,SACEF,EACAG,EACAC,QAAA,IAAAA,MAAA,gCAEM,IACQv2C,EAEV/hB,KAFc,cACAk9B,EACdl9B,KADyB,yBAG7B0Y,QAAQxI,IACN,cAAclQ,KAAI,YAAYk4D,EAAYxT,QACxC,GACD,KAAK2T,EAAgB3T,QAAQ,GAAE,OAAO4T,EAAU,MAGnD,IAGE,OAFAv2C,EAAK0O,eAAe1O,EAAK5hB,MAAO+8B,GAChCnb,EAAKu2C,GAAYJ,EAAah7B,EAAcm7B,IACrC,EACP,MAAOvhD,GAEP,OADA4B,QAAQ2sC,KAAK,uBAAuBrlD,KAAQ8W,IACrC,IAKX,YAAAwvC,QAAA,SAAQiS,GACN,OAAOv4D,KAAKo4D,SACVnB,EACAsB,EACA,4BAIJ,YAAA9U,cAAA,WACQ,IAAE0T,EAA+Bn3D,KAAnB,aAAEg4D,EAAiBh4D,KAAL,aAClC,IACGg4D,IACAA,EAAarN,YACbqN,EAAatM,eAGd,OADAhzC,QAAQ2sC,KAAK,4CACN,EAEL2S,IACFA,EAAarN,YACbqN,EAAatM,eAAiB,IAAI3G,MAGpC,IAAMyT,EAAWx4D,KAAKmyD,SAASv7C,KAAK5W,MAGpC,GAFAA,KAAKg4D,aAAeQ,EAEhBA,EAAU,CACJ,IAAA/K,EAAgB+K,EAAQ,KAAlB9yC,EAAU8yC,EAAQ,MAQhC,OAPA9/C,QAAQxI,IAAI,yBAAyBlQ,KAAI,KAAKytD,EAAI,KAElD0J,EAAaxgB,IAAM8W,EACnB0J,EAAaj6B,YAAcxX,GAASuxC,EAAcvxC,EAAQuxC,EAE1Dj3D,KAAKm3D,aAAeA,EAEbqB,EAGT,OAAO,MAGT,YAAAzU,MAAA,WAEE,GADArrC,QAAQxI,IAAO,EAAA0nD,UAAS,YAAY53D,OAC/BA,KAAK+2B,MACR,OAAOre,QAAQ2sC,KAAK,4CACtBrlD,KAAK+2B,MAAMgtB,QACP/jD,KAAKm3D,cAAcn3D,KAAKm3D,aAAapT,SAG3C,YAAAmC,UAAA,WACMlmD,KAAKm3D,cAAcn3D,KAAKm3D,aAAa5T,QAG3C,YAAAwC,WAAA,WACE/lD,KAAK63D,WACD73D,KAAKm3D,cAAcn3D,KAAKm3D,aAAapT,SAG3C,YAAAE,KAAA,WACU,IAAAltB,EAAU/2B,KAAI,MACtB0Y,QAAQxI,IAAI,YAAYlQ,MACpB+2B,GAAOA,EAAMktB,QAGnB,YAAAroB,OAAA,WACU,IAAA7E,EAAU/2B,KAAI,MACtB0Y,QAAQxI,IAAI,aAAalQ,MACrB+2B,GAAOA,EAAM6E,UAGnB,YAAAkoB,WAAA,SAAWN,GACH,IACJzsB,EAEE/2B,KAFG,MACOk2D,EACVl2D,KADuB,uBAS3B,GANA0Y,QAAQxI,IACH,EAAA0nD,UAAS,IAAI53D,KAAI,MAAM+2B,EAAK,SAASysB,EAAQ,OAC9C0S,EAAgB,KAChBxR,QAAQ,GAAE,eAGT1kD,KAAK+2B,MAAO,OAAOre,QAAQ2sC,KAAK,gCACrCrlD,KAAK+2B,MAAMitB,SACXhkD,KAAK+2B,MAAQysB,EACbxjD,KAAK+2B,MAAMwsB,QAGb,YAAAhsC,SAAA,WACE,MAAO,UAAUvX,KAAKwkD,SAE1B,EA1PA,GAAa,EAAAgS,sB,ssDCjFb,aAGA,aAUE,WAAYiC,EAAsB,G,IAAEnQ,EAAS,YAH7C,KAAAvuC,SAAwB,CAAEwzC,SAAU,EAAGC,UAAW,GAIhDxtD,KAAKqoD,UAAYoQ,EACjBz4D,KAAK04D,YAAc,YACnB14D,KAAKsoD,UAAYA,EACjBtoD,KAAKqpD,UAAY,GAoDrB,OAjDE,YAAA9xC,SAAA,WACE,MAAO,sBAAsBvX,KAAK04D,YAAW,OAAO14D,KAAKqoD,UAAS,KAG9D,YAAAxkC,QAAN,SAAc6qC,G,sGACN3H,EAAO,aAAe/mD,KAAKqoD,UAAY,IAEvCsQ,EAAc,CAAEzJ,WAAYR,G,iBAGnB,O,sBAAA,GAAM1uD,KAAKsoD,UAAU7qC,IAS/BspC,EAAM4R,I,OAkBT,OA3BMpnC,EAAO,SAYbvxB,KAAK04D,YAAcnnC,EAAKroB,KACxBlJ,KAAK44D,eAAiBrnC,EAAKsnC,gBAC3B74D,KAAKkrD,gBAAkB35B,EAAKunC,iBAC5B94D,KAAK+4D,mBAAqBxnC,EAAKynC,qBAC/Bh5D,KAAK+Z,SAAW,CAAEwzC,SAAUh8B,EAAKg8B,SAAUC,UAAWj8B,EAAKi8B,WAE3DxtD,KAAKqpD,UAAY,EAAH,CACZ2B,cAAez5B,EAAK0nC,mBAChB,EAAAnP,cAAc2H,OACd,EAAA3H,cAAcC,SAClBmB,gBAAiB35B,EAAKunC,iBACtBxM,SAAU/6B,EAAK+6B,UACZtsD,KAAKqpD,WAGH,CAAP,EAAOqF,G,yBAEPh2C,QAAQqR,MAAM,gCAAiC,G,+BAI7C,YAAAmvC,SAAN,SAAexK,G,kGAIN,OAHD3H,EAAO,aAAe/mD,KAAKqoD,UAAY,aACvC92B,EAAO,CAAE29B,WAAYR,GAEpB,GAAM1uD,KAAKsoD,UAAU7qC,IAAcspC,EAAMx1B,I,OAAhD,MAAO,CAAP,EAAO,kBAEX,EAlEA,GAAa,EAAA4nC,W,43ECJb,aAEA,SAEA,SAEA,SAEA,SAEA,SAEA,SACA,SACA,SAEA,SAEA,SACA,SAEA,SAoBA,YACA,aAAS,+EAAArP,iBAmCT,iBA2CE,WACE1F,EACA,GACE,IAAAgV,EAAS,YACT/Q,EAAS,YACTgR,EAAc,iBACdC,EAAY,eACZ3H,EAAgB,mBAChB4H,EAAI,OACJ5K,EAAW,cACX6K,EAAO,UACPC,EAAO,UACPC,EAAO,UACPpW,EAAK,QACLuJ,EAAU,aACV8M,EAAU,aACVC,EAAmB,sBACnBhI,EAAoB,uBACjBhwD,EAAO,IAhBZ,gNA6BA,GAtEM,KAAAi4D,gBAAmC,GAgBnC,KAAAC,eAAiC,GAEjC,KAAAC,kBAAsC,aACtC,KAAAC,gBAAoC,aACpC,KAAAC,WAA2B,GAC3B,KAAAC,cAAkC,aAE1C,KAAAC,SAAsB,GACd,KAAAC,aAA+B,GAC/B,KAAAC,iBAAsC,GAEtC,KAAAC,gBAAqC,GAiC3Ct6D,KAAKokD,YAAcA,EACnBpkD,KAAK6mD,WAAauS,EAClBp5D,KAAKuoD,WAAaF,EACdgR,IAAgBr5D,KAAK65D,gBAAkBR,GAC3Cr5D,KAAKu6D,cAAgBjB,EACrBt5D,KAAKw6D,kBAAoB7I,EACzB3xD,KAAKy6D,gBAAkB74D,EAEvB5B,KAAK06D,qBAAuBd,GAAuB,SAE3BzuD,IAApBnL,KAAK6mD,WACP,KAAM,yDAGR,QAAwB17C,IAApBnL,KAAKuoD,WACP,KAAM,yDAGRvoD,KAAKwoD,WAAa,IAAI,EAAAL,UAAUrwC,OAAQ9X,KAAK6mD,YAC7CjlD,EAAQ0mD,UAAYtoD,KAAKwoD,WAEzB,IAAIzwC,EAAYD,OAAOC,UAGvB/X,KAAK26D,MAAQpB,GAAQ,IAAI,EAAAqB,KAAKh5D,GAC9B5B,KAAK+uD,aACHJ,GACA,IAAI,EAAA6C,YAAYz5C,EAAW,CACzBizC,cAAeppD,EAAQopD,cACvBsF,cAAeqB,IAEnB3xD,KAAK66D,SACHrB,GACA,IAAI,EAAAsB,QACF/iD,EACA/X,KAAKuoD,WACLvoD,KAAK+uD,aAAa4B,UAClB/uD,GAEJ5B,KAAK+6D,SAAWtB,GAAW,IAAI,EAAAN,QAAQn5D,KAAKuoD,WAAY3mD,GACxD5B,KAAKg7D,SAAWtB,GAAW,IAAI,EAAAuB,QAAQj7D,KAAKuoD,WAAY3mD,GACxD5B,KAAKk7D,OAAS5X,GAAS,IAAI,EAAAoF,MAAM1oD,KAAKuoD,WAAY3mD,GAClD5B,KAAKm7D,aAAetO,GAAc,IAAI,EAAAuO,WAAWp7D,KAAKuoD,WAAY3mD,GAClE5B,KAAKq7D,YAAc1B,GAAc,IAAI,EAAAlL,WAAWzuD,KAAKuoD,WAAY3mD,GACjE5B,KAAKm6D,SAAW,GAEhB,IAAM9Q,EAAS,OACVrpD,KAAKqpD,WACLrpD,KAAK85D,gBAGV95D,KAAKs7D,OAAS,IAAI,EAAAnI,MAAM,CACtBzB,OAAQ1xD,KACRokD,YAAapkD,KAAKokD,YAClBuN,iBAAkB3xD,KAAKw6D,kBACvB5I,qBAAsBA,IAAwB,EAC9CvI,UAAS,IAgUf,OA5TE,YAAAkS,eAAA,SAAe5J,GACb3xD,KAAKw6D,kBAAoB7I,EAEzB3xD,KAAKs7D,OAAOpX,aAAa,CAAEyN,iBAAgB,IACvC3xD,KAAK+5D,mBAAmB/5D,KAAK+5D,kBAAkBpI,IAGrD,sBAAI,+BAAgB,C,IAApB,SAAqBtmD,GACnBrL,KAAK+5D,kBAAoB1uD,EAGzBA,EADmBrL,KAAK+uD,aAAaQ,kB,gCAIvC,sBAAI,6BAAc,C,IAAlB,SAAmBlkD,GACjBrL,KAAKg6D,gBAAkB3uD,EAEnBrL,KAAKi6D,YACP5uD,EAASrL,KAAKisD,W,gCAIlB,sBAAI,2BAAY,C,IAAhB,SAAiB5gD,GACfrL,KAAKk6D,cAAgB7uD,EACrBA,EAASrL,KAAKw7D,yB,gCAGhB,YAAAzE,qBAAA,WACM/2D,KAAKk6D,eACPl6D,KAAKk6D,cAAcl6D,KAAKw7D,yBAI5B,sBAAI,qCAAsB,C,IAA1B,WACE,OAAOx7D,KAAKs7D,OAAOnJ,UAAYnyD,KAAKs7D,OAAOnJ,SAASqJ,wB,gCAGtD,YAAAC,kBAAA,SAAkBnU,GACZA,IAAS,EAAAwC,cAAc8G,UACzB5wD,KAAK+uD,aAAamC,SAElBlxD,KAAK+uD,aAAagC,UAEpB/wD,KAAKs7D,OAAOpX,aAAa,CAAE8G,cAAe1D,KAG5C,YAAAoU,mBAAA,WACE17D,KAAK+uD,aAAagC,UAClB/wD,KAAKs7D,OAAOpX,aAAa,CAAE8G,cAAe,EAAAlB,cAAcC,YAKpD,YAAAlmC,QAAN,W,yGAEE7jB,KAAK+uD,aAAalrC,SAAQ,SAAC83C,GACzB,SAAKJ,eAAeI,MAGtB,EAAAxgD,OAAOu0C,KAAK,yCAAyC1vD,KAAKuoD,Y,iBAGxD,O,sBAAA,GAAMvoD,KAAK26D,MAAM92C,W,OACC,OADlB,SACkB,GAAM7jB,KAAK66D,SAASh3C,W,OAgBtC,OAhBM6qC,EAAY,SAClB1uD,KAAK8uD,WAAaJ,EAEZkN,EAAW,CACf57D,KAAK+6D,SAASl3C,QAAQ6qC,GACtB1uD,KAAK+6D,SACF7B,SAASxK,GACTx7B,MAAK,SAACinC,GAAa,OAAC,EAAKA,SAAWA,KACvCn6D,KAAKg7D,SACFn3C,QAAQ7jB,KAAK65D,iBACb3mC,MAAK,SAAC4/B,GAAgB,OAAC,EAAKsH,aAAetH,KAC9C9yD,KAAKq7D,YACFx3C,UACAqP,MAAK,SAAC2oC,GAAoB,OAAC,EAAKxB,iBAAmBwB,MAGxD,GAAMn3C,QAAQsP,IAAI4nC,I,OAElB,OAFA,SACAljD,QAAQg3C,KAAK,uBACN,CAAP,EAAO,CAAEyK,SAAUn6D,KAAKm6D,W,OAExB,M,SAAM,mE,yBAIV,sBAAI,wBAAS,C,IAAb,WACE,OAAQn6D,KAAK+6D,UAAY,IAAI1R,W,gCAIzB,YAAAyS,UAAN,SAAgBl6D,G,iGAETA,IAAW5B,KAAKi6D,WAAjB,MACK,CAAP,EAAOj6D,KAAKi6D,Y,OAEL,SAAMj6D,KAAKwoD,WAAW/qC,IAAe,WAAY,EAAF,GACpDgrC,WAAYzoD,KAAKuoD,YAEdvoD,KAAKu6D,eACJ34D,GAAW,M,OAJjB,MAAO,CAAP,EAAO,kBASX,sBAAI,wBAAS,C,IAAb,WACE,OAAO5B,KAAKs7D,OAAOnJ,UAAYnyD,KAAKs7D,OAAOnJ,SAASD,W,gCAKhD,YAAA6J,kBAAN,SACEC,EACAC,G,YAAA,IAAAA,MAAA,I,2FAEa,SAAMj8D,KAAKk8D,iB,OAExB,OAFMC,EAAO,SACP9S,EAAY,EAAH,KAAQrpD,KAAKqpD,WAAc4S,GACnC,CAAP,EAAOE,EAAKr+C,QACV,SAACxZ,GAAM,OAAA03D,EAAY13D,EAAG+kD,IAAc,EAAAV,iBAAiBE,oBAInD,YAAAgH,gBAAN,W,0GAWI,OAVEzG,EAAUppD,KAAKu6D,cACf6B,EAA+B,GAC/Bp8D,KAAKq8D,mBACPjT,EAAU,EAAH,KACFA,GAAO,CACVkT,aAAct8D,KAAKq8D,iBAAiBE,gBAEtCH,EAAiBp8D,KAAKisD,UAExB,EAAAjsD,KAAkB,KAAAo8D,GAAe1jC,OAC/B,GAAM14B,KAAKk7D,OAAOr3C,QAAoBulC,I,cADxC,EAAK6Q,WAAa,WAChB,WAEFj6D,KAAKq8D,iBAAmB,IAAItX,MAGtBoX,EAAOn8D,KAAKkyD,YACNlyD,KAAKs6D,iBACf6B,EAAK9P,aAAarsD,KAAKi6D,WAAYj6D,KAAKs6D,iBAGtCt6D,KAAKg6D,iBACPh6D,KAAKg6D,gBAAgBh6D,KAAKi6D,Y,YAIxB,YAAAiC,cAAN,W,8GAEOl8D,KAAKi6D,WAAN,MACF,GAAMj6D,KAAK6vD,mB,OAAX,SAEA7vD,KAAKw8D,gBAAkBC,aACrB,WAAM,SAAK5M,oBACX7vD,KAAK06D,sB,wBAGJ16D,KAAKs6D,gBAAN,OACF,EAAAt6D,KAAuB,GAAMA,KAAKm7D,aAAat3C,Y,OAA/C,EAAKy2C,gBAAkB,S,iBAEzB,MAAO,CAAP,EAAOt6D,KAAKi6D,oBAGR,YAAAyC,cAAN,SAAoBC,G,YAAA,IAAAA,MAAA,I,mFAElB,SAAM38D,KAAKk8D,iB,OAIX,OAJA,SAEAl8D,KAAKs7D,OAAOpX,aAAayY,GAElB,CAAP,EAAO38D,KAAKs7D,gBAKd,YAAA/X,KAAA,SAAKqZ,GACH,YADG,IAAAA,MAAA,cACI58D,KAAK+uD,aACTwC,4BACAr+B,KAAK0pC,IAKV,YAAA7Y,MAAA,WACM/jD,KAAKs7D,OAAOnJ,UACdnyD,KAAKs7D,OAAOnJ,SAASpO,SAMzB,YAAA8Y,KAAA,WACM78D,KAAKw8D,iBACPM,cAAc98D,KAAKw8D,kBAMvB,YAAA5gC,OAAA,aAIA,YAAAqoB,KAAA,WACMjkD,KAAKs7D,OAAOnJ,UACdnyD,KAAKs7D,OAAOnJ,SAASlO,QAMzB,YAAA8Q,KAAA,aAIA,YAAAgI,OAAA,SAAOxrC,GAKDvxB,KAAKs7D,OAAOnJ,UACdnyD,KAAKs7D,OAAOnJ,SAASjO,aAAa3yB,IAKtC,YAAAihC,SAAA,WACE,OAAOxyD,KAAKo6D,cAAgB,IAG9B,YAAAnO,OAAA,WACE,OAAOjsD,KAAKi6D,YAAc,IAG5B,YAAA/N,YAAA,WACE,OAAOlsD,KAAKs6D,iBAAmB,IAGjC,YAAA3H,YAAA,WACE,OAAO3yD,KAAKq6D,kBAAoB,IAQ5B,YAAA2C,UAAN,SAAgB/kB,EAAuBmX,EAAkB79B,G,0FACtC,SAAMvxB,KAAKi9D,gB,OAC5B,MAAO,CAAP,EADiB,SACD9N,OAAOlX,EAAWmX,EAAU79B,YAMxC,YAAA0rC,aAAN,W,gGACE,IAAKj9D,KAAK8uD,WACR,MAAM,IAAIjtD,MACR,4DAWJ,UAPIq7D,EAAW,IAAI,EAAApN,SACjB9vD,KAAK8uD,WACL9uD,KAAKwoD,WACLxoD,KAAK+uD,aACL/uD,OAGa6jB,W,OACf,OADA,SACO,CAAP,EAAOq5C,WAGT,YAAAC,mBAAA,SAAmB9S,EAAe+S,QAAA,IAAAA,MAAA,UAEhC,IADA,IACoB,MADFp9D,KAAKm6D,SAASiD,GACZ,eAClB,IADG,IACgB,MADL,KACWC,cAAN,eAAqB,CAAnC,IAAMj6D,EAAI,KACb,GAAIA,EAAKk6D,QAAUjT,EACjB,OAAOjnD,EAAKm6D,mBAOd,YAAAC,KAAN,SAAW/J,EAAiBgK,EAAkBt9D,G,mEAC5C,MAAO,CAAP,EAAOH,KAAKwoD,WAAWtB,KAAK,WAAWuM,EAAO,UAAW,CACvDvE,WAAYlvD,KAAK8uD,WACjB4O,UAAWD,EACXt9D,MAAK,YAKH,YAAAw9D,SAAN,SAAe34D,G,6EAEb,GAAIhF,KAAKi6D,WACP,IAAK,EAAL,EAAoB,EAAAj6D,KAAKi6D,WAAL,eAClB,IADS3W,EAAK,MACJt+C,KAAOA,EACf,MAAO,CAAP,EAAOs+C,GAKb,MAAO,CAAP,EAAOtjD,KAAKwoD,WAAW/qC,IAAgB,WAAWzY,EAAE,IAAK,CACvDkqD,WAAYlvD,KAAK8uD,qBAKf,YAAA8O,YAAN,SAAkB54D,G,mEAChB,MAAO,CAAP,EAAOhF,KAAKwoD,WAAW/qC,IAAa,cAAczY,EAAM,CACtDkqD,WAAYlvD,KAAK8uD,qBAGvB,EAxbA,GAAa,EAAA+O,a,g+CC1Eb,IACIxV,EAAkDyV,EAClDxV,EAFAyV,EAAuB,UAM3B,aAUE,WACEhmD,EACA0gD,EACAuF,EACAp8D,IAIAm8D,EAAehmD,EAAUC,WAER9W,OAAS,MAExB68D,EAAeA,EAAa58D,MAAM,EAAG,MAGvCknD,EAAYoQ,EACZqF,EAAmBE,EAEnB1V,EAAY1mD,EAAQ0mD,UA0BxB,OAtBE,YAAA/wC,SAAA,WACE,MAAO,2BAtCwBm3C,GA4C3B,YAAA7qC,QAAN,W,kGAOe,OANP80C,EAAc,CAClBlQ,WAAYJ,EACZ4Q,mBAAoB6E,EACpBG,cAAeF,GAGJ,GAAMzV,EAAUpB,KAC3B,aACAyR,I,OAIF,OANMpnC,EAAO,SAIbvxB,KAAK0uD,UAAYn9B,EAAKvsB,GAEf,CAAP,EAAOhF,KAAK0uD,mBAEhB,EAtDA,GAAa,EAAAoM,W,kGCTb,YACS,EAAA3/C,U,+BCST,SAAgB+iD,EAAaC,GAC3B,I,MAAS/8D,EAAI+8D,EAAYj9D,OAAS,EAAGE,EAAI,EAAGA,IAAK,CAC/C,IAAMg9D,EAAO75D,KAAK6O,MAAM7O,KAAKqvD,UAAYxyD,EAAI,IAC7C,EAAsC,CAAC+8D,EAAYC,GAAOD,EAAY/8D,IAArE+8D,EAAY/8D,GAAE,KAAE+8D,EAAYC,GAAK,MAQtC,SAAgBC,EAAaF,GAC3BA,EAAYnkB,MAAK,SAACskB,EAAQC,GAAW,OAAAD,EAAOE,OAAUD,EAAOC,UAO/D,SAAgBC,EAAYN,GAE1BzlD,QAAQ2sC,KAAK,mC,2HArBf,iBAWA,iBAQA,gBAKA,gCACEiH,GAEA,OAAQA,GACN,IAAK,YACH,OAAO+R,EACT,IAAK,UACH,OAAOI,EACT,IAAK,SACL,QACE,OAAOP,K,miECzCb,IAEA,aAIE,WAAY7V,EAAmB,G,IAAEC,EAAS,YACxCtoD,KAAKuoD,WAAaF,EAClBroD,KAAKwoD,WAAaF,EAatB,OAVE,YAAA/wC,SAAA,WACE,MAAO,uBAAuBvX,KAAKuoD,WAAU,KAGzC,YAAA1kC,QAAN,SAAc,G,IAAK0N,EAAI,IAAT,I,0FACL,SAAMvxB,KAAKwoD,WAAW/qC,IAhBpB,aAgB8C,EAAF,KAChD8T,GAAI,CACPk3B,WAAYzoD,KAAKuoD,e,OAFnB,MAAO,CAAP,EAAO,kBAKX,EAnBA,GAAa,EAAA0S,W,u+CCLb,aAEA,SACA,SACA,SASMyD,EAAwB,SAAC5T,GAAe,iBAAcA,IAQ5D,aA+BE,WAAY,G,IACV5I,EAAY,eACZ2H,EAAa,gBACbmJ,EAAa,gBACbzhC,EAAI,OAQEotC,EAOFptC,EAAI,GANKqtC,EAMTrtC,EAAI,UALKstC,EAKTttC,EAAI,UAJNutC,EAIEvtC,EAAI,mBAHNwtC,EAGExtC,EAAI,SAFgBytC,EAEpBztC,EAAI,qBADN0tC,EACE1tC,EAAI,IAERvxB,KAAKk/D,SAAWlM,EAChBhzD,KAAKkiD,aAAeA,EACpBliD,KAAK2+D,UAAYA,EACjB3+D,KAAK4+D,UAAYA,EACjB5+D,KAAK6+D,UAAYA,EACjB7+D,KAAKm/D,sBAAwBH,EAAsB,IACnDh/D,KAAKi/D,IAAMA,EACXj/D,KAAK6pD,cAAgBA,EACrB7pD,KAAK8xD,SAAU,EAEf9xD,KAAKo/D,yBAA2BV,EAAsBI,GACtD9+D,KAAKq/D,4BAA8BP,EAEnC9+D,KAAKs/D,cAAgBZ,EAAsBK,GAC3C/+D,KAAKu/D,cAxEW,KA0NpB,OA/IE,YAAAC,sBAAA,SAAsB99D,GAEpB,OAAO,UAAsBA,EAAO1B,KAAKs/D,gBAG3C,YAAAG,yBAAA,SAAyB/9D,GAEvB,OAAO,UAAsBA,EAAO1B,KAAKo/D,2BAG3C,YAAAM,iBAAA,SAAiBC,GAOf,OADc,EALa,UACzBA,EACA3/D,KAAKq/D,4BACL,CAAEv6D,MAAO,eAE4B9E,KAAKm/D,uBAI9C,YAAAS,gBAAA,WACU,IAAA/V,EAAkB7pD,KAAI,cAE9B,GAAK6pD,EAEE,IAAI7pD,KAAKy/D,yBAAyB5V,GACvC,OAAO7pD,KAAK4+D,UACP,GAAI5+D,KAAKw/D,sBAAsB3V,GAAgB,CACpD,IAAMgW,EAAQ7/D,KAAK4+D,UAAY5+D,KAAK6+D,UAGpC,OADE7+D,KAAK6+D,UAAYgB,EAAQ7/D,KAAK0/D,iBAAiB7V,GAGjD,OAAO7pD,KAAK6+D,UATZ,OAAO7+D,KAAKu/D,eAcV,YAAAO,WAAN,W,8GACE,OAAI9/D,KAAK+/D,MAAc,CAAP,EAAO//D,KAAK+/D,QAEpB7d,GAAF,EAAwBliD,MAAV,aAAEi/D,EAAG,MACnBe,EAAW,EAAA5S,cAAc6R,GAG3Bj/D,KAAKk/D,SAEU,GAAMloB,MAAMgpB,IAF3B,O,OAGW,SADI,SACW7qB,Q,cAAtBA,EAAO,SACb4qB,EAAQ,IAAI3I,MAAMr6C,IAAIs4B,gBAAgBF,I,aAEtC4qB,EAAQ,IAAI3I,MAAM4I,G,iBAepB,OAbAD,EAAM1I,YAAc,YACpB0I,EAAMh/C,MAAO,EAEPu2C,EAAWpV,EAAanJ,yBAAyBgnB,GACjDrgC,EAAWwiB,EAAan9B,aAE9BuyC,EAASzzC,QAAQ6b,GACjBA,EAAS7b,QAAQq+B,EAAa1yC,aAE9BxP,KAAK0/B,SAAWA,EAChB1/B,KAAK+/D,MAAQA,EACb//D,KAAKkiD,aAAeA,EAEb,CAAP,EAAOliD,KAAK+/D,eAGR,YAAA7b,aAAN,SACE+b,EACAC,G,gGAMkB,OAJdA,GAAQA,EAAKrW,gBACf7pD,KAAK6pD,cAAgBqW,EAAKrW,cAAc9mD,UAGxB,GAAM/C,KAAKmgE,gB,OAC7B,GADMC,EAAY,UACbpgE,KAAK+/D,MAAO,MAAM,IAAIl+D,MAAM,wC,OAC7Bo+D,GAAajgE,KAAK8xD,QAAlB,MACEsO,EAAY,KACdpgE,KAAK+/D,MAAMhc,Q,OADT,M,OAGF,SAAM/jD,KAAK+/D,MAAMxc,Q,OAAjB,S,mCAKA,YAAA4c,aAAN,W,kGAQE,OAPMC,EAAYpgE,KAAK4/D,kBAEvB5/D,KAAKu/D,cAAgBa,EAEfC,EACJrgE,KAAKkiD,aAAahlB,YA1KM,EA4K1B,GAAMl9B,KAAK8/D,c,OAMX,OANA,SACI9/D,KAAK0/B,UACP1/B,KAAK0/B,SAAS3d,KAAKgb,wBAAwBqjC,EAAWC,GAIjD,CAAP,EAAOD,WAGT,sBAAI,sBAAO,C,IAAX,WACE,OAAUpgE,KAAI,KAAKA,KAAKi/D,IAAG,K,gCAGvB,YAAA1b,KAAN,W,gGACoB,SAAMvjD,KAAKmgE,gB,OAE7B,GAFkB,SAEF,IAAM,U,iBAIpB,G,uBAAKngE,KAAK+/D,MACR,MAAM,IAAIl+D,MAAM,+CAClB,SAAM7B,KAAK+/D,MAAMxc,Q,cAAjB,SACAvjD,KAAK8xD,SAAU,E,+BAEfp5C,QAAQqR,MAAM,iBAAkB/pB,KAAKsgE,QAAS,G,+BAI5C,YAAAvc,MAAN,W,mEACE,IAAK/jD,KAAK8xD,QAAS,UAEnB,IAEE,IAAK9xD,KAAK+/D,MACR,MAAM,IAAIl+D,MAAM,+CAClB7B,KAAK+/D,MAAMhc,QACX/jD,KAAK8xD,SAAU,EACf,MAAOh7C,GACP4B,QAAQqR,MAAM,kBAAmB/pB,KAAKsgE,QAASxpD,G,iBAInD,YAAAS,SAAA,WAEE,MAAO,iBADevX,KAAI,UACO,KAErC,EApNA,GAAa,EAAA+yD,gB,siEClBb,IAEA,aAIE,WAAY1K,EAAmB,G,IAAEC,EAAS,YACxCtoD,KAAKuoD,WAAaF,EAClBroD,KAAKwoD,WAAaF,EAWtB,OARE,YAAA/wC,SAAA,WACE,MAAO,2BAA2BvX,KAAKuoD,WAAU,KAG7C,YAAA1kC,QAAN,SAAc,G,IAAK0N,EAAI,IAAT,I,gGAEL,OADD3vB,EAAU,EAAH,KAAQ2vB,GAAI,CAAEk3B,WAAYzoD,KAAKuoD,aACrC,GAAMvoD,KAAKwoD,WAAW/qC,IAjBpB,gBAiBiD7b,I,OAA1D,MAAO,CAAP,EAAO,kBAEX,EAjBA,GAAa,EAAAw5D,c,69CCAb,iBAWE,WAAY,G,IACV9S,EAAS,YACT,IAAAiY,gBAAQ,IAAG,mBAAgB,EAC3B,IAAAC,kBAAU,IAAG,QAAK,EAQlBxgE,KAAKsoD,UAAYA,EACjBtoD,KAAKugE,SAAWA,EAChBvgE,KAAKwgE,WAAaA,EAClBxgE,KAAKygE,SAAW,YA8BpB,OA1BE,YAAAlpD,SAAA,WACE,MAAO,QAAQvX,KAAKygE,SAAQ,cAAczgE,KAAKugE,SAAQ,KAMnD,YAAA18C,QAAN,W,oGACQ0N,EAAO,CACXmvC,UAAW1gE,KAAKugE,SAChBI,YAAa3gE,KAAKwgE,Y,iBAOhB,O,sBAAA,GAAMxgE,KAAKsoD,UAAUpB,KAAoB,UAAW31B,I,OAGtD,OAJMqvC,EACJ,SACF5gE,KAAKygE,SAAWG,EAAaC,SAC7B7gE,KAAKsoD,UAAUwY,UAAYF,EAAaG,MACjC,CAAP,EAAOH,G,OAGP,O,WADAloD,QAAQqR,MAAM,eAAgB,GACvB,CAAP,EAAO,I,yBAGb,EAvDA,GAAa,EAAA6wC,Q,gOCHL,IAAAl5D,EAAU,aAElB,SAEMs/D,EAAqB,IAAIC,OAAO,iBAChCC,EAAmB,IAAID,OAAO,WAMvB,EAAA7T,cAAgB,SAAC5wC,GAC5B,OAAAA,EAAIG,QAAQqkD,EAAoB,MAAMrkD,QAAQukD,EAAkB,SAMlE,0BAA+B,G,IAC7B3T,EAAQ,WACRC,EAAS,YAMT,OAAO9rD,EAAM,EAAE8rD,GAAYD,KAIhB,EAAAjE,QAAU,SAACjhC,GAA0B,OAACA,GAASA,EAAMnnB,OAAS,GAG9D,EAAAovB,eAAiB,SAAC3e,EAAiBwvD,GAC9C,OAAAlhE,OAAOqW,UAAUga,eAAe9Y,KAAK7F,EAAQwvD,IAQlC,EAAAvN,OAAS,SAACtvD,EAAewK,QAAf,IAAAxK,MAAA,QAAe,IAAAwK,MAAA,GACpC,IAAMsyD,EAAQ78D,KAAK4oB,IAAI7oB,EAAGwK,GACpBuyD,EAAQ98D,KAAK2oB,IAAI5oB,EAAGwK,GAE1B,OAAOsyD,EAAQ78D,KAAKqvD,UAAYyN,EAAQD,IAG7B,EAAAE,UAAY,SAACh9D,EAAOwK,QAAP,IAAAxK,MAAA,QAAO,IAAAwK,MAAA,GAC/B,IAAMsyD,EAAQ78D,KAAK+O,KAAK/O,KAAK4oB,IAAI7oB,EAAGwK,IAC9BuyD,EAAQ98D,KAAK6O,MAAM7O,KAAK2oB,IAAI5oB,EAAGwK,IAErC,OAAOvK,KAAK6O,MAAMguD,EAAQ78D,KAAKqvD,UAAYyN,EAAQD,EAAQ,KAG7D,IAAMG,EACJ,CAAC,aAAc,WAAY,YAAa,WAoB1C,6BAAkCnd,GAChC,IAAMlC,EAAe,IAAI,EAAAtsB,aAMzB,OAvBF,SACE2xB,EACAia,GAIA,SAASC,IACPD,EAASpmB,SAASloB,KAAKwuC,GAEzB,SAASA,IACPH,EAAoB5+D,SAAQ,SAAC+N,GAAM,OAAA62C,EAAK51B,oBAAoBjhB,EAAG+wD,MAN1C,cAAnBD,EAASzqC,OASbwqC,EAAoB5+D,SAAQ,SAAC+N,GAAM,OAAA62C,EAAK31B,iBAAiBlhB,EAAG+wD,GAAQ,MAQpEE,CADIvd,EAAW,cACUlC,GAElBA,GAGI,EAAA0V,UAAY,CACvBrgD,SAAU,SAAC/F,GAKT,YALS,IAAAA,MAAA,IAAWuzC,MAKb,CAJMvzC,EAAKowD,WAAWrqD,WAAWsqD,SAAS,EAAG,KACvCrwD,EAAKswD,aAAavqD,WAAWsqD,SAAS,EAAG,KACzCrwD,EAAKuwD,aAAaxqD,WAAWsqD,SAAS,EAAG,MAE5B7kD,KAAK,OAItB,EAAAy1C,YAAc,SAACuP,EAAgBC,GAC1C,IAAMzlD,EAAM,IAAIO,IAAIilD,GAEpB,OADe,IAAIta,gBAAgBlrC,EAAIurC,QACzBtqC,IAAIwkD,IAGP,EAAAC,MAAQ,eCxGjBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBl3D,IAAjBm3D,EACH,OAAOA,EAAa1iE,QAGrB,IAAIC,EAASsiE,EAAyBE,GAAY,CAGjDziE,QAAS,IAOV,OAHA2iE,EAAoBF,GAAU7qD,KAAK3X,EAAOD,QAASC,EAAQA,EAAOD,QAASwiE,GAGpEviE,EAAOD,Q,OCpBfwiE,EAAoBlzD,EAAI,SAAStP,EAAS8X,GACzC,IAAI,IAAI9U,KAAO8U,EACX0qD,EAAoBhrD,EAAEM,EAAY9U,KAASw/D,EAAoBhrD,EAAExX,EAASgD,IAC5E3C,OAAOC,eAAeN,EAASgD,EAAK,CAAEqT,YAAY,EAAMwH,IAAK/F,EAAW9U,MCJ3Ew/D,EAAoBhrD,EAAI,SAASe,EAAKqqD,GAAQ,OAAOviE,OAAOqW,UAAUga,eAAe9Y,KAAKW,EAAKqqD,ICC/FJ,EAAoBzY,EAAI,SAAS/pD,GACX,oBAAXiU,QAA0BA,OAAO4uD,aAC1CxiE,OAAOC,eAAeN,EAASiU,OAAO4uD,YAAa,CAAEtiE,MAAO,WAE7DF,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,KCF7BiiE,EAAoB,K","file":"roundware.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RoundwareWebFramework\"] = factory();\n\telse\n\t\troot[\"RoundwareWebFramework\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    meta_1.coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexports.default = bbox;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = invariant_1.getCoord(point);\n    var geom = invariant_1.getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\nexports.default = booleanPointInPolygon;\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) {\n        throw new Error(\"geojson is required\");\n    }\n    switch (geojson.type) {\n        case \"Feature\":\n            return cloneFeature(geojson);\n        case \"FeatureCollection\":\n            return cloneFeatureCollection(geojson);\n        case \"Point\":\n        case \"LineString\":\n        case \"Polygon\":\n        case \"MultiPoint\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\":\n        case \"GeometryCollection\":\n            return cloneGeometry(geojson);\n        default:\n            throw new Error(\"unknown GeoJSON type\");\n    }\n}\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = { type: \"Feature\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"properties\":\n            case \"geometry\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) {\n        return cloned;\n    }\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === \"object\") {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            }\n            else if (Array.isArray(value)) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            }\n            else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        }\n        else {\n            cloned[key] = value;\n        }\n    });\n    return cloned;\n}\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = { type: \"FeatureCollection\" };\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n            case \"type\":\n            case \"features\":\n                return;\n            default:\n                cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = { type: geometry.type };\n    if (geometry.bbox) {\n        geom.bbox = geometry.bbox;\n    }\n    if (geometry.type === \"GeometryCollection\") {\n        geom.geometries = geometry.geometries.map(function (g) {\n            return cloneGeometry(g);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    var cloned = coords;\n    if (typeof cloned[0] !== \"object\") {\n        return cloned.slice();\n    }\n    return cloned.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\nexports.default = clone;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar invariant_1 = require(\"@turf/invariant\");\nvar helpers_1 = require(\"@turf/helpers\");\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = invariant_1.getCoord(from);\n    var coordinates2 = invariant_1.getCoord(to);\n    var dLat = helpers_1.degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = helpers_1.degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = helpers_1.degreesToRadians(coordinates1[1]);\n    var lat2 = helpers_1.degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return helpers_1.radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexports.default = distance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.37,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return !!input && input.constructor === Object;\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nexports.getCoord = getCoord;\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\nexports.getCoords = getCoords;\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        helpers_1.isNumber(coordinates[0]) &&\n        helpers_1.isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\nexports.containsNumber = containsNumber;\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\nexports.geojsonType = geojsonType;\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\nexports.featureOf = featureOf;\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\nexports.collectionOf = collectionOf;\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\nexports.getGeom = getGeom;\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\nexports.getType = getType;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bbox_1 = __importDefault(require(\"@turf/bbox\"));\nvar invariant_1 = require(\"@turf/invariant\");\nvar helpers_1 = require(\"@turf/helpers\");\nvar clone_1 = __importDefault(require(\"@turf/clone\"));\n/**\n * Converts (Multi)LineString(s) to Polygon(s).\n *\n * @name lineToPolygon\n * @param {FeatureCollection|Feature<LineString|MultiLineString>} lines Features to convert\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] translates GeoJSON properties to Feature\n * @param {boolean} [options.autoComplete=true] auto complete linestrings (matches first & last coordinates)\n * @param {boolean} [options.orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @param {boolean} [options.mutate=false] mutate the original linestring using autoComplete (matches first & last coordinates)\n * @returns {Feature<Polygon|MultiPolygon>} converted to Polygons\n * @example\n * var line = turf.lineString([[125, -30], [145, -30], [145, -20], [125, -20], [125, -30]]);\n *\n * var polygon = turf.lineToPolygon(line);\n *\n * //addToMap\n * var addToMap = [polygon];\n */\nfunction lineToPolygon(lines, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    var properties = options.properties;\n    var autoComplete = options.autoComplete;\n    var orderCoords = options.orderCoords;\n    var mutate = options.mutate;\n    // default params\n    autoComplete = autoComplete !== undefined ? autoComplete : true;\n    orderCoords = orderCoords !== undefined ? orderCoords : true;\n    mutate = mutate !== undefined ? mutate : false;\n    if (!mutate) {\n        lines = clone_1.default(lines);\n    }\n    switch (lines.type) {\n        case \"FeatureCollection\":\n            var coords = [];\n            lines.features.forEach(function (line) {\n                coords.push(invariant_1.getCoords(lineStringToPolygon(line, {}, autoComplete, orderCoords)));\n            });\n            return helpers_1.multiPolygon(coords, properties);\n        default:\n            return lineStringToPolygon(lines, properties, autoComplete, orderCoords);\n    }\n}\n/**\n * LineString to Polygon\n *\n * @private\n * @param {Feature<LineString|MultiLineString>} line line\n * @param {Object} [properties] translates GeoJSON properties to Feature\n * @param {boolean} [autoComplete=true] auto complete linestrings\n * @param {boolean} [orderCoords=true] sorts linestrings to place outer ring at the first position of the coordinates\n * @returns {Feature<Polygon>} line converted to Polygon\n */\nfunction lineStringToPolygon(line, properties, autoComplete, orderCoords) {\n    properties = properties\n        ? properties\n        : line.type === \"Feature\"\n            ? line.properties\n            : {};\n    var geom = invariant_1.getGeom(line);\n    var coords = geom.coordinates;\n    var type = geom.type;\n    if (!coords.length)\n        throw new Error(\"line must contain coordinates\");\n    switch (type) {\n        case \"LineString\":\n            if (autoComplete)\n                coords = autoCompleteCoords(coords);\n            return helpers_1.polygon([coords], properties);\n        case \"MultiLineString\":\n            var multiCoords = [];\n            var largestArea = 0;\n            coords.forEach(function (coord) {\n                if (autoComplete)\n                    coord = autoCompleteCoords(coord);\n                // Largest LineString to be placed in the first position of the coordinates array\n                if (orderCoords) {\n                    var area = calculateArea(bbox_1.default(helpers_1.lineString(coord)));\n                    if (area > largestArea) {\n                        multiCoords.unshift(coord);\n                        largestArea = area;\n                    }\n                    else\n                        multiCoords.push(coord);\n                }\n                else {\n                    multiCoords.push(coord);\n                }\n            });\n            return helpers_1.polygon(multiCoords, properties);\n        default:\n            throw new Error(\"geometry type \" + type + \" is not supported\");\n    }\n}\n/**\n * Auto Complete Coords - matches first & last coordinates\n *\n * @private\n * @param {Array<Array<number>>} coords Coordinates\n * @returns {Array<Array<number>>} auto completed coordinates\n */\nfunction autoCompleteCoords(coords) {\n    var first = coords[0];\n    var x1 = first[0];\n    var y1 = first[1];\n    var last = coords[coords.length - 1];\n    var x2 = last[0];\n    var y2 = last[1];\n    if (x1 !== x2 || y1 !== y2) {\n        coords.push(first);\n    }\n    return coords;\n}\n/**\n * area - quick approximate area calculation (used to sort)\n *\n * @private\n * @param {Array<number>} bbox BBox [west, south, east, north]\n * @returns {number} very quick area calculation\n */\nfunction calculateArea(bbox) {\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    return Math.abs(west - east) * Math.abs(south - north);\n}\nexports.default = lineToPolygon;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = require('@turf/helpers');\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            helpers.feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = helpers.lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              helpers.lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return helpers.lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return helpers.lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!helpers.isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return helpers.point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return helpers.point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return helpers.point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return helpers.point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.coordAll = coordAll;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.findSegment = findSegment;\nexports.findPoint = findPoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Taken from http://geomalgorithms.com/a02-_lines.html\nvar distance_1 = __importDefault(require(\"@turf/distance\"));\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\nvar meta_1 = require(\"@turf/meta\");\nvar rhumb_distance_1 = __importDefault(require(\"@turf/rhumb-distance\"));\n/**\n * Returns the minimum distance between a {@link Point} and a {@link LineString}, being the distance from a line the\n * minimum distance between the point and any segment of the `LineString`.\n *\n * @name pointToLineDistance\n * @param {Feature<Point>|Array<number>} pt Feature or Geometry\n * @param {Feature<LineString>} line GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be anything supported by turf/convertLength\n * (ex: degrees, radians, miles, or kilometers)\n * @param {string} [options.method=\"geodesic\"] wether to calculate the distance based on geodesic (spheroid) or\n * planar (flat) method. Valid options are 'geodesic' or 'planar'.\n * @returns {number} distance between point and line\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[1, 1],[-1, 1]]);\n *\n * var distance = turf.pointToLineDistance(pt, line, {units: 'miles'});\n * //=69.11854715938406\n */\nfunction pointToLineDistance(pt, line, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    if (!options.method) {\n        options.method = \"geodesic\";\n    }\n    if (!options.units) {\n        options.units = \"kilometers\";\n    }\n    // validation\n    if (!pt) {\n        throw new Error(\"pt is required\");\n    }\n    if (Array.isArray(pt)) {\n        pt = helpers_1.point(pt);\n    }\n    else if (pt.type === \"Point\") {\n        pt = helpers_1.feature(pt);\n    }\n    else {\n        invariant_1.featureOf(pt, \"Point\", \"point\");\n    }\n    if (!line) {\n        throw new Error(\"line is required\");\n    }\n    if (Array.isArray(line)) {\n        line = helpers_1.lineString(line);\n    }\n    else if (line.type === \"LineString\") {\n        line = helpers_1.feature(line);\n    }\n    else {\n        invariant_1.featureOf(line, \"LineString\", \"line\");\n    }\n    var distance = Infinity;\n    var p = pt.geometry.coordinates;\n    meta_1.segmentEach(line, function (segment) {\n        var a = segment.geometry.coordinates[0];\n        var b = segment.geometry.coordinates[1];\n        var d = distanceToSegment(p, a, b, options);\n        if (d < distance) {\n            distance = d;\n        }\n    });\n    return helpers_1.convertLength(distance, \"degrees\", options.units);\n}\n/**\n * Returns the distance between a point P on a segment AB.\n *\n * @private\n * @param {Array<number>} p external point\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Object} [options={}] Optional parameters\n * @returns {number} distance\n */\nfunction distanceToSegment(p, a, b, options) {\n    var v = [b[0] - a[0], b[1] - a[1]];\n    var w = [p[0] - a[0], p[1] - a[1]];\n    var c1 = dot(w, v);\n    if (c1 <= 0) {\n        return calcDistance(p, a, { method: options.method, units: \"degrees\" });\n    }\n    var c2 = dot(v, v);\n    if (c2 <= c1) {\n        return calcDistance(p, b, { method: options.method, units: \"degrees\" });\n    }\n    var b2 = c1 / c2;\n    var Pb = [a[0] + b2 * v[0], a[1] + b2 * v[1]];\n    return calcDistance(p, Pb, { method: options.method, units: \"degrees\" });\n}\nfunction dot(u, v) {\n    return u[0] * v[0] + u[1] * v[1];\n}\nfunction calcDistance(a, b, options) {\n    return options.method === \"planar\"\n        ? rhumb_distance_1.default(a, b, options)\n        : distance_1.default(a, b, options);\n}\nexports.default = pointToLineDistance;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://en.wikipedia.org/wiki/Rhumb_line\nvar helpers_1 = require(\"@turf/helpers\");\nvar invariant_1 = require(\"@turf/invariant\");\n/**\n * Calculates the distance along a rhumb line between two {@link Point|points} in degrees, radians,\n * miles, or kilometers.\n *\n * @name rhumbDistance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.rhumbDistance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction rhumbDistance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var origin = invariant_1.getCoord(from);\n    var destination = invariant_1.getCoord(to);\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] +=\n        destination[0] - origin[0] > 180\n            ? -360\n            : origin[0] - destination[0] > 180\n                ? 360\n                : 0;\n    var distanceInMeters = calculateRhumbDistance(origin, destination);\n    var distance = helpers_1.convertLength(distanceInMeters, \"meters\", options.units);\n    return distance;\n}\n/**\n * Returns the distance travelling from ‘this’ point to destination point along a rhumb line.\n * Adapted from Geodesy: https://github.com/chrisveness/geodesy/blob/master/latlon-spherical.js\n *\n * @private\n * @param   {Array<number>} origin point.\n * @param   {Array<number>} destination point.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {number} Distance in km between this point and destination point (same units as radius).\n *\n * @example\n *     var p1 = new LatLon(51.127, 1.338);\n *     var p2 = new LatLon(50.964, 1.853);\n *     var d = p1.distanceTo(p2); // 40.31 km\n */\nfunction calculateRhumbDistance(origin, destination, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n    radius = radius === undefined ? helpers_1.earthRadius : Number(radius);\n    // see www.edwilliams.org/avform.htm#Rhumb\n    var R = radius;\n    var phi1 = (origin[1] * Math.PI) / 180;\n    var phi2 = (destination[1] * Math.PI) / 180;\n    var DeltaPhi = phi2 - phi1;\n    var DeltaLambda = (Math.abs(destination[0] - origin[0]) * Math.PI) / 180;\n    // if dLon over 180° take shorter rhumb line across the anti-meridian:\n    if (DeltaLambda > Math.PI) {\n        DeltaLambda -= 2 * Math.PI;\n    }\n    // on Mercator projection, longitude distances shrink by latitude; q is the 'stretch factor'\n    // q becomes ill-conditioned along E-W line (0/0); use empirical tolerance to avoid it\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n    // distance is pythagoras on 'stretched' Mercator projection\n    var delta = Math.sqrt(DeltaPhi * DeltaPhi + q * q * DeltaLambda * DeltaLambda); // angular distance in radians\n    var dist = delta * R;\n    return dist;\n}\nexports.default = rhumbDistance;\n","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n    var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);\n    var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);\n    var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck__default['default'](this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass__default['default'](AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              if (isCancelScheduledValuesAutomationEvent(automationEvent) && isSetValueCurveAutomationEvent(currentAutomationEvent)) {\n                return currentAutomationEvent.startTime + currentAutomationEvent.duration >= eventTime;\n              }\n\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray__default['default'](_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray__default['default'](_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","export const createAbortError = () => new DOMException('', 'AbortError');\n//# sourceMappingURL=abort-error.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=globals.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=split-import-statements.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (cacheTestResult, createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, ongoingRequests, resolvedRequests, testAudioWorkletProcessorPostMessageSupport, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        // Bug #59: Safari does not implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return Promise.all([\n                fetchSource(moduleURL),\n                Promise.resolve(cacheTestResult(testAudioWorkletProcessorPostMessageSupport, testAudioWorkletProcessorPostMessageSupport))\n            ]).then(([[source, absoluteUrl], isSupportingPostMessage]) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below.\n                 *\n                 * ```js\n                 * class extends AudioWorkletProcessor {\n                 *\n                 *     __buffers = new WeakSet();\n                 *\n                 *     constructor () {\n                 *         super();\n                 *\n                 *         this.port.postMessage = ((postMessage) => {\n                 *             return (message, transferables) => {\n                 *                 const filteredTransferables = (transferables)\n                 *                     ? transferables.filter((transferable) => !this.__buffers.has(transferable))\n                 *                     : transferables;\n                 *\n                 *                 return postMessage.call(this.port, message, filteredTransferables);\n                 *              };\n                 *         })(this.port.postMessage);\n                 *     }\n                 * }\n                 * ```\n                 */\n                const patchedSourceWithoutImportStatements = isSupportingPostMessage\n                    ? sourceWithoutImportStatements\n                    : sourceWithoutImportStatements.replace(/\\s+extends\\s+AudioWorkletProcessor\\s*{/, ` extends (class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}){`);\n                /*\n                 * Bug #170: Chrome and Edge do call process() with an array with empty channelData for each input if no input is connected.\n                 *\n                 * Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     __collectBuffers = (array) => {\n                 *         array.forEach((element) => this.__buffers.add(element.buffer));\n                 *     };\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         inputs.forEach(this.__collectBuffers);\n                 *         outputs.forEach(this.__collectBuffers);\n                 *         this.__collectBuffers(Object.values(parameters));\n                 *\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const memberDefinition = isSupportingPostMessage ? '' : '__c = (a) => a.forEach(e=>this.__b.add(e.buffer));';\n                const bufferRegistration = isSupportingPostMessage\n                    ? ''\n                    : 'i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));';\n                const wrappedSource = `${importStatements};(registerProcessor=>{${patchedSourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{${memberDefinition}process(i,o,p){${bufferRegistration}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`;\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                return nativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => {\n                    if (isNativeOfflineAudioContext(nativeContext)) {\n                        return;\n                    }\n                    // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n                    const backupOfflineAudioContext = getOrCreateBackupOfflineAudioContext(nativeContext);\n                    return backupOfflineAudioContext.audioWorklet.addModule(url, options);\n                })\n                    .finally(() => URL.revokeObjectURL(url));\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then(([source, absoluteUrl]) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .finally(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=add-audio-worklet-module.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=get-value-for-key.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array.from(set).filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=pick-element-from-set.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-node.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=get-event-listeners-of-audio-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=set-internal-state-to-active.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=audio-worklet-node.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode).forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=set-internal-state-to-passive.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => connections.size === 0)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=set-internal-state-to-passive-when-necessary.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=is-owned-by-context.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const createIndexSizeError = () => new DOMException('', 'IndexSizeError');\n//# sourceMappingURL=index-size-error.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=wrap-audio-buffer-get-channel-data-method.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)\n                ? new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate })\n                : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype) ||\n                audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-constructor.js.map","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=constants.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=is-active-audio-node.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline ? createAudioBufferSourceNodeRenderer() : null));\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = mergedOptions.buffer !== null;\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Safari does not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeAudioBufferSourceNode.buffer = value;\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-constructor.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=get-audio-param-connections.js.map","import { isAudioBufferSourceNode } from '../guards/audio-buffer-source-node';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { isBiquadFilterNode } from '../guards/biquad-filter-node';\nimport { isConstantSourceNode } from '../guards/constant-source-node';\nimport { isGainNode } from '../guards/gain-node';\nimport { isOscillatorNode } from '../guards/oscillator-node';\nimport { isStereoPannerNode } from '../guards/stereo-panner-node';\nimport { getAudioNodeConnections } from './get-audio-node-connections';\nimport { getAudioParamConnections } from './get-audio-param-connections';\nimport { isActiveAudioNode } from './is-active-audio-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\nexport const deactivateActiveAudioNodeInputConnections = (audioNode, trace) => {\n    const { activeInputs } = getAudioNodeConnections(audioNode);\n    activeInputs.forEach((connections) => connections.forEach(([source]) => {\n        if (!trace.includes(audioNode)) {\n            deactivateActiveAudioNodeInputConnections(source, [...trace, audioNode]);\n        }\n    }));\n    const audioParams = isAudioBufferSourceNode(audioNode)\n        ? [\n            // Bug #149: Safari does not yet support the detune AudioParam.\n            audioNode.playbackRate\n        ]\n        : isAudioWorkletNode(audioNode)\n            ? Array.from(audioNode.parameters.values())\n            : isBiquadFilterNode(audioNode)\n                ? [audioNode.Q, audioNode.detune, audioNode.frequency, audioNode.gain]\n                : isConstantSourceNode(audioNode)\n                    ? [audioNode.offset]\n                    : isGainNode(audioNode)\n                        ? [audioNode.gain]\n                        : isOscillatorNode(audioNode)\n                            ? [audioNode.detune, audioNode.frequency]\n                            : isStereoPannerNode(audioNode)\n                                ? [audioNode.pan]\n                                : [];\n    for (const audioParam of audioParams) {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections !== undefined) {\n            audioParamConnections.activeInputs.forEach(([source]) => deactivateActiveAudioNodeInputConnections(source, trace));\n        }\n    }\n    if (isActiveAudioNode(audioNode)) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=deactivate-active-audio-node-input-connections.js.map","export const isAudioBufferSourceNode = (audioNode) => {\n    return 'playbackRate' in audioNode;\n};\n//# sourceMappingURL=audio-buffer-source-node.js.map","export const isBiquadFilterNode = (audioNode) => {\n    return 'frequency' in audioNode && 'gain' in audioNode;\n};\n//# sourceMappingURL=biquad-filter-node.js.map","export const isConstantSourceNode = (audioNode) => {\n    return 'offset' in audioNode;\n};\n//# sourceMappingURL=constant-source-node.js.map","export const isGainNode = (audioNode) => {\n    return !('frequency' in audioNode) && 'gain' in audioNode;\n};\n//# sourceMappingURL=gain-node.js.map","export const isOscillatorNode = (audioNode) => {\n    return 'detune' in audioNode && 'frequency' in audioNode;\n};\n//# sourceMappingURL=oscillator-node.js.map","export const isStereoPannerNode = (audioNode) => {\n    return 'pan' in audioNode;\n};\n//# sourceMappingURL=stereo-panner-node.js.map","import { deactivateActiveAudioNodeInputConnections } from './deactivate-active-audio-node-input-connections';\nexport const deactivateAudioGraph = (context) => {\n    deactivateActiveAudioNodeInputConnections(context.destination, []);\n};\n//# sourceMappingURL=deactivate-audio-graph.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return (latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback')));\n};\n//# sourceMappingURL=is-valid-latency-hint.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=audio-node.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=audio-node-output-connection.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=insert-element-in-set.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-param.js.map","import { insertElementInSet } from './insert-element-in-set';\nexport const addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output, ignoreDuplicates);\n    }\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-param.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=native-audio-node-faker.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=connect-native-audio-node-to-native-audio-node.js.map","export const deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\n//# sourceMappingURL=delete-active-input-connection.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=delete-event-listeners-of-audio-node.js.map","import { getValueForKey } from './get-value-for-key';\nimport { pickElementFromSet } from './pick-element-from-set';\nexport const deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => passiveInputConnection[0] === output);\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\n//# sourceMappingURL=delete-passive-input-connection-to-audio-param.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=disconnect-native-audio-node-from-native-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=get-native-audio-param.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=is-passive-audio-node.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source.connect(analyzer).connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        // tslint:disable-next-line:deprecation\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=test-audio-node-disconnect-method-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, count === undefined ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=visit-each-audio-node-once.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=native-audio-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        // tslint:disable-next-line:invalid-void\n        return (destination, output = 0, input = 0) => {\n            const returnValue = isNativeAudioNode(destination) ? connect(destination, output, input) : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => connection.input !== input || connection.output !== output)) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== destinationOrOutput);\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination.filter((connection) => connection.output !== output && (connection.input !== input || input === undefined));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination.forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=wrap-audio-node-disconnect-method.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { addActiveInputConnectionToAudioParam } from '../helpers/add-active-input-connection-to-audio-param';\nimport { addPassiveInputConnectionToAudioParam } from '../helpers/add-passive-input-connection-to-audio-param';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteActiveInputConnection } from '../helpers/delete-active-input-connection';\nimport { deleteActiveInputConnectionToAudioParam } from '../helpers/delete-active-input-connection-to-audio-param';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { deletePassiveInputConnectionToAudioParam } from '../helpers/delete-passive-input-connection-to-audio-param';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output, isOffline) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = (isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isOffline && !isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    };\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output, true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, isOffline, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, isOffline, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isOffline && !isPartOfACycle(source)) {\n            getNativeAudioNode(source).disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source, isOffline) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, isOffline, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, isOffline, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array.from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => outputConnection[0] === destination &&\n        (output === undefined || outputConnection[1] === output) &&\n        (input === undefined || outputConnection[2] === input))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, isOffline, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, isOffline, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, addConnectionToAudioNode, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) &&\n                true !==\n                    cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                        return testAudioNodeDisconnectMethodSupport(nativeContext);\n                    })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (context.state !== 'closed' && isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        // tslint:disable-next-line:invalid-void\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    const isPassive = isPassiveAudioNode(this);\n                    if (isOffline || isPassive) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    if (this.context.state !== 'closed' && !isPassive && isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Safari does not throw the correct exception so far.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = addConnectionToAudioNode(this, destination, output, input, isOffline);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = addConnectionToAudioParamOfAudioContext(this, destination, output, isOffline);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this, isOffline);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, isOffline, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, isOffline, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-node-constructor.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=read-only-map.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    parameterData: {},\n    processorOptions: {}\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options) {\n            var _a;\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizeAudioWorkletNodeOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = nodeNameToProcessorConstructorMap === null || nodeNameToProcessorConstructorMap === void 0 ? void 0 : nodeNameToProcessorConstructorMap.get(name);\n            // Bug #186: Chrome, Edge and Opera do not allow to create an AudioWorkletNode on a closed AudioContext.\n            const nativeContextOrBackupOfflineAudioContext = isOffline || nativeContext.state !== 'closed'\n                ? nativeContext\n                : (_a = getBackupOfflineAudioContext(nativeContext)) !== null && _a !== void 0 ? _a : nativeContext;\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContextOrBackupOfflineAudioContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null));\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n            const { activeInputs } = getAudioNodeConnections(this);\n            setActiveAudioWorkletNodeInputs(nativeAudioWorkletNode, activeInputs);\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror =\n                nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener\n                    ? value\n                    : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=audio-worklet-node-constructor.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=copy-to-channel.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = typeof y === 'number' ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=create-nested-arrays.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = numberOfOutputChannels === 0\n        ? null\n        : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n    const parameters = Array.from(proxy.parameters.keys()).reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs.map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', {\n                colno: error.colno,\n                filename: error.filename,\n                lineno: error.lineno,\n                message: error.message\n            }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            const outputChannelCount = Array.isArray(options.outputChannelCount)\n                ? options.outputChannelCount\n                : Array.from(options.outputChannelCount);\n            // Bug #61: Only Chrome, Edge, Firefox & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise.all(Array.from(proxy.parameters.values()).map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise.all(gainNodes.map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, numberOfChannels === 0 ? null : await renderBuffer(), nativeOfflineAudioContext, options, outputChannelCount, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-worklet-node-renderer-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-audio-worklet-processor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = (isOffline ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Safari does not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            // Bug #77: Firefox & Safari do not export the correct value for minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            // Bug #189: Safari does throw an InvalidStateError.\n            try {\n                this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            }\n            catch (err) {\n                if (err.code === 11) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            // Bug #68: Safari does not throw an error if the parameters differ in their length.\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=biquad-filter-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizeChannelSplitterOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null));\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-splitter-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline ? createConstantSourceNodeRendererFactory() : null));\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and minValue\n             * for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=constant-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = (isOffline ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n            if (mergedOptions.buffer !== null) {\n                setAudioNodeTailTime(this, mergedOptions.buffer.duration);\n            }\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, 44100);\n                this._isBufferNullified = true;\n                setAudioNodeTailTime(this, 0);\n            }\n            else {\n                this._isBufferNullified = false;\n                setAudioNodeTailTime(this, this._nativeConvolverNode.buffer === null ? 0 : this._nativeConvolverNode.buffer.duration);\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=convolver-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = (isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime);\n            setAudioNodeTailTime(this, mergedOptions.maxDelayTime);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=delay-node-constructor.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes.forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = (isOffline ? createDynamicsCompressorNodeRenderer() : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold);\n            setAudioNodeTailTime(this, 0.006);\n        }\n        get attack() {\n            return this._attack;\n        }\n        // Bug #108: Safari allows a channelCount of three and above which is why the getter and setter needs to be overwritten here.\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = (isOffline ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=gain-node-constructor.js.map","export const createInvalidStateError = () => new DOMException('', 'InvalidStateError');\n//# sourceMappingURL=invalid-state-error.js.map","export const createInvalidAccessError = () => new DOMException('', 'InvalidAccessError');\n//# sourceMappingURL=invalid-access-error.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=filter-buffer.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=test-promise-support.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=minimal-offline-audio-context-constructor.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=assign-native-audio-node-options.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=test-analyser-node-get-float-time-domain-data-method-support.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=assign-native-audio-node-audio-param-value.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=compute-buffer-size.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNode = (nativeContext, options) => {\n    const nativeBiquadFilterNode = nativeContext.createBiquadFilter();\n    assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n    assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n    assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n    return nativeBiquadFilterNode;\n};\n//# sourceMappingURL=native-biquad-filter-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNode = (nativeContext, options) => {\n    const nativeChannelSplitterNode = nativeContext.createChannelSplitter(options.numberOfOutputs);\n    // Bug #96: Safari does not have the correct channelCount.\n    // Bug #29: Safari does not have the correct channelCountMode.\n    // Bug #31: Safari does not have the correct channelInterpretation.\n    assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n    // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Edge, Firefox & Opera partially support the spec yet.\n    wrapChannelSplitterNode(nativeChannelSplitterNode);\n    return nativeChannelSplitterNode;\n};\n//# sourceMappingURL=native-channel-splitter-node.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #30: Safari does not throw an error when attempting to change the channelCountMode to something other than explicit.\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    // Bug #32: Safari does not throw an error when attempting to change the channelInterpretation to something other than discrete.\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=wrap-channel-splitter-node.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=intercept-connections.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNode = (nativeContext, options) => {\n    const nativeDelayNode = nativeContext.createDelay(options.maxDelayTime);\n    assignNativeAudioNodeOptions(nativeDelayNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n    return nativeDelayNode;\n};\n//# sourceMappingURL=native-delay-node.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNode = (nativeContext, options) => {\n    const nativeGainNode = nativeContext.createGain();\n    assignNativeAudioNodeOptions(nativeGainNode, options);\n    assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n    return nativeGainNode;\n};\n//# sourceMappingURL=native-gain-node.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = b[0] * b[0] + b[1] * b[1];\n    return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];\n}\nfunction multiply(a, b) {\n    return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n        const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n        const feedbackLength = convertedFeedback.length;\n        const feedforwardLength = convertedFeedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedbackLength === 0 || feedbackLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforwardLength === 0 || feedforwardLength > 20) {\n            throw createNotSupportedError();\n        }\n        if (convertedFeedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (convertedFeedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                convertedFeedforward[i] /= convertedFeedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                convertedFeedback[i] /= convertedFeedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(convertedFeedforward, z);\n                    const denominator = evaluatePolynomial(convertedFeedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-faker-factory.js.map","export const createNativeScriptProcessorNode = (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n    return nativeContext.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n};\n//# sourceMappingURL=native-script-processor-node.js.map","export const createNotSupportedError = () => new DOMException('', 'NotSupportedError');\n//# sourceMappingURL=not-supported-error.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext).finally(() => {\n                this._state = null;\n                deactivateAudioGraph(this);\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=offline-audio-context-constructor.js.map","import { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    periodicWave: undefined,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = (isOffline ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Safari does not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            if (this.context.state !== 'closed') {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    if (isActiveAudioNode(this)) {\n                        setInternalStateToPassive(this);\n                    }\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=oscillator-node-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = (isOffline ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Safari does not export the correct values for maxValue and minValue.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=panner-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore, sanitizePeriodicWaveOptions) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizePeriodicWaveOptions({ ...DEFAULT_OPTIONS, ...options });\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return ((instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype) ||\n                periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=periodic-wave-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = (isOffline ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=stereo-panner-node-constructor.js.map","export const createUnknownError = () => new DOMException('', 'UnknownError');\n//# sourceMappingURL=unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = (isOffline ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=wave-shaper-node-constructor.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return curve[Math.floor(length / 2)] !== 0;\n    }\n    return curve[length / 2 - 1] + curve[length / 2] !== 0;\n};\n//# sourceMappingURL=is-dc-curve.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=overwrite-accessors.js.map","export const setValueAtTimeUntilPossible = (audioParam, value, startTime) => {\n    try {\n        audioParam.setValueAtTime(value, startTime);\n    }\n    catch (err) {\n        if (err.code !== 9) {\n            throw err;\n        }\n        setValueAtTimeUntilPossible(audioParam, value, startTime + 1e-7);\n    }\n};\n//# sourceMappingURL=set-value-at-time-until-possible.js.map","export const testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.start(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    nativeAudioBufferSourceNode.start();\n    nativeAudioBufferSourceNode.stop();\n    try {\n        nativeAudioBufferSourceNode.stop();\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createOscillator();\n    try {\n        nativeAudioBufferSourceNode.stop(-1);\n    }\n    catch (err) {\n        return err instanceof RangeError;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","/*\n * Bug #122: Edge up to version v18 did not allow to construct a DOMException'. It also had a couple more bugs but since this is easy to\n * test it's used here as a placeholder.\n *\n * Bug #27: Edge up to version v18 did reject an invalid arrayBuffer passed to decodeAudioData() with a DOMException.\n *\n * Bug #50: Edge up to version v18 did not allow to create AudioNodes on a closed context.\n *\n * Bug #57: Edge up to version v18 did not throw an error when assigning the type of an OscillatorNode to 'custom'.\n *\n * Bug #63: Edge up to version v18 did not expose the mediaElement property of a MediaElementAudioSourceNode.\n *\n * Bug #64: Edge up to version v18 did not support the MediaStreamAudioDestinationNode.\n *\n * Bug #71: Edge up to version v18 did not allow to set the buffer of an AudioBufferSourceNode to null.\n *\n * Bug #93: Edge up to version v18 did set the sampleRate of an AudioContext to zero when it was closed.\n *\n * Bug #101: Edge up to version v18 refused to execute decodeAudioData() on a closed context.\n *\n * Bug #106: Edge up to version v18 did not expose the maxValue and minValue properties of the pan AudioParam of a StereoPannerNode.\n *\n * Bug #110: Edge up to version v18 did not expose the maxValue and minValue properties of the attack, knee, ratio, release and threshold AudioParams of a DynamicsCompressorNode.\n *\n * Bug #123: Edge up to version v18 did not support HRTF as the panningModel for a PannerNode.\n *\n * Bug #145: Edge up to version v18 did throw an IndexSizeError when an OfflineAudioContext was created with a sampleRate of zero.\n *\n * Bug #161: Edge up to version v18 did not expose the maxValue and minValue properties of the delayTime AudioParam of a DelayNode.\n */\nexport const testDomExceptionConstructorSupport = () => {\n    try {\n        new DOMException(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-dom-exception-constructor-support.js.map","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=test-transferables-support.js.map","import { interceptConnections } from './intercept-connections';\nexport const wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (nativeAudioScheduledSourceNode, nativeContext) => {\n    const nativeGainNode = nativeContext.createGain();\n    nativeAudioScheduledSourceNode.connect(nativeGainNode);\n    const disconnectGainNode = ((disconnect) => {\n        return () => {\n            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n        };\n    })(nativeAudioScheduledSourceNode.disconnect);\n    nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n    interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        let isStopped = false;\n        return (when = 0) => {\n            if (isStopped) {\n                try {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                }\n                catch {\n                    nativeGainNode.gain.setValueAtTime(0, when);\n                }\n            }\n            else {\n                stop.call(nativeAudioScheduledSourceNode, when);\n                isStopped = true;\n            }\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=wrap-event-listener.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddActiveInputConnectionToAudioNode } from './factories/add-active-input-connection-to-audio-node';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddConnectionToAudioNode } from './factories/add-connection-to-audio-node';\nimport { createAddPassiveInputConnectionToAudioNode } from './factories/add-passive-input-connection-to-audio-node';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteActiveInputConnectionToAudioNode } from './factories/delete-active-input-connection-to-audio-node';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetActiveAudioWorkletNodeInputs } from './factories/get-active-audio-worklet-node-inputs';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioNodeTailTime } from './factories/get-audio-node-tail-time';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupOfflineAudioContext } from './factories/get-backup-offline-audio-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetOrCreateBackupOfflineAudioContext } from './factories/get-or-create-backup-offline-audio-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNode } from './factories/native-biquad-filter-node';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNode } from './factories/native-channel-splitter-node';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeDelayNode } from './factories/native-delay-node';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNode } from './factories/native-gain-node';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNode } from './factories/native-media-element-audio-source-node';\nimport { createNativeMediaStreamAudioDestinationNode } from './factories/native-media-stream-audio-destination-node';\nimport { createNativeMediaStreamAudioSourceNode } from './factories/native-media-stream-audio-source-node';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNode } from './factories/native-script-processor-node';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createSetActiveAudioWorkletNodeInputs } from './factories/set-active-audio-worklet-node-inputs';\nimport { createSetAudioNodeTailTime } from './factories/set-audio-node-tail-time';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestAudioWorkletProcessorPostMessageSupport } from './factories/test-audio-worklet-processor-post-message-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestConvolverNodeChannelCountSupport } from './factories/test-convolver-node-channel-count-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from './helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from './helpers/is-passive-audio-node';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { pickElementFromSet } from './helpers/pick-element-from-set';\nimport { sanitizeAudioWorkletNodeOptions } from './helpers/sanitize-audio-worklet-node-options';\nimport { sanitizeChannelSplitterOptions } from './helpers/sanitize-channel-splitter-options';\nimport { sanitizePeriodicWaveOptions } from './helpers/sanitize-periodic-wave-options';\nimport { setValueAtTimeUntilPossible } from './helpers/set-value-at-time-until-possible';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './helpers/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { testAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './helpers/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { testAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './helpers/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { testAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './helpers/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { testAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './helpers/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { testDomExceptionConstructorSupport } from './helpers/test-dom-exception-constructor-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './helpers/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst addActiveInputConnectionToAudioNode = createAddActiveInputConnectionToAudioNode(insertElementInSet);\nconst addPassiveInputConnectionToAudioNode = createAddPassiveInputConnectionToAudioNode(insertElementInSet);\nconst deleteActiveInputConnectionToAudioNode = createDeleteActiveInputConnectionToAudioNode(pickElementFromSet);\nconst audioNodeTailTimeStore = new WeakMap();\nconst getAudioNodeTailTime = createGetAudioNodeTailTime(audioNodeTailTimeStore);\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), createAddConnectionToAudioNode(addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode), cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst setAudioNodeTailTime = createSetAudioNodeTailTime(audioNodeTailTimeStore);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(nativeAudioContextConstructor, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext, sanitizeChannelSplitterOptions);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(createIndexSizeError);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet(), sanitizePeriodicWaveOptions);\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\nconst backupOfflineAudioContextStore = new WeakMap();\nconst getOrCreateBackupOfflineAudioContext = createGetOrCreateBackupOfflineAudioContext(backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = isSecureContext\n    ? createAddAudioWorkletModule(cacheTestResult, createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getNativeContext, getOrCreateBackupOfflineAudioContext, isNativeOfflineAudioContext, new WeakMap(), new WeakMap(), createTestAudioWorkletProcessorPostMessageSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window)\n    : undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst activeAudioWorkletNodeInputsStore = new WeakMap();\nconst getActiveAudioWorkletNodeInputs = createGetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore, getValueForKey);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst getBackupOfflineAudioContext = createGetBackupOfflineAudioContext(backupOfflineAudioContextStore);\nconst setActiveAudioWorkletNodeInputs = createSetActiveAudioWorkletNodeInputs(activeAudioWorkletNodeInputsStore);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = isSecureContext\n    ? createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getAudioNodeConnections, getBackupOfflineAudioContext, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, sanitizeAudioWorkletNodeOptions, setActiveAudioWorkletNodeInputs, wrapEventListener)\n    : undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestConvolverNodeChannelCountSupport(nativeOfflineAudioContextConstructor), testDomExceptionConstructorSupport, createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=module.js.map","export const createAddActiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n        insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output, ignoreDuplicates);\n    };\n};\n//# sourceMappingURL=add-active-input-connection-to-audio-node.js.map","export const createAddPassiveInputConnectionToAudioNode = (insertElementInSet) => {\n    return (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n        const passiveInputConnections = passiveInputs.get(source);\n        if (passiveInputConnections === undefined) {\n            passiveInputs.set(source, new Set([[output, input, eventListener]]));\n        }\n        else {\n            insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => passiveInputConnection[0] === output && passiveInputConnection[1] === input, ignoreDuplicates);\n        }\n    };\n};\n//# sourceMappingURL=add-passive-input-connection-to-audio-node.js.map","export const createDeleteActiveInputConnectionToAudioNode = (pickElementFromSet) => {\n    return (activeInputs, source, output, input) => {\n        return pickElementFromSet(activeInputs[input], (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n    };\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-node.js.map","export const createGetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode) => { var _a; return (_a = audioNodeTailTimeStore.get(audioNode)) !== null && _a !== void 0 ? _a : 0; };\n};\n//# sourceMappingURL=get-audio-node-tail-time.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=cache-test-result.js.map","export const createWindow = () => (typeof window === 'undefined' ? null : window);\n//# sourceMappingURL=window.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = nativeContext.createAnalyser();\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=native-analyser-node-factory.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=wrap-analyser-node-get-float-time-domain-data-method.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-node-renderer.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise.all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array.from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=analyser-node-renderer-factory.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=native-offline-audio-context-constructor.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-offline-audio-context.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=event-target-constructor.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=native-audio-context-constructor.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;\n    };\n};\n//# sourceMappingURL=is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;\n    };\n};\n//# sourceMappingURL=is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;\n    };\n};\n//# sourceMappingURL=is-native-audio-param.js.map","import { pickElementFromSet } from './pick-element-from-set';\nexport const deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => activeInputConnection[0] === source && activeInputConnection[1] === output);\n};\n//# sourceMappingURL=delete-active-input-connection-to-audio-param.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=add-audio-node-connections.js.map","import { deletePassiveInputConnectionToAudioNode } from '../helpers/delete-passive-input-connection-to-audio-node';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nexport const createAddConnectionToAudioNode = (addActiveInputConnectionToAudioNode, addPassiveInputConnectionToAudioNode, connectNativeAudioNodeToNativeAudioNode, deleteActiveInputConnectionToAudioNode, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getAudioNodeTailTime, getEventListenersOfAudioNode, getNativeAudioNode, insertElementInSet, isActiveAudioNode, isPartOfACycle, isPassiveAudioNode) => {\n    return (source, destination, output, input, isOffline) => {\n        const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n        const { outputs } = getAudioNodeConnections(source);\n        const eventListeners = getEventListenersOfAudioNode(source);\n        const eventListener = (isActive) => {\n            const nativeDestinationAudioNode = getNativeAudioNode(destination);\n            const nativeSourceAudioNode = getNativeAudioNode(source);\n            if (isActive) {\n                const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n                addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                if (isPassiveAudioNode(destination)) {\n                    setInternalStateToActive(destination);\n                }\n            }\n            else {\n                const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n                if (!isOffline && !isPartOfACycle(source)) {\n                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n                }\n                const tailTime = getAudioNodeTailTime(destination);\n                if (tailTime === 0) {\n                    if (isActiveAudioNode(destination)) {\n                        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                    }\n                }\n                else {\n                    setTimeout(() => {\n                        if (isActiveAudioNode(destination)) {\n                            setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n                        }\n                    }, tailTime * 1000);\n                }\n            }\n        };\n        if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input, true)) {\n            eventListeners.add(eventListener);\n            if (isActiveAudioNode(source)) {\n                addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n            }\n            else {\n                addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n            }\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=add-connection-to-audio-node.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=increment-cycle-counter-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=decrement-cycle-counter.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=delay-node.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=native-audio-buffer-constructor.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=convert-number-to-unsigned-long.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","// Bug #33: Safari exposes an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-constructor-support.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        nativeAudioScheduledSourceNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=add-silent-connection.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise.all(Array.from(audioParamConnections.activeInputs).map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=render-inputs-of-audio-param.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=connect-audio-param.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=native-audio-buffer-source-node-factory.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","export const testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.start();\n    }\n    catch {\n        return true;\n    }\n    return false;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","export const testAudioBufferSourceNodeStartMethodOffsetClampingSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n    nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n    try {\n        nativeAudioBufferSourceNode.start(0, 1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const testAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (nativeContext) => {\n    const nativeAudioBufferSourceNode = nativeContext.createBufferSource();\n    nativeAudioBufferSourceNode.start();\n    try {\n        nativeAudioBufferSourceNode.stop();\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, 44100);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return value === nullifiedBuffer ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=render-automation.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=get-audio-param-renderer.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-buffer-source-node-renderer-factory.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor, setValueAtTimeUntilPossible) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return maxValue === null ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return minValue === null ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array.from(automationEventList).pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array.from(automationEventList).pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                // Bug #45: Safari does not throw an error yet.\n                if (value === 0) {\n                    throw new RangeError();\n                }\n                // Bug #187: Safari does not throw an error yet.\n                if (!Number.isFinite(endTime) || endTime < 0) {\n                    throw new RangeError();\n                }\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                // Bug 183: Safari only accepts a Float32Array.\n                const convertedValues = values instanceof Float32Array ? values : new Float32Array(values);\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor(endTime * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((convertedValues.length - 1) / duration) * ((firstSample + i) / sampleRate - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] =\n                            lowerIndex === upperIndex\n                                ? convertedValues[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * convertedValues[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * convertedValues[upperIndex];\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        setValueAtTimeUntilPossible(audioParam, interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    setValueAtTimeUntilPossible(audioParam, convertedValues[convertedValues.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(convertedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(convertedValues, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=audio-param-renderer.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=add-audio-param-connections.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-renderer-factory.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Safari does not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Safari does not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=native-audio-destination-node.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=biquad-filter-node-renderer-factory.js.map","export const createSetAudioNodeTailTime = (audioNodeTailTimeStore) => {\n    return (audioNode, tailTime) => audioNodeTailTimeStore.set(audioNode, tailTime);\n};\n//# sourceMappingURL=set-audio-node-tail-time.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            // tslint:disable-next-line:invalid-void\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => connection[0] === destination && connection[1] === output && connection[2] === input, true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => connection[0] === destination && connection[1] === output, true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput &&\n                            (output === undefined || connection[1] === output) &&\n                            (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=monitor-connections.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, monitorConnections) => {\n    return (nativeContext, channelMergerNode) => {\n        // Bug #15: Safari does not return the default properties.\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = nativeContext.createBufferSource();\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnections(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=wrap-channel-merger-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (nativeAudioContextConstructor, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = nativeContext.createChannelMerger(options.numberOfInputs);\n        /*\n         * Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here.\n         */\n        if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=native-channel-merger-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-merger-node-renderer-factory.js.map","export const sanitizeChannelSplitterOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\n//# sourceMappingURL=sanitize-channel-splitter-options.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=channel-splitter-node-renderer-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = nativeContext.createConstantSource();\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Safari does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=native-constant-source-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=constant-source-node-renderer-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = nativeContext.createConvolver();\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Safari does allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Safari allows to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=native-convolver-node-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=convolver-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=delay-node-renderer-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = nativeContext.createDynamicsCompressor();\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Safari allows a channelCount of three and above.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=native-dynamics-compressor-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=dynamics-compressor-node-renderer-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=gain-node-renderer-factory.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Chrome and Edge do not advance currentTime if it is not accessed while rendering the audio.\n            return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=render-native-offline-audio-context.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=test-offline-audio-context-current-time-support.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const convertedFeedback = feedback instanceof Float64Array ? feedback : new Float64Array(feedback);\n    const convertedFeedforward = feedforward instanceof Float64Array ? feedforward : new Float64Array(feedforward);\n    const feedbackLength = convertedFeedback.length;\n    const feedforwardLength = convertedFeedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (convertedFeedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            convertedFeedforward[i] /= convertedFeedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            convertedFeedback[i] /= convertedFeedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(convertedFeedback, feedbackLength, convertedFeedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n                nativeIIRFilterNode = nativeOfflineAudioContext.createIIRFilter(feedforward, feedback);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=iir-filter-node-renderer-factory.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=wrap-iir-filter-node-get-frequency-response-method.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        // @todo TypeScript defines the parameters of createIIRFilter() as arrays of numbers.\n        const nativeIIRFilterNode = nativeContext.createIIRFilter(options.feedforward, options.feedback);\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=native-iir-filter-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome, Edge & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: 9\n            });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: value\n                });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Safari does not support ConstantSourceNodes and does not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            // tslint:disable-next-line:deprecation\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => value !== lastPosition[index])) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=audio-listener-factory.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange =\n                nativeOnStateChange !== null && nativeOnStateChange === wrappedListener\n                    ? value\n                    : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=minimal-base-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = nativeContext.createOscillator();\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome, Edge & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=native-oscillator-node-factory.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: periodicWave === null ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=oscillator-node-renderer-factory.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=connected-native-audio-buffer-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = nativeContext.createWaveShaper();\n        const positiveWaveShaperNode = nativeContext.createWaveShaper();\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (value !== null && value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = (curveLength + 1) / 2 - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] =\n                            lowerIndex === upperIndex\n                                ? value[lowerIndex]\n                                : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] +\n                                    (1 - (upperIndex - theoreticIndex)) * value[upperIndex];\n                        positiveCurve[i] =\n                            lowerIndex === upperIndex\n                                ? -value[curveLength - 1 - lowerIndex]\n                                : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) -\n                                    (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];\n                    }\n                    negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== null) {\n            // Only values of type Float32Array can be assigned to the curve property.\n            nativeWaveShaperNodeFaker.curve = curve instanceof Float32Array ? curve : new Float32Array(curve);\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);\n            inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, nativeAudioContextConstructor, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = nativeContext.createWaveShaper();\n        /*\n         * Bug #119: Safari does not correctly map the values.\n         * @todo Unfortunately there is no way to test for this behavior in a synchronous fashion which is why testing for the existence of\n         * the webkitAudioContext is used as a workaround here. Testing for the automationRate property is necessary because this workaround\n         * isn't necessary anymore since v14.0.2 of Safari.\n         */\n        if (nativeAudioContextConstructor !== null &&\n            nativeAudioContextConstructor.name === 'webkitAudioContext' &&\n            nativeContext.createGain().gain.automationRate === undefined) {\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve === null || options.curve instanceof Float32Array ? options.curve : new Float32Array(options.curve);\n        // Bug #104: Chrome, Edge and Opera will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        // Only values of type Float32Array can be assigned to the curve property.\n        assignNativeAudioNodeOption(nativeWaveShaperNode, { curve }, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = nativeContext.createPanner();\n        // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = nativeContext.createPanner();\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            channelInterpretation: 'speakers',\n            numberOfInputs: 6\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_OPTIONS,\n            curve: new Float32Array([1, 1]),\n            oversample: 'none'\n        });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => value !== lastOrientation[index])) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => value !== lastPosition[index])) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Safari does not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Safari does not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);\n            waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);\n            waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);\n            waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);\n            waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);\n            waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);\n            channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-panner-node-faker-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Safari does not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise.all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ].map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: index === 0 ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => value !== lastOrientation[index]) ||\n                        positon.some((value, index) => value !== lastPosition[index])) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=panner-node-renderer-factory.js.map","export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map","export const createNativePeriodicWaveFactory = (createIndexSizeError) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #180: Safari does not allow to use ordinary arrays.\n        const convertedImag = imag instanceof Float32Array ? imag : new Float32Array(imag);\n        const convertedReal = real instanceof Float32Array ? real : new Float32Array(real);\n        const nativePeriodicWave = nativeContext.createPeriodicWave(convertedReal, convertedImag, { disableNormalization });\n        // Bug #181: Safari does not throw an IndexSizeError so far if the given arrays have less than two values.\n        if (Array.from(imag).length < 2) {\n            throw createIndexSizeError();\n        }\n        return nativePeriodicWave;\n    };\n};\n//# sourceMappingURL=native-periodic-wave-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = nativeContext.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve }));\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve }));\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs === undefined ? leftWaveShaperNode : leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs === undefined ? rightWaveShaperNode : rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForLeftOutputWaveShaperCurve\n        });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: leftInputForRightOutputWaveShaperCurve\n        });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = (createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE }));\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForLeftOutputWaveShaperCurve\n        });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, {\n            ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS,\n            curve: rightInputForRightOutputWaveShaperCurve\n        });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs === undefined ? panWaveShaperNode : panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 0);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 0);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForLeftOutputWaveShaperNode\n                    : leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? leftInputForRightOutputWaveShaperNode\n                    : leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForLeftOutputWaveShaperNode\n                    : rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs === undefined\n                    ? rightInputForRightOutputWaveShaperNode\n                    : rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(panGainNode.gain, 'maxValue', { get: () => 1 });\n        Object.defineProperty(panGainNode.gain, 'minValue', { get: () => -1 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-stereo-panner-node-faker-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=stereo-panner-node-renderer-factory.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=wave-shaper-node-renderer-factory.js.map","export const createIsSecureContext = (window) => window !== null && window.isSecureContext;\n//# sourceMappingURL=is-secure-context.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=expose-current-frame-and-current-time.js.map","export const createGetOrCreateBackupOfflineAudioContext = (backupOfflineAudioContextStore, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        let backupOfflineAudioContext = backupOfflineAudioContextStore.get(nativeContext);\n        if (backupOfflineAudioContext !== undefined) {\n            return backupOfflineAudioContext;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        backupOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 8000);\n        backupOfflineAudioContextStore.set(nativeContext, backupOfflineAudioContext);\n        return backupOfflineAudioContext;\n    };\n};\n//# sourceMappingURL=get-or-create-backup-offline-audio-context.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=native-audio-worklet-node-constructor.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                // Bug #182 Chrome, Edge and Opera do throw an instance of a SyntaxError instead of a DOMException.\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=evaluate-source.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return [await response.text(), response.url];\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map","// Bug #179: Firefox does not allow to transfer any buffer which has been passed to the process() method as an argument.\nexport const createTestAudioWorkletProcessorPostMessageSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n        let isEmittingMessageEvents = false;\n        let isEmittingProcessorErrorEvents = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isEmittingMessageEvents = true);\n            audioWorkletNode.onprocessorerror = () => (isEmittingProcessorErrorEvents = true);\n            oscillator.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isEmittingMessageEvents && !isEmittingProcessorErrorEvents;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-post-message-support.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-native-context.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome, Edge and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            return nativeContext.decodeAudioData(audioData).then((audioBuffer) => {\n                // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    detachArrayBuffer(audioData);\n                }\n                catch {\n                    // Ignore errors.\n                }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=decode-audio-data.js.map","export const createDataCloneError = () => new DOMException('', 'DataCloneError');\n//# sourceMappingURL=data-clone-error.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=detach-array-buffer.js.map","export const createEncodingError = () => new DOMException('', 'EncodingError');\n//# sourceMappingURL=encoding-error.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet =\n                addAudioWorkletModule === undefined\n                    ? undefined\n                    : {\n                        addModule: (moduleURL, options) => {\n                            return addAudioWorkletModule(this, moduleURL, options);\n                        }\n                    };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=base-audio-context-constructor.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map","export const createNativeMediaElementAudioSourceNode = (nativeAudioContext, options) => {\n    return nativeAudioContext.createMediaElementSource(options.mediaElement);\n};\n//# sourceMappingURL=native-media-element-audio-source-node.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNode = (nativeAudioContext, options) => {\n    const nativeMediaStreamAudioDestinationNode = nativeAudioContext.createMediaStreamDestination();\n    assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n    // Bug #174: Safari does expose a wrong numberOfOutputs.\n    if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n        Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n    }\n    return nativeMediaStreamAudioDestinationNode;\n};\n//# sourceMappingURL=native-media-stream-audio-destination-node.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map","export const createNativeMediaStreamAudioSourceNode = (nativeAudioContext, { mediaStream }) => {\n    const audioStreamTracks = mediaStream.getAudioTracks();\n    /*\n     * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n     * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n     */\n    audioStreamTracks.sort((a, b) => (a.id < b.id ? -1 : a.id > b.id ? 1 : 0));\n    const filteredAudioStreamTracks = audioStreamTracks.slice(0, 1);\n    const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n    /*\n     * Bug #151 & #159: The given mediaStream gets reconstructed before it gets passed to the native node which is why the accessor needs\n     * to be overwritten as it would otherwise expose the reconstructed version.\n     */\n    Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n    return nativeMediaStreamAudioSourceNode;\n};\n//# sourceMappingURL=native-media-stream-audio-source-node.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=media-stream-track-audio-source-node-constructor.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return nativeAudioContext.createMediaStreamTrackSource(mediaStreamTrack);\n        }\n        const mediaStream = new MediaStream([mediaStreamTrack]);\n        const nativeMediaStreamAudioSourceNode = nativeAudioContext.createMediaStreamSource(mediaStream);\n        // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n        if (mediaStreamTrack.kind !== 'audio') {\n            throw createInvalidStateError();\n        }\n        // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n        if (isNativeOfflineAudioContext(nativeAudioContext)) {\n            throw new TypeError();\n        }\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=native-media-stream-track-audio-source-node-factory.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome, Edge and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=audio-context-constructor.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=get-unrendered-audio-worklet-nodes.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=add-unrendered-audio-worklet-node.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=connect-multiple-outputs.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext).delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=delete-unrendered-audio-worklet-node.js.map","export const createGetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore, getValueForKey) => {\n    return (nativeAudioWorkletNode) => getValueForKey(activeAudioWorkletNodeInputsStore, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=get-active-audio-worklet-node-inputs.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getActiveAudioWorkletNodeInputs, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        const outputChannelCount = Array.isArray(options.outputChannelCount)\n            ? options.outputChannelCount\n            : Array.from(options.outputChannelCount);\n        // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n        if (outputChannelCount.some((channelCount) => channelCount < 1)) {\n            throw createNotSupportedError();\n        }\n        if (outputChannelCount.length !== options.numberOfOutputs) {\n            throw createIndexSizeError();\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: options.parameterData[name] !== undefined\n                        ? options.parameterData[name]\n                        : defaultValue === undefined\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined ? 0 : defaultValue)\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined ? MOST_POSITIVE_SINGLE_FLOAT : maxValue)\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined ? MOST_NEGATIVE_SINGLE_FLOAT : minValue)\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, i * options.channelCount + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap(processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = typeof value === 'function' ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map();\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = typeof args[1] === 'function'\n                        ? args[1]\n                        : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = typeof value === 'function' ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise.then((dWrkltPrcssr) => (audioWorkletProcessor = dWrkltPrcssr));\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, outputChannelCount);\n        const parameters = processorConstructor.parameterDescriptors === undefined\n            ? []\n            : processorConstructor.parameterDescriptors.reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += outputChannelCount[i];\n            }\n        };\n        const activeInputIndexes = new Map();\n        // tslint:disable-next-line:deprecation\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                const activeInputs = getActiveAudioWorkletNodeInputs(nativeAudioWorkletNodeFaker);\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs.map((input, index) => {\n                            const activeInput = activeInputs[index];\n                            if (activeInput.size > 0) {\n                                activeInputIndexes.set(index, bufferSize / 128);\n                                return input;\n                            }\n                            const count = activeInputIndexes.get(index);\n                            if (count === undefined) {\n                                return [];\n                            }\n                            if (input.every((channelData) => channelData.every((sample) => sample === 0))) {\n                                if (count === 1) {\n                                    activeInputIndexes.delete(index);\n                                }\n                                else {\n                                    activeInputIndexes.set(index, count - 1);\n                                }\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + i / nativeContext.sampleRate, nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {\n                            colno: error.colno,\n                            filename: error.filename,\n                            lineno: error.lineno,\n                            message: error.message\n                        }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, j * options.channelCount + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        const connectFakeGraph = () => scriptProcessorNode.connect(nativeGainNode).connect(nativeContext.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-faker-factory.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=create-audio-worklet-processor.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=create-audio-worklet-processor-promise.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=clone-audio-worklet-node-options.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeContext, name, options);\n                const patchedEventListeners = new Map();\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome and Edge do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = typeof value === 'function' ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = typeof args[1] === 'function'\n                                ? args[1]\n                                : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function'\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                                        if (event.type === 'error') {\n                                            Object.defineProperties(event, {\n                                                type: { value: 'processorerror' }\n                                            });\n                                            unpatchedEventListener(event);\n                                        }\n                                        else {\n                                            unpatchedEventListener(new ErrorEvent(args[0], { ...event }));\n                                        }\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        addEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return addEventListener.call(nativeAudioWorkletNode, ...args);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        // Bug #178: Chrome, Edge and Opera do fire an event of type error.\n                        removeEventListener.call(nativeAudioWorkletNode, 'error', args[1], args[2]);\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome and Edge do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but\n                 * has an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'discrete',\n                        gain: 0\n                    });\n                    nativeAudioWorkletNode.connect(nativeGainNode).connect(nativeContext.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    const whenDisconnected = () => nativeGainNode.connect(nativeContext.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome, Edge & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=native-audio-worklet-node-factory.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map","export const createGetBackupOfflineAudioContext = (backupOfflineAudioContextStore) => {\n    return (nativeContext) => {\n        return backupOfflineAudioContextStore.get(nativeContext);\n    };\n};\n//# sourceMappingURL=get-backup-offline-audio-context.js.map","export const createSetActiveAudioWorkletNodeInputs = (activeAudioWorkletNodeInputsStore) => {\n    return (nativeAudioWorkletNode, activeInputs) => {\n        activeAudioWorkletNodeInputsStore.set(nativeAudioWorkletNode, activeInputs);\n    };\n};\n//# sourceMappingURL=set-active-audio-worklet-node-inputs.js.map","export const sanitizeAudioWorkletNodeOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: options.outputChannelCount !== undefined\n            ? options.outputChannelCount\n            : options.numberOfInputs === 1 && options.numberOfOutputs === 1\n                ? /*\n                   * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                   * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                   * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                   */\n                    [options.channelCount]\n                : Array.from({ length: options.numberOfOutputs }, () => 1)\n    };\n};\n//# sourceMappingURL=sanitize-audio-worklet-node-options.js.map","import { deactivateAudioGraph } from '../helpers/deactivate-audio-graph';\nimport { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome Edge, and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Safari does not support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency =\n                typeof nativeAudioContext.baseLatency === 'number'\n                    ? nativeAudioContext.baseLatency\n                    : latencyHint === 'balanced'\n                        ? 512 / sampleRate\n                        : latencyHint === 'interactive' || latencyHint === undefined\n                            ? 256 / sampleRate\n                            : latencyHint === 'playback'\n                                ? 1024 / sampleRate\n                                : /*\n                                   * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                                   * ScriptProcessorNode.\n                                   */\n                                    (Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate;\n            this._nativeAudioContext = nativeAudioContext;\n            // Bug #188: Safari will set the context's state to 'interrupted' in case the user switches tabs.\n            if (nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                this._nativeGainNode = nativeAudioContext.createGain();\n                this._nativeOscillatorNode = nativeAudioContext.createOscillator();\n                this._nativeGainNode.gain.value = 1e-37;\n                this._nativeOscillatorNode.connect(this._nativeGainNode).connect(nativeAudioContext.destination);\n                this._nativeOscillatorNode.start();\n            }\n            else {\n                this._nativeGainNode = null;\n                this._nativeOscillatorNode = null;\n            }\n            this._state = null;\n            /*\n             * Bug #34: Chrome, Edge and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return this._state !== null ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext.close().then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close().then(() => {\n                if (this._nativeGainNode !== null && this._nativeOscillatorNode !== null) {\n                    this._nativeOscillatorNode.stop();\n                    this._nativeGainNode.disconnect();\n                    this._nativeOscillatorNode.disconnect();\n                }\n                deactivateAudioGraph(this);\n            });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this.resume().then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext.resume().catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext.suspend().catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=minimal-audio-context-constructor.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            if (err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=create-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Firefox does not allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=start-rendering.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=is-any-offline-audio-context.js.map","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testConvolverNodeChannelCountSupport, testDomExceptionContrucorSupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) &&\n        cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) &&\n        cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) &&\n        cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) &&\n        cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) &&\n        cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) &&\n        cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) &&\n        cacheTestResult(testConvolverNodeChannelCountSupport, testConvolverNodeChannelCountSupport) &&\n        cacheTestResult(testDomExceptionContrucorSupport, testDomExceptionContrucorSupport) &&\n        cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) &&\n        cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise.all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=is-supported-promise.js.map","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-buffer-copy-channel-methods-subarray-support.js.map","export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = audioContext.close !== undefined;\n        try {\n            audioContext.close();\n        }\n        catch {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=test-audio-context-close-method-support.js.map","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            let promise;\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(null, () => {\n                    // Ignore the success callback.\n                }, resolvePromise);\n            }\n            catch (err) {\n                resolvePromise(err);\n            }\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6: Chrome, Edge, Firefox and Opera do not call the errorCallback.\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n//# sourceMappingURL=test-audio-context-decode-audio-data-method-type-error-support.js.map","export const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=test-audio-context-options-support.js.map","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;\n        nativeGainNode.disconnect(nativeGainNode);\n        return isSupported;\n    };\n};\n//# sourceMappingURL=test-audio-node-connect-method-support.js.map","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], {\n            type: 'application/javascript; charset=utf-8'\n        });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 8000);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            const oscillator = offlineAudioContext.createOscillator();\n            audioWorkletNode.port.onmessage = () => (isCallingProcess = true);\n            oscillator.connect(audioWorkletNode);\n            oscillator.start(0);\n            await offlineAudioContext.startRendering();\n            if (!isCallingProcess) {\n                await new Promise((resolve) => setTimeout(resolve, 5));\n            }\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=test-audio-worklet-processor-no-outputs-support.js.map","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = offlineAudioContext.createChannelMerger();\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=test-channel-merger-node-channel-count-support.js.map","export const createTestConstantSourceNodeAccurateSchedulingSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;\n    };\n};\n//# sourceMappingURL=test-constant-source-node-accurate-scheduling-support.js.map","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-buffer-reassignability-support.js.map","// Chrome up to version v80, Edge up to version v80 and Opera up to version v67 did not allow to set the channelCount property of a ConvolverNode to 1. They also did not allow to set the channelCountMode to 'explicit'.\nexport const createTestConvolverNodeChannelCountSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        try {\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=test-convolver-node-channel-count-support.js.map","export const createTestIsSecureContextSupport = (window) => {\n    return () => window !== null && window.hasOwnProperty('isSecureContext');\n};\n//# sourceMappingURL=test-is-secure-context-support.js.map","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n            return false;\n        }\n        catch (err) {\n            return true;\n        }\n    };\n};\n//# sourceMappingURL=test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Safari does not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext.startRendering().then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=test-stereo-panner-node-default-value-support.js.map","import { AssetEnvelope } from \"./mixer/AssetEnvelope\";\nimport { IAsset } from \"./types/asset\";\nimport { IAudioTrack } from \"./types/audioTrack\";\nimport { IEnvelope } from \"./types/envelope\";\nimport { IAssetEnvelope } from \"./types/mixer/AssetEnvelope\";\nimport { ITrackOptions } from \"./types/mixer/TrackOptions\";\nimport {\n  IDeadAirState,\n  IFadingInState,\n  IFadingOutState,\n  ILoadingState,\n  IPlayingState,\n  ITimedTrackState,\n  IWaitingForAssetState,\n} from \"./types/track-states\";\n\n/**\n Common sequence of states:\n Silence => FadingIn => PlayingAsset => FadingOut => Silence\n */\n\nexport class LoadingState implements ILoadingState {\n  track: any;\n  trackOptions: ITrackOptions;\n  asset: null;\n  constructor(track: IAudioTrack, trackOptions: ITrackOptions) {\n    this.track = track;\n    this.trackOptions = trackOptions;\n    this.asset = null;\n  }\n\n  play() {\n    const { track, trackOptions } = this;\n    const asset = track.loadNextAsset();\n\n    let newState;\n\n    if (asset) {\n      const assetEnvelope: IAssetEnvelope = new AssetEnvelope(\n        trackOptions,\n        asset\n      );\n      newState = new FadingInState(track, trackOptions, { assetEnvelope });\n    } else {\n      newState = new WaitingForAssetState(track, trackOptions);\n    }\n\n    this.track.transition(newState);\n  }\n\n  pause() {}\n  finish() {}\n  skip() {}\n  replay() {}\n  updateParams() {}\n\n  toString() {\n    return \"Loading\";\n  }\n}\n\nclass TimedTrackState implements ITimedTrackState {\n  track: any;\n  windowScope: any;\n  trackOptions: any;\n  timerId: null;\n  timeRemainingMs: number | undefined;\n  timerApproximateEndingAtMs: any;\n  constructor(track: any, trackOptions: any) {\n    this.track = track;\n    this.windowScope = track.windowScope;\n    this.trackOptions = trackOptions;\n    this.timerId = null;\n  }\n\n  play(nextStateSecs: number = 0): number | void {\n    const {\n      timerId,\n      timeRemainingMs,\n      track: { trackId },\n    } = this;\n\n    if (timerId) return; // state is already active/playing\n\n    if (timeRemainingMs) {\n      const timeRemainingSecs = timeRemainingMs / 1000;\n      console.log(\n        `\\t[Resuming track #${trackId} timer: next state in ${timeRemainingSecs.toFixed(\n          1\n        )}s]`\n      );\n\n      this.setNextStateTimer(timeRemainingMs);\n      return timeRemainingSecs;\n    }\n\n    //console.log(`Playing track state ${this}: ${nextStateSecs}s`);\n\n    const nextStateMs = nextStateSecs * 1000;\n    this.setNextStateTimer(nextStateMs);\n\n    return nextStateSecs;\n  }\n\n  pause() {\n    this.timeRemainingMs = this.clearTimer();\n    console.log(\n      `\\t[Pausing track #${this.track.trackId} timer: next state in ${(\n        this.timeRemainingMs / 1000\n      ).toFixed(1)}s`\n    );\n  }\n\n  clearTimer() {\n    const now = new Date();\n    const { timerId, timerApproximateEndingAtMs = now, windowScope } = this;\n\n    if (timerId) {\n      windowScope.clearTimeout(timerId);\n\n      delete this.timerApproximateEndingAtMs;\n\n      const timeRemainingMs = Math.max(\n        timerApproximateEndingAtMs - now.getTime(),\n        0\n      );\n      return timeRemainingMs;\n    }\n\n    return 0;\n  }\n\n  finish() {\n    this.clearTimer();\n    delete this.timeRemainingMs;\n  }\n\n  setNextStateTimer(timeMs: number) {\n    this.timerId = this.windowScope.setTimeout(\n      () => this.setNextState(),\n      timeMs\n    );\n    this.timerApproximateEndingAtMs = new Date().getTime() + timeMs;\n  }\n\n  setNextState() {\n    console.warn(`Track state '${this}' does not implement a next state`);\n  }\n\n  skip() {\n    this.finish();\n    this.setNextState();\n  }\n\n  replay() {\n    console.log(\"replay() not implemented yet\");\n  }\n\n  setLoadingState() {\n    const { track, trackOptions } = this;\n    const loadingState = new LoadingState(track, trackOptions);\n    track.transition(loadingState);\n  }\n\n  //@ts-ignore\n  updateParams(params: object) {}\n}\n\nclass DeadAirState extends TimedTrackState implements IDeadAirState {\n  deadAirSeconds: any;\n  constructor(track: any, trackOptions: ITrackOptions) {\n    super(track, trackOptions);\n    this.deadAirSeconds = this.trackOptions.randomDeadAir;\n  }\n\n  play(): any {\n    super.play(this.deadAirSeconds);\n  }\n\n  setNextState() {\n    this.setLoadingState();\n  }\n\n  toString() {\n    return `DeadAir (${this.deadAirSeconds.toFixed(1)}s)`;\n  }\n\n  updateParams() {}\n}\n\nclass FadingInState extends TimedTrackState implements IFadingInState {\n  assetEnvelope: any;\n  constructor(\n    track: any,\n    trackOptions: ITrackOptions,\n    { assetEnvelope }: { assetEnvelope: IAssetEnvelope }\n  ) {\n    super(track, trackOptions);\n    this.assetEnvelope = assetEnvelope;\n  }\n\n  play(): any {\n    const {\n      track,\n      assetEnvelope: { fadeInDuration },\n    } = this;\n    const fadeInSecondsRemaining = super.play(fadeInDuration);\n\n    if (!fadeInSecondsRemaining) return;\n\n    const success = track.fadeIn(fadeInSecondsRemaining);\n\n    if (!success) this.setLoadingState();\n  }\n\n  pause() {\n    super.pause();\n    this.track.pauseAudio();\n  }\n\n  setNextState() {\n    const { track, trackOptions, assetEnvelope } = this;\n    track.transition(new PlayingState(track, trackOptions, { assetEnvelope }));\n  }\n\n  toString() {\n    const {\n      assetEnvelope: { fadeInDuration, assetId },\n    } = this;\n    return `FadingIn Asset #${assetId} (${fadeInDuration.toFixed(1)}s)`;\n  }\n}\n\nclass PlayingState extends TimedTrackState implements IPlayingState {\n  assetEnvelope: any;\n  constructor(track: any, trackOptions: any, { assetEnvelope }: any) {\n    super(track, trackOptions);\n    this.assetEnvelope = assetEnvelope;\n  }\n\n  play(): any {\n    const {\n      track,\n      assetEnvelope: { startFadingOutSecs },\n    } = this;\n    super.play(startFadingOutSecs);\n    track.playAudio();\n    //console.log(`Playing asset #${assetId} (start fading out: ${remainingSeconds.toFixed(1)}s)`);\n  }\n\n  pause() {\n    super.pause();\n    this.track.pauseAudio();\n  }\n\n  toString() {\n    const {\n      assetEnvelope: { assetId, startFadingOutSecs },\n    } = this;\n    return `Playing asset #${assetId} (${startFadingOutSecs.toFixed(1)}s)`;\n  }\n\n  setNextState() {\n    const { track, trackOptions, assetEnvelope } = this;\n    track.transition(\n      new FadingOutState(track, trackOptions, { assetEnvelope })\n    );\n  }\n}\n\nclass FadingOutState extends TimedTrackState implements IFadingOutState {\n  assetEnvelope: any;\n  constructor(\n    track: any,\n    trackOptions: ITrackOptions,\n    { assetEnvelope }: { assetEnvelope: IAssetEnvelope }\n  ) {\n    super(track, trackOptions);\n    this.assetEnvelope = assetEnvelope;\n  }\n\n  play(): void {\n    const {\n      track,\n      assetEnvelope: { fadeOutDuration },\n    } = this;\n    const remainingSeconds = super.play(fadeOutDuration);\n\n    if (!remainingSeconds) return;\n\n    if (track.fadeOut(remainingSeconds)) {\n      track.playAudio();\n    } else {\n      this.setLoadingState();\n    }\n  }\n\n  pause() {\n    super.pause();\n    this.track.pauseAudio();\n  }\n\n  setNextState() {\n    this.track.transition(new DeadAirState(this.track, this.trackOptions));\n  }\n\n  toString() {\n    const {\n      assetEnvelope: { assetId, fadeOutDuration },\n    } = this;\n    return `FadingOut asset #${assetId} (${fadeOutDuration.toFixed(1)}s)`;\n  }\n}\n\nconst DEFAULT_WAITING_FOR_ASSET_INTERVAL_SECONDS = 10;\n\nclass WaitingForAssetState\n  extends TimedTrackState\n  implements IWaitingForAssetState\n{\n  constructor(track: any, trackOptions: any) {\n    super(track, trackOptions);\n  }\n\n  play(): number | undefined | any {\n    super.play(DEFAULT_WAITING_FOR_ASSET_INTERVAL_SECONDS);\n  }\n\n  updateParams(params = {}) {\n    super.updateParams(params);\n    this.finish(); // move to LoadingState in case new assets are available\n    this.setLoadingState();\n  }\n\n  setNextState() {\n    this.setLoadingState();\n  }\n\n  toString() {\n    return `WaitingForAsset (${DEFAULT_WAITING_FOR_ASSET_INTERVAL_SECONDS}s)`;\n  }\n}\n\nexport const makeInitialTrackState = (track: any, trackOptions: any) => {\n  const { startWithSilence } = trackOptions;\n\n  const stateClass = startWithSilence ? DeadAirState : LoadingState;\n  const newState = new stateClass(track, trackOptions);\n\n  return newState;\n};\n","import { IApiClient, ApiClientOptions } from \"./types/api-client\";\n\nconst GENERIC_ERROR_MSG =\n  \"We were unable to contact the audio server, please try again.\";\n\n// Handles HTTP interactions with the Roundware API server, v2.\n// NOTE: Every HTTP method except \".get()\" will cause most browsers to issue a preflight requirements check to the server via the OPTIONS verb,\n// to verify CORS will allow the response to load in the browser. Sometimes this OPTIONS call can get obscured in debugging tools.\n// @see http://roundware.org/docs/terminology/index.html\n\nexport class ApiClient implements IApiClient {\n  /** Create a new ApiClient\n   * @param {String} baseServerUrl - identifies the Roundware server to receive API requests\n   * @param {Boolean} [options.fetch = fetch] - for testing purposes, you can inject the fetch mechanism to use for making network requests **/\n\n  private _jQuery: any;\n  private _serverUrl: string;\n  private _authToken: string;\n\n  constructor(window: Window, baseServerUrl: string) {\n    //@ts-ignore\n    this._jQuery = window.jQuery;\n    this._serverUrl = baseServerUrl;\n    this._authToken = \"\";\n  }\n\n  /** Make a GET request to the Roundware server\n   * @param {String} path - the path for your API request, such as \"/streams/\"\n   * @param {Object} options - see the \"send\" method\n   * @see {send} **/\n  async get<T>(path: string, data: object, options: ApiClientOptions = {}) {\n    options.method = \"GET\";\n    options.contentType = \"x-www-form-urlencoded\";\n    return await this.send<T>(path, data, options);\n  }\n\n  /** Make a POST request to the Roundware server\n   * @param {String} path - the path for your API request, such as \"/streams/\"\n   * @param {Object} options - see the \"send\" method\n   * @see {send} **/\n  async post<T>(path: string, data: object, options: ApiClientOptions = {}) {\n    options.method = \"POST\";\n    return await this.send<T>(path, data, options);\n  }\n\n  /** Make a PATCH request to the Roundware server\n   * @param {String} path - the path for your API request, such as \"/streams/\"\n   * @param {Object} options - see the \"send\" method\n   * @see {send} **/\n  async patch<T>(path: string, data: object, options: ApiClientOptions = {}) {\n    options.method = \"PATCH\";\n    return await this.send<T>(path, data, options);\n  }\n\n  /** Transmit an Ajax request to the Roundware API. Note that the Roundware Server expects paths to end with a trailing slash: /sessions/ instead of /sessions\n   * @param path {string} - identifies the endpoint to receive the request\n   * @param data {object} - the payload to send\n   * @param urlOptions {object} - any additional options to add to the URL\n   * @return {Promise} - will resolve or reject depending on the status of the request\n   * @todo might be a good place to implement exponential retry of certain types of errors\n   * @todo as of 2019, the fetch() polyfills are good enough that we should be able to get rid of JQuery dependency\n   * **/\n  async send<T>(\n    path: string,\n    data: { [key: string]: any } = {},\n    urlOptions: ApiClientOptions\n  ): Promise<T> {\n    const url = new URL(this._serverUrl + path);\n\n    let { contentType, method } = urlOptions;\n    const requestInit: RequestInit = {\n      method,\n      mode: \"cors\",\n      body: \"\",\n      headers: {},\n    };\n\n    const queryParams = new URLSearchParams(\"\");\n\n    for (let key in urlOptions) {\n      queryParams.append(key, urlOptions[key]);\n    }\n\n    const headers: { [key: string]: any } = {};\n\n    switch (method) {\n      // for these cases, anything in 'data' has to be appended to query string\n      case \"GET\":\n      case \"HEAD\":\n        for (let key in data) queryParams.append(key, data[key]);\n        break;\n      // for other HTTP methods, 'data' has to be turned into a request body, with a properly-set Content-Type required by the Roundware server API.\n      default:\n        let stringData: string = \"\";\n        if (!contentType) {\n          // If you don't specify a contentType, we assume you want us to convert your payload to JSON\n          contentType = \"application/json\";\n          stringData = JSON.stringify(data);\n        }\n\n        if (contentType != \"multipart/form-data\") {\n          headers[\"Content-Type\"] = contentType;\n        }\n        requestInit.body = stringData;\n\n        break;\n    }\n\n    url.search = queryParams.toString();\n\n    if (this._authToken) {\n      headers[\"Authorization\"] = this._authToken;\n    }\n\n    requestInit.headers = headers;\n\n    let response;\n\n    try {\n      response = await fetch(url.toString(), requestInit);\n    } catch (error) {\n      console.error(\"Roundware network error:\", error.message);\n      throw GENERIC_ERROR_MSG;\n    }\n\n    if (!response.ok) {\n      console.error(\"Roundware API error, code:\", response.status);\n      throw GENERIC_ERROR_MSG;\n    }\n\n    try {\n      const json = await response.json();\n      return json;\n    } catch (error) {\n      console.error(\"Unable to decode Roundware response\", error);\n      throw GENERIC_ERROR_MSG;\n    }\n  }\n\n  /** Set the authorization token to use as the header for future API requests. Most Roundware API calls require an auth token to be set.\n   * @param {String} authToken - characters to use in the authorization header **/\n  set authToken(tokenStr: string) {\n    this._authToken = `token ${tokenStr}`;\n  }\n}\n","import { IApiClient } from \"./types/api-client\";\nimport { IAsset } from \"./types/asset\";\n\n/* global process */\nexport const PATH =\n  process.env.NODE_ENV === \"development\"\n    ? \"/assets/?created__lte=2019-08-15T18:06:39\"\n    : \"/assets/\";\n\nexport class Asset implements IAsset {\n  private _projectId: number;\n  private _apiClient: IApiClient;\n  constructor(projectId: number, { apiClient }: { apiClient: IApiClient }) {\n    this._projectId = projectId;\n    this._apiClient = apiClient;\n  }\n\n  toString() {\n    return `Roundware Assets (#${this._projectId})`;\n  }\n\n  async connect<T>(data = {}) {\n    const options = { ...data, project_id: this._projectId };\n    return await this._apiClient.get<T>(PATH, options);\n  }\n}\n","import distance from \"@turf/distance\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport { Point } from \"@turf/helpers\";\nimport { Coord } from \"@turf/helpers\";\nimport { isEmpty } from \"./utils\";\nimport { GeoListenMode } from \"./mixer\";\nimport { IAssetData } from \"./types\";\n\nexport const ASSET_PRIORITIES: Readonly<{\n  DISCARD: boolean;\n  NEUTRAL: number;\n  LOWEST: number;\n  NORMAL: number;\n  HIGHEST: number;\n  [key: string]: boolean | number;\n}> = Object.freeze({\n  DISCARD: false,\n  NEUTRAL: 0,\n  LOWEST: 1,\n  NORMAL: 100,\n  HIGHEST: 999,\n});\n\nconst alwaysLowest = (): number => ASSET_PRIORITIES.LOWEST;\nconst alwaysNeutral = (): number => ASSET_PRIORITIES.NEUTRAL; // eslint-disable-line no-unused-vars\n\n// Accept an asset if any one of the provided filters passes, returns the first\n// non-discarded and non-neutral rank\nfunction anyAssetFilter(\n  filters: Array<(asset: IAssetData, param: object) => boolean | number> = [],\n  { ...mixParams }\n) {\n  if (isEmpty(filters)) return alwaysLowest;\n\n  return (asset: IAssetData, { ...stateParams }) => {\n    for (const filter of filters) {\n      let rank = filter(asset, { ...mixParams, ...stateParams });\n      if (\n        rank !== ASSET_PRIORITIES.DISCARD &&\n        rank !== ASSET_PRIORITIES.NEUTRAL\n      ) {\n        return rank;\n      }\n    }\n\n    return ASSET_PRIORITIES.DISCARD;\n  };\n}\n\n/** Filter composed of multiple inner filters that accepts assets which pass every inner filter. */\nexport function allAssetFilter(\n  filters: Array<(asset: IAssetData, param: object) => boolean | number> = [],\n  { ...mixParams }\n) {\n  if (isEmpty(filters)) return alwaysLowest;\n\n  return (asset: IAssetData, { ...stateParams }) => {\n    const ranks = [];\n\n    for (let filter of filters) {\n      let rank = filter(asset, { ...mixParams, ...stateParams });\n\n      if (rank === ASSET_PRIORITIES.DISCARD) return rank; // can skip remaining filters\n\n      ranks.push(rank);\n    }\n\n    const finalRank =\n      ranks.find((r) => r !== ASSET_PRIORITIES.NEUTRAL) || ranks[0];\n    return finalRank;\n  };\n}\n\n// a \"pre-filter\" used by geo-enabled filters to make sure if we are missing data, or geoListenMode is DISABLED,\n// we always return a neutral ranking\nfunction rankForGeofilteringEligibility(\n  asset: IAssetData,\n  {\n    listenerPoint,\n    geoListenMode,\n  }: {\n    listenerPoint: Point;\n    geoListenMode: string | number;\n  }\n) {\n  return geoListenMode !== GeoListenMode.DISABLED && listenerPoint && asset;\n}\n\nconst calculateDistanceInMeters = (loc1: Coord, loc2: Coord) =>\n  distance(loc1, loc2, { units: \"meters\" });\n\n/** Only accepts an asset if the user is within the project-configured recording radius  */\nexport const distanceFixedFilter =\n  () =>\n  (\n    asset: IAssetData,\n    options: {\n      geoListenMode: number;\n      listenerPoint: Point;\n      recordingRadius: number;\n    }\n  ) => {\n    if (options.geoListenMode === GeoListenMode.DISABLED) {\n      return ASSET_PRIORITIES.LOWEST;\n    }\n    if (!rankForGeofilteringEligibility(asset, options))\n      return ASSET_PRIORITIES.NEUTRAL;\n\n    const { locationPoint: assetLocationPoint } = asset;\n    const { listenerPoint, recordingRadius } = options;\n\n    if (!assetLocationPoint)\n      throw new Error(`assetLocationPoint is undefined!`);\n    const distance = calculateDistanceInMeters(\n      listenerPoint,\n      assetLocationPoint\n    );\n\n    if (distance < recordingRadius) {\n      return ASSET_PRIORITIES.NORMAL;\n    } else {\n      return ASSET_PRIORITIES.DISCARD;\n    }\n  };\n\n/**\n Accepts an asset if the user is within range of it based on the current dynamic distance range.\n */\nexport const distanceRangesFilter = (\n  asset: IAssetData,\n  options: {\n    getListenMode: number;\n    listenerPoint: Point;\n    minDist: number;\n    maxDist: number;\n  }\n) => {\n  if (options.getListenMode === GeoListenMode.DISABLED) {\n    return ASSET_PRIORITIES.LOWEST;\n  }\n  if (\n    !rankForGeofilteringEligibility(asset, {\n      geoListenMode: options.getListenMode,\n      listenerPoint: options.listenerPoint,\n    })\n  ) {\n    return ASSET_PRIORITIES.NEUTRAL;\n  }\n  const { listenerPoint, minDist, maxDist } = options;\n\n  if (minDist === undefined || maxDist === undefined) {\n    return ASSET_PRIORITIES.NEUTRAL;\n  }\n  const { locationPoint } = asset;\n\n  if (!locationPoint) throw new Error(`locationPoint is undefined!`);\n  const distance = calculateDistanceInMeters(listenerPoint, locationPoint);\n\n  if (distance >= minDist && distance <= maxDist) {\n    return ASSET_PRIORITIES.NORMAL;\n  } else {\n    return ASSET_PRIORITIES.DISCARD;\n  }\n};\n\n// Rank the asset if it is tagged with one of the currently-enabled tag IDs\nexport function anyTagsFilter() {\n  return (asset: IAssetData, { listenTagIds }: { listenTagIds: string[] }) => {\n    if (isEmpty(listenTagIds)) return ASSET_PRIORITIES.LOWEST;\n\n    const { tag_ids: IAssetDataagIds = [] } = asset;\n\n    for (const tagId of IAssetDataagIds) {\n      if (listenTagIds.includes(tagId)) return ASSET_PRIORITIES.LOWEST; // matching only by tag should be the least-important filter\n    }\n\n    return ASSET_PRIORITIES.DISCARD;\n  };\n}\n\n// keep assets that are slated to start now or in the past few minutes AND haven't been played before\nexport function timedAssetFilter() {\n  return (\n    asset: IAssetData,\n    { elapsedSeconds = 0, timedAssetPriority = \"normal\" }\n  ) => {\n    const { timedAssetStart, timedAssetEnd, playCount } = asset;\n\n    if (!timedAssetStart || !timedAssetEnd) return ASSET_PRIORITIES.DISCARD;\n    if (\n      timedAssetStart >= elapsedSeconds ||\n      timedAssetEnd <= elapsedSeconds ||\n      (playCount && playCount > 0)\n    )\n      return ASSET_PRIORITIES.DISCARD;\n\n    const priorityEnumStr = timedAssetPriority.toUpperCase(); // \"highest\", \"lowest\", \"normal\", etc.\n\n    return ASSET_PRIORITIES[priorityEnumStr] || ASSET_PRIORITIES.NEUTRAL;\n  };\n}\n\n// Accept an asset if the user is currently within its defined shape\nexport function assetShapeFilter() {\n  return (\n    asset: IAssetData,\n    options: {\n      listenerPoint: Point;\n      geoListenMode: string | number;\n    }\n  ) => {\n    const { shape } = asset;\n\n    if (!(shape && rankForGeofilteringEligibility(asset, options)))\n      return ASSET_PRIORITIES.NEUTRAL;\n\n    const { listenerPoint } = options;\n\n    if (booleanPointInPolygon(listenerPoint, shape)) {\n      return ASSET_PRIORITIES.NORMAL;\n    } else {\n      return ASSET_PRIORITIES.DISCARD;\n    }\n  };\n}\n\n// Prevents assets from repeating until a certain time threshold has passed\nexport const timedRepeatFilter =\n  () =>\n  (asset: IAssetData, { bannedDuration = 600 }) => {\n    const { lastListenTime } = asset;\n\n    if (!lastListenTime) return ASSET_PRIORITIES.NORMAL; // e.g. asset has never been heard before\n\n    const durationSinceLastListen =\n      (new Date().getTime() -\n        (typeof lastListenTime == \"number\"\n          ? lastListenTime\n          : lastListenTime.getTime())) /\n      1000;\n\n    if (durationSinceLastListen <= bannedDuration) {\n      return ASSET_PRIORITIES.DISCARD;\n    } else {\n      return ASSET_PRIORITIES.LOWEST;\n    }\n  };\n\nexport const dateRangeFilter =\n  () =>\n  (\n    asset: IAssetData,\n    { startDate, endDate }: { startDate: Date; endDate: Date }\n  ) => {\n    if (startDate || endDate) {\n      return (!startDate || asset.created! >= startDate) &&\n        (!endDate || asset.created! <= endDate)\n        ? ASSET_PRIORITIES.NORMAL\n        : ASSET_PRIORITIES.DISCARD;\n    } else {\n      return ASSET_PRIORITIES.LOWEST;\n    }\n  };\n\n// @ts-ignore\nexport const roundwareDefaultFilterChain = allAssetFilter([\n  // @ts-ignore\n  anyAssetFilter([\n    timedAssetFilter(), // if an asset is scheduled to play right now, or\n    assetShapeFilter(), // if an asset has a shape and we AREN'T in it, reject entirely, or\n    // @ts-ignore\n    allAssetFilter([\n      distanceFixedFilter(), // if it has no shape, consider a fixed distance from it, or\n      // @ts-ignore\n      distanceRangesFilter(),\n      //angleFilter() // if the listener is within a user-configured distance or angle range\n    ]),\n  ]),\n\n  timedRepeatFilter(), // only repeat assets if there's no other choice\n  //blockedAssetsFilter(), // skip blocked assets and users\n  anyTagsFilter(), // all the tags on an asset must be in our list of tags to listen for\n  dateRangeFilter(),\n  //trackTagsFilter(),     // if any track-level tag filters exist, apply them\n  //dynamicTagFilter(\"_ten_most_recent_days\",mostRecentFilter({ days: 10 })) // Only pass assets created within the most recent 10 days\n]);\n","import { AssetSorter } from \"./assetSorter\";\nimport { roundwareDefaultFilterChain } from \"./assetFilters\";\nimport { coordsToPoints, cleanAudioURL } from \"./utils\";\nimport {\n  IAssetData,\n  LookupTableT,\n  IMixParams,\n  TimedAssetT,\n  ITrack,\n} from \"./types\";\nimport { IAssetPool } from \"./types/assetPool\";\nimport { ITimedAssetData } from \"./types\";\n\n// add new fields to assets after they have been downloaded from the API to be used by rest of the mixing code\n// also rewrite .wav as .mp3\nconst assetDecorationMapper = (timedAssets: TimedAssetT[]) => {\n  const timedAssetLookup = timedAssets.reduce(\n    (lookupTable: LookupTableT, timedAsset: TimedAssetT) => ({\n      ...lookupTable,\n      [timedAsset.asset_id]: timedAsset,\n    }),\n    {}\n  );\n\n  return (asset: IAssetData) => {\n    const {\n      start_time: activeRegionLowerBound = 0,\n      end_time: activeRegionUpperBound = 0,\n      file: assetUrl,\n    } = asset;\n\n    const activeRegionLength = activeRegionUpperBound - activeRegionLowerBound;\n\n    // per Halsey we should always use mp3s; also we avoid specifying http/https to avoid mixed-content warnings\n    if (!assetUrl) throw new Error(`assetUrl was undefined!`);\n    const mp3Url = cleanAudioURL(assetUrl);\n\n    const decoratedAsset: IAssetData = {\n      locationPoint: coordsToPoints({\n        latitude: asset.latitude || 1,\n        longitude: asset.longitude || 1,\n      }),\n      playCount: 0,\n      activeRegionLength,\n      activeRegionUpperBound,\n      activeRegionLowerBound,\n      ...asset,\n      created: asset.created ? new Date(asset.created) : undefined,\n      file: mp3Url,\n    };\n\n    const timedAsset = timedAssetLookup[asset.id!];\n\n    if (timedAsset) {\n      decoratedAsset.timedAssetStart = timedAsset.start;\n      decoratedAsset.timedAssetEnd = timedAsset.end;\n    }\n\n    return decoratedAsset;\n  };\n};\n\nexport class AssetPool implements IAssetPool {\n  assetSorter: AssetSorter;\n  playingTracks: {};\n  mixParams: {};\n  filterChain: CallableFunction;\n  assets: IAssetData[];\n\n  constructor({\n    assets = [],\n    timedAssets = [],\n    filterChain = roundwareDefaultFilterChain,\n    sortMethods = [],\n    mixParams = {},\n  }: {\n    assets: IAssetData[];\n    timedAssets: TimedAssetT[];\n    filterChain: CallableFunction;\n    sortMethods: unknown[];\n    mixParams: IMixParams;\n  }) {\n    this.assets = assets;\n    this.updateAssets(assets, timedAssets);\n\n    if (typeof mixParams.ordering !== \"string\")\n      throw new Error(`Please pass ordering in mixParams`);\n    this.assetSorter = new AssetSorter({\n      sortMethods,\n      ordering: mixParams.ordering,\n    });\n    this.playingTracks = {};\n    this.mixParams = mixParams;\n    this.filterChain = filterChain;\n    this.sortAssets();\n  }\n\n  updateAssets(assets: IAssetData[] = [], timedAssets: ITimedAssetData[] = []) {\n    this.assets = assets.map(assetDecorationMapper(timedAssets));\n  }\n\n  nextForTrack(\n    track: ITrack,\n    {\n      elapsedSeconds: number,\n      filterOutAssets = [],\n      ...stateParams\n    }: {\n      elapsedSeconds: number;\n      filterOutAssets: IAssetData[];\n    }\n  ) {\n    const mixParams = {\n      ...this.mixParams,\n      ...track.mixParams,\n      ...stateParams,\n    };\n    console.log(\n      `picking asset for ${track} from ${\n        this.assets.length\n      }, params = ${JSON.stringify(mixParams)}`\n    );\n    const rankedAssets = this.assets.reduce(\n      (rankings: IAssetData, asset: IAssetData) => {\n        if (filterOutAssets.includes(asset)) return rankings;\n        const rank: IAssetData[] = this.filterChain(asset, mixParams);\n\n        if (rank) {\n          // @ts-ignore\n          rankings[rank] = rankings[rank] || [];\n          // @ts-ignore\n          rankings[rank].push(asset);\n        }\n\n        return rankings;\n      },\n      {}\n    );\n\n    const rankingGroups = Object.keys(rankedAssets).map((a) =>\n      Number.parseInt(a)\n    );\n\n    if (rankingGroups === []) {\n      console.warn(\"All assets filtered out\");\n      return;\n    }\n\n    const topPriorityRanking = rankingGroups.sort()[0];\n\n    // play least-recently played assets first\n\n    // @ts-ignore\n    const priorityAssets = rankedAssets[topPriorityRanking] || [];\n    priorityAssets.sort(\n      (a: IAssetData, b: IAssetData) => b.playCount! - a.playCount!\n    );\n\n    const nextAsset = priorityAssets.pop();\n    if (nextAsset) nextAsset.playCount++;\n\n    return nextAsset as IAssetData;\n  }\n\n  sortAssets() {\n    this.assetSorter.sort(this.assets);\n  }\n\n  add(asset: IAssetData) {\n    this.assets.push(asset);\n    this.sortAssets();\n  }\n}\n","import * as sortMethodCollection from \"./sortMethods\";\nimport { IAssetData, IAssetSorter } from \"./types\";\nimport { isEmpty } from \"./utils\";\n\nfunction mapSortMethods(sortMethodNames: string[]): unknown[] {\n  // @ts-ignore\n  return sortMethodNames.map((name) => sortMethodCollection[name]);\n}\n\nexport class AssetSorter implements IAssetSorter {\n  sortMethods: ((assetsArray: any) => void)[];\n\n  constructor({\n    sortMethods = [],\n    ordering = \"random\",\n  }: {\n    sortMethods: any[];\n    ordering: string;\n  }) {\n    if (isEmpty(sortMethods)) {\n      this.sortMethods = [sortMethodCollection.sortByProjectDefault(ordering)];\n    } else {\n      // @ts-ignore\n      this.sortMethods = mapSortMethods(sortMethods);\n    }\n\n    //console.info({ ordering, sortMethods, thisSortMethods: this.sortMethods });\n  }\n\n  sort(assets: IAssetData[]): void {\n    this.sortMethods.forEach((sortMethod) => sortMethod(assets));\n  }\n}\n","/* This is what audiotracks data looks like:\n[{\n\t\"id\": 8,\n\t\"minvolume\": 0.7,\n\t\"maxvolume\": 0.7,\n\t\"minduration\": 200.0,\n\t\"maxduration\": 250.0,\n\t\"mindeadair\": 1.0,\n\t\"maxdeadair\": 3.0,\n\t\"minfadeintime\": 2.0,\n\t\"maxfadeintime\": 4.0,\n\t\"minfadeouttime\": 0.3,\n\t\"maxfadeouttime\": 1.0,\n\t\"minpanpos\": 0.0,\n\t\"maxpanpos\": 0.0,\n\t\"minpanduration\": 10.0,\n\t\"maxpanduration\": 20.0,\n\t\"repeatrecordings\": false,\n\t\"active\": true,\n\t\"start_with_silence\": false,\n\t\"banned_duration\": 600,\n\t\"tag_filters\": [],\n\t\"project_id\": 9\n}] \n*/\n\nimport { IApiClient } from \"./types/api-client\";\nimport { IAudioTrack } from \"./types/audioTrack\";\nimport { IAudioTrackData } from \"./types/audioTrack\";\n\nconst REQUEST_PATH = \"/audiotracks/\";\n\nexport class Audiotrack implements IAudioTrack {\n  private _projectId: number;\n  private _apiClient: IApiClient;\n  constructor(projectId: number, options: { apiClient: IApiClient }) {\n    this._projectId = projectId;\n    this._apiClient = options.apiClient;\n  }\n\n  toString(): string {\n    return `Roundware Audiotracks (#${this._projectId})`;\n  }\n\n  async connect(data: any = {}): Promise<IAudioTrackData[]> {\n    data.project_id = this._projectId;\n    data.active = true;\n\n    return await this._apiClient.get<IAudioTrackData[]>(REQUEST_PATH, data);\n  }\n}\n","import { IApiClient } from \"./types/api-client\";\nimport { IRoundware } from \"./types/roundware\";\nimport { IEnvelope } from \"./types/envelope\";\nimport { Coordinates, IGeoPosition, IAudioData } from \"./types\";\n\nexport class Envelope implements IEnvelope {\n  _envelopeId: string;\n  _sessionId: number | string;\n  _apiClient: IApiClient;\n  _geoPosition: IGeoPosition;\n  _roundware: IRoundware;\n  _assetId: string | undefined;\n  /** Create an Envelope\n   * @param {number} sessionId - identifies the session associated with this asset\n   * @param {ApiClient} apiClient - the API client object to use for server API calls\n   * @param {geoPosition} geoPosition -\n   **/\n  constructor(\n    sessionId: number | string,\n    apiClient: IApiClient,\n    geoPosition: IGeoPosition,\n    roundware: IRoundware\n  ) {\n    this._envelopeId = \"(unknown)\";\n    this._sessionId = sessionId;\n    this._apiClient = apiClient;\n    this._geoPosition = geoPosition;\n    this._roundware = roundware;\n  }\n\n  /** @returns {String} human-readable representation of this asset **/\n  toString(): string {\n    return `Envelope ${this._assetId}`;\n  }\n\n  /** Create a new Envelope in the server to which we can attach audio recordings as assets\n   * @returns {Promise} represents the pending API call **/\n  async connect() {\n    let data = {\n      session_id: this._sessionId,\n    };\n\n    return this._apiClient\n      .post<{ id: string }>(\"/envelopes/\", data)\n      .then((data) => {\n        this._envelopeId = data.id;\n      });\n  }\n\n  /** Sends an audio file to the server\n   * @param {blob} audioData\n   * @param {string} fileName - name of the file\n   * @return {Promise} - represents the API call */\n  async upload(\n    audioData: IAudioData,\n    fileName: string,\n    data: {\n      latitude?: number;\n      longitude?: number;\n      tag_ids?: string;\n      media_type?: string;\n    } = {}\n  ) {\n    if (!this._envelopeId) {\n      return Promise.reject(\n        \"cannot upload audio without first connecting this envelope to the server\"\n      );\n    }\n\n    let formData = new FormData();\n    let coordinates: Partial<Coordinates> = {};\n    if (!data.latitude && !data.longitude) {\n      coordinates = this._geoPosition.getLastCoords();\n    } else {\n      coordinates = {\n        latitude: data.latitude,\n        longitude: data.longitude,\n      };\n    }\n    console.log(coordinates);\n\n    formData.append(\"session_id\", this._sessionId.toString());\n    formData.append(\"file\", audioData);\n    formData.append(\"latitude\", coordinates.latitude!.toString());\n    formData.append(\"longitude\", coordinates.longitude!.toString());\n\n    if (data.tag_ids) {\n      formData.append(\"tag_ids\", data.tag_ids);\n    }\n    if (data.media_type) {\n      formData.append(\"media_type\", data.media_type);\n    }\n\n    let path = `/envelopes/${this._envelopeId}/`;\n\n    console.info(`Uploading ${fileName} to envelope ${path}`);\n\n    let options = {\n      contentType: \"multipart/form-data\",\n    };\n\n    const res = await this._apiClient.patch<{ detail: string }>(\n      path,\n      formData,\n      options\n    );\n    console.info(\"UPLOADDATA\", res);\n    if (res.detail) {\n      throw new Error(res.detail);\n    } else {\n      // Update the asset pool to include the newly uploaded asset\n      await this._roundware.updateAssetPool();\n      return res;\n    }\n  }\n}\n","import { logger } from \"./shims\";\nimport { GeoListenMode } from \"./mixer\";\nimport { Coordinates, IGeoPosition, GeoPositionOptions } from \"./types\";\n\nconst initialGeoTimeoutSeconds = 5;\n\nconst frameworkDefaultCoords: Coordinates = {\n  latitude: 42.3140089,\n  longitude: -71.2504676,\n}; // Boston, MA\n\n// for an initial rapid, low-accuracy position\nconst fastGeolocationPositionOptions = {\n  enableHighAccuracy: false,\n  timeout: initialGeoTimeoutSeconds,\n  maximumAge: Infinity,\n};\n\n// subsequent position monitoring should be high-accuracy\nconst accurateGeolocationPositionOptions = {\n  enableHighAccuracy: true,\n  timeout: Infinity,\n  maximumAge: 0,\n};\n\n/** Responsible for tracking the user's position, when geo listening is enabled and the browser is capable\n * @property {Boolean} isEnabled - whether or not the geo positioning system is enabled and available\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/Using_geolocation **/\n\nexport class GeoPosition implements IGeoPosition {\n  /** Create a new GeoPosition.\n   * @param {Object} navigator - provides access to geolocation system\n   * @param {Object} options - parameters for initializing this GeoPosition\n   * @param {Boolean} [options.geoListenMode = GeoListenMode.DISABLED] - whether or not to attempt to use geolocation\n   * @param {Boolean} [options.defaultCoords] */\n\n  private _navigator: Window[`navigator`];\n  private _initialGeolocationPromise: Promise<Coordinates>;\n  private defaultCoords: Coordinates;\n  private _lastCoords: Coordinates;\n  geolocation: Geolocation;\n  isEnabled: boolean;\n  updateCallback: CallableFunction;\n  private _geoWatchID?: number | null;\n\n  constructor(navigator: Window[`navigator`], options: GeoPositionOptions) {\n    this._navigator = navigator;\n\n    const { defaultCoords, geoListenMode } = options;\n    const initialCoords = defaultCoords\n      ? defaultCoords\n      : frameworkDefaultCoords;\n\n    this._initialGeolocationPromise = Promise.resolve(initialCoords);\n    this.defaultCoords = initialCoords;\n    this._lastCoords = initialCoords;\n    this.geolocation = navigator.geolocation;\n    this.isEnabled =\n      navigator.geolocation && geoListenMode === GeoListenMode.AUTOMATIC;\n    this.updateCallback = () => {};\n    this._geoWatchID = null;\n\n    //console.info({ defaultCoords: this.defaultCoords });\n  }\n\n  disable() {\n    this.isEnabled = false;\n    if (this._geoWatchID) {\n      console.log(\"Canceling geoposition watch\", this._geoWatchID);\n      this.geolocation.clearWatch(this._geoWatchID);\n      delete this._geoWatchID;\n    }\n  }\n\n  /** @return {String} Human-readable representation of this GeoPosition **/\n  toString(): string {\n    return `GeoPosition (enabled: ${this.isEnabled})`;\n  }\n\n  /** @return {Object} coordinates - last known coordinates received from the geolocation system (defaults to latitude 1, longitude 1) **/\n  getLastCoords(): Coordinates {\n    return this._lastCoords;\n  }\n\n  connect(geoUpdateCallback: CallableFunction) {\n    this.updateCallback = geoUpdateCallback;\n    // Ensure that geolocation is started if it was enabled from instantiation.\n    if (this.isEnabled) {\n      this.enable();\n    }\n  }\n\n  /** Attempts to get an initial rough geographic location for the listener, then sets up a callback\n   * to update the position.\n   * @param {Function} geoUpdateCallback - object that should receive geolocation coordinate updates\n   * @see isEnabled **/\n  enable() {\n    if (this.isEnabled && this._geoWatchID) {\n      return;\n    }\n\n    const {\n      defaultCoords,\n      _navigator: { geolocation },\n    } = this;\n\n    this.isEnabled = true;\n\n    logger.log(\"Initializing geolocation system\");\n\n    this._initialGeolocationPromise = new Promise((resolve) => {\n      geolocation.getCurrentPosition(\n        (initialPosition) => {\n          const { coords } = initialPosition;\n          this._lastCoords = coords;\n          logger.info(\"Received initial geolocation:\", coords);\n          this.updateCallback(coords);\n          resolve(coords);\n        },\n        (error) => {\n          logger.warn(\n            `Unable to get initial geolocation: ${error.message} (code #${error.code}), falling back to default coordinates for initial listener location`\n          );\n          resolve(defaultCoords);\n        },\n        fastGeolocationPositionOptions\n      );\n    });\n\n    this._geoWatchID = geolocation.watchPosition(\n      (updatedPosition) => {\n        const { coords } = updatedPosition;\n        this._lastCoords = coords;\n        logger.info(\"Received updated geolocation:\", coords);\n        this.updateCallback(coords);\n      },\n      (error) =>\n        logger.warn(\n          `Unable to watch geoposition changes: ${error.message} (code #${error.code})`\n        ),\n      accurateGeolocationPositionOptions\n    );\n  }\n\n  /** Allows you to wait on the progress of the .connect() behavior, attempting to get an initial\n   * estimate of the user's position. Note that this promise will never fail - if we cannot get an\n   * accurate estimate, we fall back to default coordinates (currently latitude 1, longitude 1)\n   * @return {Promise} Represents the attempt to get an initial estimate of the user's position **/\n  waitForInitialGeolocation(): Promise<Coordinates> {\n    return this._initialGeolocationPromise;\n  }\n}\n","import { SpeakerTrack } from \"./speaker_track\";\nimport { Playlist } from \"./playlist\";\nimport { buildAudioContext, coordsToPoints, getUrlParam } from \"./utils\";\nimport { AssetPool } from \"./assetPool\";\nimport { IAssetPool } from \"./types/assetPool\";\nimport { IRoundware } from \"./types/roundware\";\nimport { Point } from \"@turf/helpers\";\nimport { IAssetData, Coordinates, IMixParams } from \"./types\";\nimport { AudioTrack, IMixer } from \"./types/mixer\";\nimport { ISpeakerTrack } from \"./types/speaker-track\";\nimport { IPlaylist } from \"./types/playlist\";\n\nexport const GeoListenMode = Object.freeze({\n  DISABLED: 0,\n  MANUAL: 1,\n  AUTOMATIC: 2,\n});\n\nexport class Mixer implements IMixer {\n  playing: boolean;\n  private _windowScope: Window;\n  private _client: IRoundware;\n  private _prefetchSpeakerAudio: any | boolean;\n\n  mixParams: IMixParams;\n  playlist: IPlaylist | undefined;\n  assetPool: IAssetPool;\n  speakerTracks: ISpeakerTrack[] = [];\n\n  constructor({\n    client,\n    windowScope,\n    listenerLocation,\n    prefetchSpeakerAudio,\n    filters = [],\n    sortMethods = [],\n    mixParams = {},\n  }: {\n    client: IRoundware;\n    windowScope: Window;\n    listenerLocation: Coordinates;\n    prefetchSpeakerAudio: boolean | unknown;\n    filters?: unknown[];\n    sortMethods?: unknown[];\n    mixParams: object;\n  }) {\n    this.playing = false;\n\n    this._windowScope = windowScope;\n    this._client = client;\n    this._prefetchSpeakerAudio = prefetchSpeakerAudio;\n    const assets: IAssetData[] = client.assets();\n    const timedAssets = client.timedAssets();\n\n    this.mixParams = {\n      listenerPoint: coordsToPoints({\n        latitude: listenerLocation.latitude!,\n        longitude: listenerLocation.longitude!,\n      }),\n      ...mixParams,\n    };\n\n    this.assetPool = new AssetPool({\n      assets,\n      timedAssets,\n      // @ts-ignore\n      filters,\n      sortMethods,\n      mixParams: this.mixParams,\n    });\n  }\n\n  updateParams({ listenerLocation, ...params }: IMixParams) {\n    if (listenerLocation) {\n      params.listenerPoint = coordsToPoints({\n        latitude: listenerLocation.latitude!,\n        longitude: listenerLocation.longitude!,\n      });\n    }\n    this.mixParams = { ...this.mixParams, ...params };\n    if (this.playlist) {\n      this.playlist.updateParams(params);\n    }\n    if (this.speakerTracks) {\n      for (const t of this.speakerTracks) {\n        //@ts-ignore\n        t.updateParams(this.playing, params);\n      }\n    }\n  }\n\n  skipTrack(trackId: number) {\n    if (this.playlist) this.playlist.skip(trackId);\n  }\n\n  skip() {}\n  replayTrack(trackId: number) {\n    if (this.playlist) this.playlist.replay(trackId);\n  }\n\n  toString(): string {\n    return \"Roundware Mixer\";\n  }\n\n  initContext() {\n    if (!this.playlist) {\n      const audioContext = buildAudioContext(this._windowScope);\n\n      if (!this.mixParams.listenerPoint)\n        throw new Error(`listenerPoint was missing from mixParams!`);\n      const listenerPoint = this.mixParams.listenerPoint;\n      const speakers = this._client.speakers();\n\n      let selectTrackId: string | number | null = getUrlParam(\n        this._windowScope.location.toString(),\n        \"rwfSelectTrackId\"\n      );\n      let audioTracks = this._client.audiotracks();\n\n      if (selectTrackId) {\n        selectTrackId = Number(selectTrackId);\n        audioTracks = audioTracks.filter((t) => t.id === selectTrackId);\n\n        console.info(`isolating track #${selectTrackId}`);\n      }\n\n      this.playlist = new Playlist({\n        client: this._client,\n        audioTracks,\n        listenerPoint,\n        assetPool: this.assetPool,\n        audioContext,\n        windowScope: this._windowScope,\n      });\n\n      this.speakerTracks = speakers.map(\n        (speakerData) =>\n          new SpeakerTrack({\n            audioContext,\n            listenerPoint,\n            prefetchAudio: this._prefetchSpeakerAudio,\n            data: speakerData,\n          })\n      );\n\n      this.updateParams(this.mixParams);\n    }\n  }\n\n  toggle() {\n    // Build the audio context and playlist if it doesn't exist yet.\n    this.initContext();\n\n    if (this.playing) {\n      this.playing = false;\n      if (this.playlist) this.playlist.pause();\n      this.speakerTracks.forEach((s) => s.pause());\n    } else {\n      this.playing = true;\n      if (this.playlist) this.playlist.play();\n      this.speakerTracks.forEach((s) => s.play());\n    }\n\n    return this.playing;\n  }\n}\n","import { IAssetData } from \"../types\";\nimport { IAsset } from \"../types/asset\";\nimport { IAssetEnvelope } from \"../types/mixer/AssetEnvelope\";\nimport { ITrackOptions } from \"../types/mixer/TrackOptions\";\nimport { random } from \"../utils\";\n\nexport class AssetEnvelope implements IAssetEnvelope {\n  asset: IAssetData;\n  assetId: string | number | undefined;\n  minDuration: number;\n  maxDuration: number;\n  duration: number;\n  start: number;\n  fadeInDuration: number;\n  fadeOutDuration: number;\n  startFadingOutSecs: number;\n\n  constructor(trackOptions: ITrackOptions, asset: IAssetData) {\n    const {\n      randomFadeInDuration,\n      randomFadeOutDuration,\n      fadeOutMultiplier,\n      durationLowerBound,\n      durationUpperBound,\n    } = trackOptions;\n\n    const {\n      activeRegionLowerBound,\n      activeRegionUpperBound,\n      activeRegionLength,\n    } = asset;\n\n    this.asset = asset;\n    this.assetId = asset.id;\n\n    this.minDuration = Math.min(durationLowerBound, Number(activeRegionLength));\n    this.maxDuration = Math.min(durationUpperBound, Number(activeRegionLength));\n    this.duration = random(this.minDuration, this.maxDuration);\n\n    const latestStart = Number(activeRegionUpperBound) - this.duration;\n    this.start = random(activeRegionLowerBound, latestStart);\n\n    this.fadeInDuration = Math.min(randomFadeInDuration, this.duration / 2);\n    this.fadeOutDuration =\n      Math.min(randomFadeOutDuration, this.duration / 2) *\n      Number(fadeOutMultiplier);\n    this.startFadingOutSecs =\n      this.duration - this.fadeInDuration - this.fadeOutDuration;\n  }\n\n  toString() {\n    const {\n      asset: { id: assetId },\n    } = this;\n    return `AssetEnvelope #${assetId}`;\n  }\n}\n","import { IAudioTrackData } from \"../types/audioTrack\";\nimport { ITrackOptions } from \"../types/mixer/TrackOptions\";\nimport { hasOwnProperty, random } from \"../utils\";\n\nexport class TrackOptions implements ITrackOptions {\n  volumeRange: number[];\n  duration: number[];\n  deadAir: number[];\n  fadeInTime: number[];\n  fadeOutTime: number[];\n  repeatRecordings: boolean;\n  tags: string[] | number[];\n  bannedDuration: number;\n  startWithSilence: boolean;\n  fadeOutWhenFiltered: boolean;\n  fadeOutMultiplier: number;\n  constructor(\n    urlParamLookup: (param: string) => string | number,\n    params: IAudioTrackData\n  ) {\n    this.volumeRange = [params.minvolume, params.maxvolume];\n    this.duration = [params.minduration, params.maxduration];\n    this.deadAir = [params.mindeadair, params.maxdeadair];\n    this.fadeInTime = [params.minfadeintime, params.maxfadeintime];\n    this.fadeOutTime = [params.minfadeouttime, params.maxfadeouttime];\n    this.repeatRecordings = !!params.repeatrecordings;\n    this.tags = params.tag_filters;\n    (this.bannedDuration = params.banned_duration || 600),\n      (this.startWithSilence = hasOwnProperty(params, \"start_with_silence\")\n        ? !!params.start_with_silence\n        : true);\n    this.fadeOutWhenFiltered = hasOwnProperty(params, \"fadeout_when_filtered\")\n      ? !!params.fadeout_when_filtered\n      : true;\n    this.fadeOutMultiplier = 1;\n\n    const fadeOutMultiplierParam = urlParamLookup(\"rwfFadeOutMultiplier\");\n\n    if (fadeOutMultiplierParam) {\n      this.fadeOutMultiplier = Number(fadeOutMultiplierParam);\n      console.log(\"Applying fade-out multiplier\", this.fadeOutMultiplier);\n    }\n  }\n\n  get randomVolume() {\n    return random(this.volumeRangeLowerBound, this.volumeRangeUpperBound);\n  }\n\n  get randomDeadAir() {\n    return random(this.deadAirLowerBound, this.deadAirUpperBound);\n  }\n\n  get randomFadeInDuration() {\n    return Math.min(\n      random(this.fadeInLowerBound, this.fadeInUpperBound),\n      this.durationHalfway\n    );\n  }\n\n  get randomFadeOutDuration() {\n    return Math.min(\n      random(this.fadeOutLowerBound, this.fadeOutUpperBound),\n      this.durationHalfway\n    );\n  }\n\n  get volumeRangeLowerBound() {\n    return this.volumeRange[0];\n  }\n\n  get volumeRangeUpperBound() {\n    return this.volumeRange[1];\n  }\n\n  get deadAirLowerBound() {\n    return this.deadAir[0];\n  }\n\n  get deadAirUpperBound() {\n    return this.deadAir[1];\n  }\n\n  get durationLowerBound() {\n    return this.duration[0];\n  }\n\n  get durationUpperBound() {\n    return this.duration[1];\n  }\n\n  get durationHalfway() {\n    return (this.durationUpperBound - this.durationLowerBound) / 2;\n  }\n\n  get fadeInLowerBound() {\n    return this.fadeInTime[0];\n  }\n\n  get fadeInUpperBound() {\n    return this.fadeInTime[1];\n  }\n\n  get fadeOutLowerBound() {\n    return this.fadeOutTime[0];\n  }\n\n  get fadeOutUpperBound() {\n    return this.fadeOutTime[1];\n  }\n}\n","import { PlaylistAudiotrack } from \"./playlistAudioTrack\";\n\nimport { IPlaylist } from \"./types/playlist\";\nimport { IRoundware } from \"./types/roundware\";\nimport { getUrlParam } from \"./utils\";\nimport { Point } from \"@turf/helpers\";\nimport { IAssetPool } from \"./types/assetPool\";\nimport { IAudioContext } from \"standardized-audio-context\";\nimport { IAudioTrack, IAudioTrackData } from \"./types/audioTrack\";\nimport { ITrack } from \"./types\";\n\nexport class Playlist implements IPlaylist {\n  listenerPoint: Point;\n  playingTracks: IAudioTrackData[];\n  assetPool: IAssetPool;\n  playing: boolean;\n  listenTagIds: number[];\n  _client: IRoundware;\n  _elapsedTimeMs: number;\n  trackMap: Map<any, any>;\n  trackIdMap: {};\n  playlistLastStartedAt: Date | undefined;\n\n  constructor({\n    client,\n    audioTracks = [],\n    listenerPoint,\n    windowScope,\n    assetPool,\n    ...playlistTrackOptions\n  }: {\n    client: IRoundware;\n    audioTracks?: IAudioTrackData[];\n    listenerPoint: Point;\n    windowScope: Window;\n    assetPool: IAssetPool;\n    audioContext?: IAudioContext;\n  }) {\n    this.listenerPoint = listenerPoint;\n    this.playingTracks = [];\n    this.assetPool = assetPool;\n    this.playing = false;\n    this.listenTagIds = [];\n    this._client = client;\n\n    let elapsedTimeMs = 0;\n    const timerSecs = getUrlParam(\n      windowScope.location.toString(),\n      \"rwfTimerSeconds\"\n    );\n\n    if (timerSecs) {\n      const elapsedSecs = Number(timerSecs);\n      elapsedTimeMs = elapsedSecs * 1000;\n      console.log(`Setting playlist timer to ${elapsedSecs.toFixed(1)}s`);\n    }\n\n    this._elapsedTimeMs = elapsedTimeMs;\n    const trackIdMap = {};\n    const trackMap = new Map();\n\n    audioTracks.forEach((audioData: IAudioTrackData) => {\n      // @ts-ignore\n      const track = new PlaylistAudiotrack({\n        audioData,\n        ...playlistTrackOptions,\n        windowScope,\n        playlist: this,\n      });\n\n      // @ts-ignore\n      trackIdMap[track.trackId] = track;\n      trackMap.set(track, null);\n    }, {});\n\n    this.trackMap = trackMap;\n    this.trackIdMap = trackIdMap;\n  }\n\n  get tracks() {\n    // @ts-ignore\n    return [...this.trackMap.keys()];\n  }\n\n  get currentlyPlayingAssets() {\n    const assets = [];\n    // @ts-ignore\n    for (const a of this.trackMap.values()) {\n      if (a) {\n        assets.push(a);\n      }\n    }\n    return assets;\n  }\n\n  updateParams({\n    listenerPoint,\n    listenTagIds,\n    ...params\n  }: {\n    listenerPoint: Point;\n    listenTagIds: number[];\n  }) {\n    if (listenerPoint) this.listenerPoint = listenerPoint;\n    if (listenTagIds) {\n      this.listenTagIds = listenTagIds.map((t) => Number(t));\n    }\n    this.tracks.forEach((t) => t.updateParams(params));\n  }\n\n  play() {\n    this.tracks.forEach((t) => t.play());\n    this.playlistLastStartedAt = new Date();\n    this.playing = true;\n  }\n\n  skip(trackId?: number) {\n    if (typeof trackId == \"undefined\") return;\n    // @ts-ignore\n    const track = this.trackIdMap[Number(trackId)];\n    if (track) track.skip();\n  }\n\n  replay(trackId: number) {\n    // @ts-ignore\n    const track = this.trackIdMap[Number(trackId)];\n    if (track) track.replay();\n  }\n\n  pause() {\n    this.tracks.forEach((t) => t.pause());\n\n    if (this.playlistLastStartedAt) {\n      this._elapsedTimeMs =\n        this._elapsedTimeMs +\n        (new Date().getMilliseconds() -\n          this.playlistLastStartedAt.getMilliseconds());\n      delete this.playlistLastStartedAt;\n    }\n\n    this.playing = false;\n  }\n\n  get elapsedTimeMs() {\n    const now = new Date();\n    const lastStartedAt = this.playlistLastStartedAt\n      ? this.playlistLastStartedAt\n      : now;\n    const elapsedSinceLastStartMs =\n      now.getMilliseconds() - lastStartedAt.getMilliseconds();\n\n    return this._elapsedTimeMs + elapsedSinceLastStartMs;\n  }\n\n  next(forTrack: ITrack) {\n    const {\n      assetPool,\n      currentlyPlayingAssets: filterOutAssets,\n      elapsedTimeMs,\n      listenTagIds,\n    } = this;\n    const elapsedSeconds = elapsedTimeMs / 1000;\n\n    const nextAsset = assetPool.nextForTrack(forTrack, {\n      filterOutAssets,\n      elapsedSeconds,\n      listenerPoint: this.listenerPoint,\n      listenTagIds,\n    });\n\n    this.trackMap.set(forTrack, nextAsset);\n    this._client._triggerOnPlayAssets();\n\n    return nextAsset;\n  }\n}\n","import { getUrlParam, timestamp } from \"./utils\";\nimport { makeInitialTrackState } from \"./TrackStates\";\nimport { TrackOptions } from \"./mixer/TrackOptions\";\nimport { IPlaylistAudiotrack } from \"./types/playlistAudioTrack\";\nimport { IAudioContext } from \"standardized-audio-context\";\nimport { IAssetData, IAudioData, IMixParams } from \"./types\";\nimport { IAudioTrackData } from \"./types/audioTrack\";\nimport { IPlaylist } from \"./types/playlist\";\nimport { IPlayingState, ITrackStates } from \"./types/track-states\";\nimport { ITrackOptions } from \"./types/mixer/TrackOptions\";\n\n/*\n@see https://github.com/loafofpiecrust/roundware-ios-framework-v2/blob/client-mixing/RWFramework/RWFramework/Playlist/AudioTrack.swift\n\n Audiotracks data looks like this:\n\n [{\n   \"id\": 8,\n   \"minvolume\": 0.7,\n   \"maxvolume\": 0.7,\n   \"minduration\": 200.0,\n   \"maxduration\": 250.0,\n   \"mindeadair\": 1.0,\n   \"maxdeadair\": 3.0,\n   \"minfadeintime\": 2.0,\n   \"maxfadeintime\": 4.0,\n   \"minfadeouttime\": 0.3,\n   \"maxfadeouttime\": 1.0,\n   \"minpanpos\": 0.0,\n   \"maxpanpos\": 0.0,\n   \"minpanduration\": 10.0,\n   \"maxpanduration\": 20.0,\n   \"repeatrecordings\": false,\n   \"active\": true,\n   \"start_with_silence\": false,\n   \"banned_duration\": 600,\n   \"tag_filters\": [],\n   \"project_id\": 9\n }]\n\n\n asset looks like:\n\n {\n  alt_text_loc_ids: []\n  audio_length_in_seconds: 14.4\n  created: \"2019-03-13T20:09:34.237155\"\n  description: \"\"\n  description_loc_ids: []\n  end_time: 14.396\n  envelope_ids: [6204]\n  file: \"https://prod.roundware.com/rwmedia/20190313-200933-43867.mp3\"\n  filename: \"20190313-200933-43867.wav\"\n  id: 11511\n  language_id: 1\n  latitude: 42.4985662\n  longitude: -71.2809467\n  media_type: \"audio\"\n  project_id: 27\n  session_id: 43867\n  shape: null\n  start_time: 0\n  submitted: true\n  tag_ids: [290]\n  updated: \"2019-03-13T20:09:34.237155\"\n  user: null\n  volume: 1\n  weight: 50\n  }\n\n*/\n\n//const LOGGABLE_AUDIO_ELEMENT_EVENTS = ['loadstart','playing','stalled','waiting']; // see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#Events\nconst LOGGABLE_AUDIO_ELEMENT_EVENTS = [\n  \"pause\",\n  \"play\",\n  \"playing\",\n  \"waiting\",\n  \"stalled\",\n]; // see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement#Events\nconst NEARLY_ZERO = 0.01; // webaudio spec says you can't use 0.0 as a value due to floating point math concerns\n\nexport class PlaylistAudiotrack implements IPlaylistAudiotrack {\n  trackId: any;\n  timedAssetPriority: any;\n  playlist: any;\n  playing: boolean;\n  windowScope: Window;\n  currentAsset: IAssetData | undefined;\n  audioContext: IAudioContext;\n  audioElement: HTMLAudioElement;\n  gainNode: any;\n  trackOptions: TrackOptions;\n  mixParams: IMixParams;\n  state: ITrackStates | undefined;\n  constructor({\n    audioContext,\n    windowScope,\n    audioData,\n    playlist,\n  }: {\n    audioContext: IAudioContext;\n    windowScope: Window;\n    audioData: IAudioTrackData;\n    playlist: IPlaylist;\n  }) {\n    this.trackId = audioData.id;\n    this.timedAssetPriority = audioData.timed_asset_priority;\n    this.playlist = playlist;\n    this.playing = false;\n    this.windowScope = windowScope;\n\n    const audioElement = new Audio();\n\n    audioElement.crossOrigin = \"anonymous\";\n    audioElement.loop = false;\n\n    const audioSrc = audioContext.createMediaElementSource(audioElement);\n    const gainNode = audioContext.createGain();\n\n    audioSrc.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n\n    LOGGABLE_AUDIO_ELEMENT_EVENTS.forEach((name) =>\n      audioElement.addEventListener(name, () =>\n        console.log(`\\t[${this} audio ${name} event]`)\n      )\n    );\n\n    audioElement.addEventListener(\"error\", () => this.onAudioError());\n    audioElement.addEventListener(\"ended\", () => this.onAudioEnded());\n\n    const trackOptions = new TrackOptions(\n      (param) => getUrlParam(windowScope.location.toString(), param),\n      audioData\n    );\n\n    this.audioContext = audioContext;\n    this.audioElement = audioElement;\n    this.gainNode = gainNode;\n    this.trackOptions = trackOptions;\n    this.mixParams = { timedAssetPriority: audioData.timed_asset_priority };\n\n    this.setInitialTrackState();\n  }\n\n  setInitialTrackState() {\n    this.state = makeInitialTrackState(this, this.trackOptions);\n  }\n\n  onAudioError(evt?: any) {\n    console.warn(`\\t[${this} audio error, skipping to next track]`, evt);\n    this.setInitialTrackState();\n  }\n\n  onAudioEnded() {\n    console.log(`\\t[${this} audio ended event]`);\n  }\n\n  play() {\n    console.log(`${timestamp} ${this}: ${this.state}`);\n    if (!this.state)\n      console.warn(`No Initial track state. call \\`setInitialTrackState()\\``);\n    else this.state.play();\n  }\n\n  updateParams(params = {}) {\n    this.mixParams = { ...this.mixParams, ...params };\n    if (this.state) this.state.updateParams(this.mixParams);\n    else console.warn(`State is undefined!`);\n  }\n\n  // Halts any scheduled gain changes and holds at current level\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime\n  holdGain() {\n    const {\n      gainNode: { gain },\n      audioContext: { currentTime },\n    } = this;\n    gain.cancelScheduledValues(currentTime);\n  }\n\n  setZeroGain() {\n    const {\n      gainNode: { gain },\n      audioContext: { currentTime },\n    } = this;\n    gain.setValueAtTime(NEARLY_ZERO, currentTime); // http://alemangui.github.io/blog//2015/12/26/ramp-to-value.html\n  }\n\n  // exponentialRampToValueAtTime sounds more gradual for fading in\n  fadeIn(fadeInDurationSeconds: number): boolean {\n    const currentAsset = this.currentAsset;\n    if (!currentAsset || !currentAsset.volume) {\n      console.warn(`currentAsset is undefined!`);\n      return false;\n    }\n\n    const randomVolume = this.trackOptions.randomVolume;\n\n    const finalVolume = randomVolume * currentAsset.volume;\n\n    try {\n      this.setZeroGain();\n      this.playAudio();\n      this.rampGain(finalVolume, fadeInDurationSeconds);\n      return true;\n    } catch (err) {\n      this.currentAsset = undefined;\n      console.warn(`${this} unable to play`, currentAsset, err);\n      return false;\n    }\n  }\n\n  rampGain(\n    finalVolume: number,\n    durationSeconds: number,\n    rampMethod = \"exponentialRampToValueAtTime\"\n  ) {\n    const {\n      gainNode: { gain },\n      audioContext: { currentTime },\n    } = this;\n\n    console.log(\n      `\\t[ramping ${this} gain to ${finalVolume.toFixed(\n        2\n      )} (${durationSeconds.toFixed(1)}s - ${rampMethod})]`\n    );\n\n    try {\n      gain.setValueAtTime(gain.value, currentTime); // http://alemangui.github.io/blog//2015/12/26/ramp-to-value.html\n      gain[rampMethod](finalVolume, currentTime + durationSeconds);\n      return true;\n    } catch (err) {\n      console.warn(`Unable to ramp gain ${this}`, err);\n      return false;\n    }\n  }\n\n  // linearRampToValueAtTime sounds more gradual for fading out\n  fadeOut(fadeOutDurationSeconds: number) {\n    return this.rampGain(\n      NEARLY_ZERO,\n      fadeOutDurationSeconds,\n      \"linearRampToValueAtTime\"\n    ); // 'exponentialRampToValueAtTime');\n  }\n\n  loadNextAsset() {\n    const { audioElement, currentAsset } = this;\n    if (\n      !currentAsset ||\n      !currentAsset.playCount ||\n      !currentAsset.lastListenTime\n    ) {\n      console.warn(`currentAsset properties were undefined!`);\n      return false;\n    }\n    if (currentAsset) {\n      currentAsset.playCount++;\n      currentAsset.lastListenTime = new Date();\n    }\n\n    const newAsset = this.playlist.next(this);\n    this.currentAsset = newAsset;\n\n    if (newAsset) {\n      const { file, start } = newAsset;\n      console.log(`\\t[loading next asset ${this}: ${file}]`);\n\n      audioElement.src = file;\n      audioElement.currentTime = start >= NEARLY_ZERO ? start : NEARLY_ZERO; // value but must fininite\n\n      this.audioElement = audioElement;\n\n      return newAsset;\n    }\n\n    return null;\n  }\n\n  pause() {\n    console.log(`${timestamp} pausing ${this}`);\n    if (!this.state)\n      return console.warn(`pause() was called on a undefined state!`);\n    this.state.pause();\n    if (this.audioElement) this.audioElement.pause();\n  }\n\n  playAudio() {\n    if (this.audioElement) this.audioElement.play();\n  }\n\n  pauseAudio() {\n    this.holdGain();\n    if (this.audioElement) this.audioElement.pause();\n  }\n\n  skip() {\n    const { state } = this;\n    console.log(`Skipping ${this}`);\n    if (state) state.skip();\n  }\n\n  replay() {\n    const { state } = this;\n    console.log(`Replaying ${this}`);\n    if (state) state.replay();\n  }\n\n  transition(newState: ITrackStates) {\n    const {\n      state,\n      playlist: { elapsedTimeMs },\n    } = this;\n\n    console.log(\n      `${timestamp} ${this}: '${state}' ➜  '${newState}' (${(\n        elapsedTimeMs / 1000\n      ).toFixed(1)}s elapsed)`\n    );\n\n    if (!this.state) return console.warn(`!current state was undefined`);\n    this.state.finish();\n    this.state = newState;\n    this.state.play();\n  }\n\n  toString() {\n    return `Track #${this.trackId}`;\n  }\n}\n","import { IApiClient } from \"./types/api-client\";\nimport { GeoListenMode } from \"./mixer\";\nimport { Coordinates, IProject, UiConfig } from \"./types\";\n\nexport class Project implements IProject {\n  projectId: number;\n  projectName: string;\n  apiClient: IApiClient;\n  legalAgreement: unknown;\n  recordingRadius: unknown;\n  maxRecordingLength: unknown;\n  location: Coordinates = { latitude: 1, longitude: 1 };\n  mixParams: {};\n\n  constructor(newProjectId: number, { apiClient }: { apiClient: IApiClient }) {\n    this.projectId = newProjectId;\n    this.projectName = \"(unknown)\";\n    this.apiClient = apiClient;\n    this.mixParams = {};\n  }\n\n  toString(): string {\n    return `Roundware Project '${this.projectName}' (#${this.projectId})`;\n  }\n\n  async connect(sessionId: string): Promise<string | undefined> {\n    const path = \"/projects/\" + this.projectId + \"/\";\n\n    const requestData = { session_id: sessionId };\n\n    try {\n      const data = await this.apiClient.get<{\n        name: string;\n        legal_agreement: unknown;\n        recording_radius: unknown;\n        max_recording_length: unknown;\n        latitude: number;\n        longitude: number;\n        geo_listen_enabled: boolean;\n        ordering: unknown;\n      }>(path, requestData);\n      //console.info({ PROJECTDATA: data });\n\n      this.projectName = data.name;\n      this.legalAgreement = data.legal_agreement;\n      this.recordingRadius = data.recording_radius;\n      this.maxRecordingLength = data.max_recording_length;\n      this.location = { latitude: data.latitude, longitude: data.longitude };\n\n      this.mixParams = {\n        geoListenMode: data.geo_listen_enabled\n          ? GeoListenMode.MANUAL\n          : GeoListenMode.DISABLED,\n        recordingRadius: data.recording_radius,\n        ordering: data.ordering,\n        ...this.mixParams,\n      };\n\n      return sessionId;\n    } catch (err) {\n      console.error(\"Unable to get Project details\", err);\n    }\n  }\n\n  async uiconfig(sessionId: string): Promise<UiConfig> {\n    const path = \"/projects/\" + this.projectId + \"/uiconfig/\";\n    const data = { session_id: sessionId };\n\n    return await this.apiClient.get<UiConfig>(path, data);\n  }\n}\n","import { Project } from \"./project\";\nimport { IProject } from \"./types\";\nimport { Session } from \"./session\";\nimport { ISession } from \"./types\";\nimport { Speaker } from \"./speaker\";\nimport { ISpeaker, ISpeakerFilters } from \"./types/speaker\";\nimport { GeoPosition } from \"./geo-position\";\nimport { IGeoPosition } from \"./types\";\nimport { Asset } from \"./asset\";\nimport { IAsset, IAssetFilters } from \"./types/asset\";\nimport { TimedAsset } from \"./timed_asset\";\nimport { ITimedAsset, ITimedAssetData } from \"./types\";\nimport { logger } from \"./shims\";\nimport { ApiClient } from \"./api-client\";\nimport { User } from \"./user\";\nimport { IUser } from \"./types/user\";\nimport { Envelope } from \"./envelope\";\nimport { IEnvelope } from \"./types/envelope\";\nimport { Mixer, GeoListenMode } from \"./mixer\";\nimport { Audiotrack } from \"./audiotrack\";\nimport { IAudioTrack } from \"./types/audioTrack\";\nimport { ASSET_PRIORITIES } from \"./assetFilters\";\nimport { IApiClient } from \"./types/api-client\";\nimport {\n  IAssetData,\n  Coordinates,\n  IInitialParams,\n  IUiConfig,\n  TimedAssetT,\n  IAudioData,\n} from \"./types\";\nimport {\n  IOptions,\n  IRoundware,\n  IRoundwareConstructorOptions,\n} from \"./types/roundware\";\nimport { IMixer } from \"./types/mixer\";\nimport { ISpeakerData } from \"./types/speaker\";\nimport { IAudioTrackData } from \"./types/audioTrack\";\nimport { IAssetPool } from \"./types/assetPool\";\n\nexport * from \"./assetFilters\";\nexport { GeoListenMode } from \"./mixer\";\n\n/** This class is the primary integration point between Roundware's server and your application\n\n   @example\n   var roundwareServerUrl = \"http://localhost:8888/api/2\";\n   var roundwareProjectId = 1;\n\n   var roundware = new Roundware(window,{\n     serverUrl: roundwareServerUrl,\n     projectId: roundwareProjectId\n   });\n\n   function ready() {\n     console.info(\"Connected to Roundware Server. Ready to play.\");\n     // this is a good place to initialize audio player controls, etc.\n   }\n\n   // Generally we throw user-friendly messages and log a more technical message\n   function handleError(userErrMsg) {\n     console.error(\"Roundware Error: \" + userErrMsg);\n   }\n\n  roundware.connect().\n    then(ready).\n    catch(handleError);\n\n  function startListening(streamURL) {\n    console.info(\"Loading \" + streamURL);\n    // good place to connect your audio player to the audio stream\n  }\n\n  roundware.play(startListening).catch(handleError);\n**/\n\nexport class Roundware implements IRoundware {\n  readonly windowScope: Window;\n  private _serverUrl: string;\n  private _projectId: number;\n  private _speakerFilters: ISpeakerFilters = {};\n  private _assetFilters: IAssetFilters;\n  private _listenerLocation: Coordinates;\n  private _initialOptions: IOptions;\n  private _assetUpdateInterval: number;\n  private _apiClient: IApiClient;\n\n  private _user: IUser;\n  private _geoPosition: IGeoPosition;\n  private _session: ISession;\n  private _project: IProject;\n  private _speaker: ISpeaker;\n  private _asset: IAsset;\n  private _timed_asset: ITimedAsset;\n  private _audiotrack: IAudioTrack;\n\n  private _initialParams: IInitialParams = {};\n  private _mixer: IMixer;\n  private _onUpdateLocation: CallableFunction = () => {};\n  private _onUpdateAssets: CallableFunction = () => {};\n  private _assetData: IAssetData[] = [];\n  private _onPlayAssets: CallableFunction = () => {};\n  private _sessionId: number | string | undefined;\n  uiConfig: IUiConfig = {};\n  private _speakerData: ISpeakerData[] = [];\n  private _audioTracksData: IAudioTrackData[] = [];\n  private _lastAssetUpdate: Date | undefined;\n  private _timedAssetData: ITimedAssetData[] = [];\n  private _assetDataTimer: NodeJS.Timeout | undefined;\n\n  /** Initialize a new Roundware instance\n   * @param {Object} windowScope - representing the context in which we are executing - provides references to window.navigator, window.console, etc.\n   * @param {Object} options - Collection of parameters for configuring this Roundware instance\n   * @param {String} options.serverUrl - identifies the Roundware server\n   * @param {Number} options.projectId - identifies the Roundware project to connect\n   * @param {Boolean} options.geoListenMode - whether or not to attempt to initialize geolocation-based listening\n   * @throws Will throw an error if serveUrl or projectId are missing\n    TODO need to provide a more modern/ES6-aware architecture here vs burdening the constructor with all of these details **/\n\n  constructor(\n    windowScope: Window,\n    {\n      serverUrl,\n      projectId,\n      speakerFilters,\n      assetFilters,\n      listenerLocation,\n      user,\n      geoPosition,\n      session,\n      project,\n      speaker,\n      asset,\n      timedAsset,\n      audiotrack,\n      assetUpdateInterval,\n      prefetchSpeakerAudio,\n      ...options\n    }: IRoundwareConstructorOptions\n  ) {\n    this.windowScope = windowScope;\n    this._serverUrl = serverUrl;\n    this._projectId = projectId;\n    if (speakerFilters) this._speakerFilters = speakerFilters;\n    this._assetFilters = assetFilters;\n    this._listenerLocation = listenerLocation;\n    this._initialOptions = options;\n    // By default, update the asset pool every 5 minutes.\n    this._assetUpdateInterval = assetUpdateInterval || 300000;\n\n    if (this._serverUrl === undefined) {\n      throw \"Roundware objects must be initialized with a serverUrl\";\n    }\n\n    if (this._projectId === undefined) {\n      throw \"Roundware objects must be initialized with a projectId\";\n    }\n\n    this._apiClient = new ApiClient(window, this._serverUrl);\n    options.apiClient = this._apiClient;\n\n    let navigator = window.navigator;\n\n    // TODO need to reorganize/refactor these classes\n    this._user = user || new User(options);\n    this._geoPosition =\n      geoPosition ||\n      new GeoPosition(navigator, {\n        geoListenMode: options.geoListenMode,\n        defaultCoords: listenerLocation,\n      });\n    this._session =\n      session ||\n      new Session(\n        navigator,\n        this._projectId,\n        this._geoPosition.isEnabled,\n        options\n      );\n    this._project = project || new Project(this._projectId, options);\n    this._speaker = speaker || new Speaker(this._projectId, options);\n    this._asset = asset || new Asset(this._projectId, options);\n    this._timed_asset = timedAsset || new TimedAsset(this._projectId, options);\n    this._audiotrack = audiotrack || new Audiotrack(this._projectId, options);\n    this.uiConfig = {};\n\n    const mixParams: object = {\n      ...this.mixParams,\n      ...this._initialParams,\n    };\n\n    this._mixer = new Mixer({\n      client: this,\n      windowScope: this.windowScope,\n      listenerLocation: this._listenerLocation,\n      prefetchSpeakerAudio: prefetchSpeakerAudio || false,\n      mixParams,\n    });\n  }\n\n  updateLocation(listenerLocation: Coordinates): void {\n    this._listenerLocation = listenerLocation;\n\n    this._mixer.updateParams({ listenerLocation });\n    if (this._onUpdateLocation) this._onUpdateLocation(listenerLocation);\n  }\n\n  set onUpdateLocation(callback: CallableFunction) {\n    this._onUpdateLocation = callback;\n\n    const lastCoords = this._geoPosition.getLastCoords();\n    callback(lastCoords);\n  }\n\n  set onUpdateAssets(callback: CallableFunction) {\n    this._onUpdateAssets = callback;\n\n    if (this._assetData) {\n      callback(this.assets());\n    }\n  }\n\n  set onPlayAssets(callback: CallableFunction) {\n    this._onPlayAssets = callback;\n    callback(this.currentlyPlayingAssets);\n  }\n\n  _triggerOnPlayAssets() {\n    if (this._onPlayAssets) {\n      this._onPlayAssets(this.currentlyPlayingAssets);\n    }\n  }\n\n  get currentlyPlayingAssets() {\n    return this._mixer.playlist && this._mixer.playlist.currentlyPlayingAssets;\n  }\n\n  enableGeolocation(mode: number) {\n    if (mode === GeoListenMode.AUTOMATIC) {\n      this._geoPosition.enable();\n    } else {\n      this._geoPosition.disable();\n    }\n    this._mixer.updateParams({ geoListenMode: mode });\n  }\n\n  disableGeolocation() {\n    this._geoPosition.disable();\n    this._mixer.updateParams({ geoListenMode: GeoListenMode.DISABLED });\n  }\n\n  /** Initiate a connection to Roundware\n   *  @return {Promise} - Can be resolved in order to get the audio stream URL, or rejected to get an error message; see example above **/\n  async connect(): Promise<{ uiConfig: IUiConfig }> {\n    // want to start this process as soon as possible, as it can take a few seconds\n    this._geoPosition.connect((newLocation: Coordinates) =>\n      this.updateLocation(newLocation)\n    );\n\n    logger.info(`Initializing Roundware for project ID ${this._projectId}`);\n\n    try {\n      await this._user.connect();\n      const sessionId = await this._session.connect();\n      this._sessionId = sessionId;\n\n      const promises = [\n        this._project.connect(sessionId),\n        this._project\n          .uiconfig(sessionId)\n          .then((uiConfig) => (this.uiConfig = uiConfig)),\n        this._speaker\n          .connect(this._speakerFilters)\n          .then((speakerData) => (this._speakerData = speakerData)),\n        this._audiotrack\n          .connect()\n          .then((audioTracksData) => (this._audioTracksData = audioTracksData)),\n      ];\n\n      await Promise.all(promises);\n      console.info(\"Roundware connected\");\n      return { uiConfig: this.uiConfig };\n    } catch {\n      throw \"Sorry, we were unable to connect to Roundware. Please try again.\";\n    }\n  }\n\n  get mixParams() {\n    return (this._project || {}).mixParams;\n  }\n\n  /// Requests list of assets from the server given some filters.\n  async getAssets(options: object) {\n    // If the caller just wants all assets, pass back the preloaded list.\n    if (!options && this._assetData) {\n      return this._assetData;\n    } else {\n      return await this._apiClient.get<unknown[]>(`/assets/`, {\n        project_id: this._projectId,\n        // Override default filters with unknown passed in options.\n        ...this._assetFilters,\n        ...(options || {}),\n      });\n    }\n  }\n\n  get assetPool(): IAssetPool | undefined {\n    return this._mixer.playlist && this._mixer.playlist.assetPool;\n  }\n\n  /// Returns a reduced asset list by filtering the overall pool.\n  /// Example: `getAssetsFromPool(allAssetFilter([distanceRangesFilter(), anyTagsFilter()]))`\n  async getAssetsFromPool(\n    assetFilter: CallableFunction,\n    extraParams = {}\n  ): Promise<IAssetData[]> {\n    const pool = await this.loadAssetPool();\n    const mixParams = { ...this.mixParams, ...extraParams };\n    return pool.filter(\n      (a) => assetFilter(a, mixParams) != ASSET_PRIORITIES.DISCARD\n    );\n  }\n\n  async updateAssetPool() {\n    let filters = this._assetFilters;\n    let existingAssets: IAssetData[] = [];\n    if (this._lastAssetUpdate) {\n      filters = {\n        ...filters,\n        created__gte: this._lastAssetUpdate.toISOString(),\n      };\n      existingAssets = this.assets();\n    }\n    this._assetData = existingAssets.concat(\n      await this._asset.connect<IAssetData>(filters)\n    );\n    this._lastAssetUpdate = new Date();\n\n    // Update the mixer's asset pool, if any.\n    const pool = this.assetPool;\n    if (pool && this._timedAssetData) {\n      pool.updateAssets(this._assetData, this._timedAssetData);\n    }\n\n    if (this._onUpdateAssets) {\n      this._onUpdateAssets(this._assetData);\n    }\n  }\n\n  async loadAssetPool(): Promise<IAssetData[]> {\n    // Options passed here should only need to go into the assets/ call.\n    if (!this._assetData) {\n      await this.updateAssetPool();\n      // Setup periodic retrieval of newly uploaded assets.\n      this._assetDataTimer = setInterval(\n        () => this.updateAssetPool(),\n        this._assetUpdateInterval\n      );\n    }\n    if (!this._timedAssetData) {\n      this._timedAssetData = await this._timed_asset.connect();\n    }\n    return this._assetData;\n  }\n\n  async activateMixer(activationParams = {}) {\n    // Make sure the asset pool is loaded.\n    await this.loadAssetPool();\n\n    this._mixer.updateParams(activationParams);\n\n    return this._mixer;\n  }\n\n  /** Create or resume the audio stream\n   * @see Stream.play **/\n  play(firstPlayCallback: (value: Coordinates) => any = () => {}) {\n    return this._geoPosition\n      .waitForInitialGeolocation()\n      .then(firstPlayCallback);\n  }\n\n  /** Tell Roundware server to pause the audio stream. You should always call this when the local audio player has been paused.\n   * @see Stream.pause **/\n  pause() {\n    if (this._mixer.playlist) {\n      this._mixer.playlist.pause();\n    }\n  }\n\n  /** Tell Roundware server to kill the audio stream.\n   * @see Stream.kill **/\n  kill() {\n    if (this._assetDataTimer) {\n      clearInterval(this._assetDataTimer);\n    }\n  }\n\n  /** Tell Roundware server to replay the current asset.\n   * @see Stream.replay **/\n  replay() {}\n\n  /** Tell Roundware server to skip the current asset.\n   * @see Stream.skip **/\n  skip() {\n    if (this._mixer.playlist) {\n      this._mixer.playlist.skip();\n    }\n  }\n\n  /** Update the Roundware stream with new tag IDs\n   * @param {string} tagIdStr - comma-separated list of tag IDs to send to the streams API **/\n  tags() {}\n\n  /** Update the Roundware stream with new tag IDs and or geo-position\n   * @param {object} data - containing keys latitude, longitude and tagIds **/\n  update(data: {\n    latitude: number;\n    longitude: number;\n    tagIds: string[] | number[];\n  }) {\n    if (this._mixer.playlist) {\n      this._mixer.playlist.updateParams(data);\n    }\n    // Object.keys(data).map(e => console.log(`key=${e}  value=${data[e]}`));\n  }\n\n  speakers(): ISpeakerData[] {\n    return this._speakerData || [];\n  }\n\n  assets(): IAssetData[] {\n    return this._assetData || [];\n  }\n\n  timedAssets(): ITimedAssetData[] | [] {\n    return this._timedAssetData || [];\n  }\n\n  audiotracks(): IAudioTrackData[] | [] {\n    return this._audioTracksData || [];\n  }\n\n  /** Attach new assets to the project\n   * @param {Object} audioData - the binary data from a recording to be saved as an asset\n   * @param {string} fileName - name of the file\n   * @return {promise} - represents the API calls to save an asset; can be tested to find out whether upload was successful\n   * @see Envelope.upload */\n  async saveAsset(audioData: IAudioData, fileName: string, data: object) {\n    const envelope = await this.makeEnvelope();\n    return envelope.upload(audioData, fileName, data);\n  }\n\n  /** Explicitly make a new envelope that you can attach multiple assets to by\n   calling the `Envelope.upload` method. This is the main way to add text,\n   photo, and video assets to an envelope. */\n  async makeEnvelope(): Promise<IEnvelope> {\n    if (!this._sessionId) {\n      throw new Error(\n        \"can't save assets without first connecting to the server\"\n      );\n    }\n\n    let envelope = new Envelope(\n      this._sessionId,\n      this._apiClient,\n      this._geoPosition,\n      this\n    );\n\n    await envelope.connect();\n    return envelope;\n  }\n\n  findTagDescription(tagId: string, tagType = \"listen\") {\n    const tagGroups = this.uiConfig[tagType];\n    for (const group of tagGroups) {\n      for (const item of group.display_items) {\n        if (item.tag_id == tagId) {\n          return item.tag_display_text;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async vote(assetId: string, voteType: string, value: unknown) {\n    return this._apiClient.post(`/assets/${assetId}/votes/`, {\n      session_id: this._sessionId,\n      vote_type: voteType,\n      value,\n    });\n  }\n\n  /// @return Detailed information about a particular asset.\n  async getAsset(id: string): Promise<IAssetData> {\n    // Check for this asset in any already loaded asset pool.\n    if (this._assetData) {\n      for (const asset of this._assetData) {\n        if (asset.id === id) {\n          return asset;\n        }\n      }\n    }\n    // Otherwise, ask the server for the asset details.\n    return this._apiClient.get<IAssetData>(`/assets/${id}/`, {\n      session_id: this._sessionId,\n    });\n  }\n\n  /// @return Details about a particular envelope (which may contain multiple assets).\n  async getEnvelope(id: string | number): Promise<unknown> {\n    return this._apiClient.get<unknown>(`/envelopes/${id}`, {\n      session_id: this._sessionId,\n    });\n  }\n}\n","import { ISession } from \"./types\";\nimport { IApiClient } from \"./types/api-client\";\n\nlet clientSystem: string = \"Unknown\";\nlet projectId: number | undefined, sessionId: string, geoListenEnabled: boolean;\nlet apiClient: IApiClient;\n\n/** Responsible for establishing a session with the Roundware server **/\n\nexport class Session implements ISession {\n  sessionId: number | undefined;\n\n  /** Create a new Session\n   * @param {object} navigator - provides access to the userAgent string\n   * @param {Number} newProjectId - identifies the Roundware project to associate with this session\n   * @param {Boolean} geoListenEnablement - whether the server should enable geo listening features\n   * @param {Object} options - Various configuration parameters for this session\n   * @param {apiClient} options.apiClient - the API client object to use for server API calls\n   **/\n  constructor(\n    navigator: Window[`navigator`],\n    newProjectId: number,\n    geoListenEnablement: boolean,\n    options: {\n      apiClient: IApiClient;\n    }\n  ) {\n    clientSystem = navigator.userAgent;\n\n    if (clientSystem.length > 127) {\n      // on mobile browsers, this string is longer than the server wants\n      clientSystem = clientSystem.slice(0, 127);\n    }\n\n    projectId = newProjectId;\n    geoListenEnabled = geoListenEnablement;\n\n    apiClient = options.apiClient;\n  }\n\n  /** @returns {String} human-readable representation of this session **/\n  toString(): string {\n    return \"Roundware Session #\" + sessionId;\n  }\n\n  /** Make an asynchronous API call to establish a session with the Roundware server\n   * @return {Promise} represents the pending API call\n   **/\n  async connect() {\n    const requestData = {\n      project_id: projectId,\n      geo_listen_enabled: geoListenEnabled,\n      client_system: clientSystem,\n    };\n\n    const data = await apiClient.post<{ id: number }>(\n      \"/sessions/\",\n      requestData\n    );\n    this.sessionId = data.id;\n\n    return this.sessionId;\n  }\n}\n","import * as logger from 'loglevel';\nexport { logger };\n","// see https://github.com/loafofpiecrust/roundware-ios-framework-v2/blob/client-mixing/RWFramework/RWFramework/Playlist/SortMethod.swift\n\nimport { IAssetData } from \"./types\";\n\n/**\n Sort assets destructively, in random order.\n @note This is tricky to get right, uses a Fisher-Yates (aka Knuth) Shuffle. I copied this right out of Stack Overflow.\n @see https://stackoverflow.com/a/2450976/308448\n @see http://sedition.com/perl/javascript-fy.html\n */\nexport function sortRandomly(assetsArray: IAssetData[]) {\n  for (let i = assetsArray.length - 1; i > 0; i--) {\n    const rand = Math.floor(Math.random() * (i + 1));\n    [assetsArray[i], assetsArray[rand]] = [assetsArray[rand], assetsArray[i]];\n  }\n}\n\n/**\n Sort assets destructively, in descending order of assigned weight.\n */\n\nexport function sortByWeight(assetsArray: IAssetData[]) {\n  assetsArray.sort((assetA, assetB) => assetA.weight! - assetB.weight!);\n}\n\n/**\nSort assets destructively, in descending order of current number of likes.\n@TODO Not implemented yet\n*/\nexport function sortByLikes(assetsArray: IAssetData[]) {\n  // eslint-disable-line no-unused-vars\n  console.warn(\"sortByLikes not implemented yet\"); // TODO: implement sortByLikes\n}\n\nexport function sortByProjectDefault(\n  ordering: string\n): (assetArray: IAssetData[]) => void {\n  switch (ordering) {\n    case \"by_weight\":\n      return sortByWeight;\n    case \"by_like\":\n      return sortByLikes;\n    case \"random\":\n    default:\n      return sortRandomly;\n  }\n}\n\n// swift code for 'sortByRanking':\n//private var assetVotes: [Int: Int]? = nil\n\n//func sortRanking(for asset: Asset, in playlist: Playlist) -> Double {\n//if let votes = assetVotes?[asset.id] {\n//return Double(-votes)\n//} else {\n//return 0.0\n//}\n//}\n\n//func onRefreshAssets(in playlist: Playlist) -> Promise<Void> {\n//let projectId = playlist.project.id\n//return RWFramework.sharedInstance.apiGetVotesSummary(\n//type: \"like\",\n//projectId: projectId.description\n//).then { data -> Void in\n//let voteData = try JSON(data: data).array\n//self.assetVotes = voteData?.reduce(into: [Int: Int]()) { acc, data in\n//let assetId = data[\"asset_id\"].int!\n//let votes = data[\"asset_votes\"].int!\n//acc[assetId] = votes\n//}\n//}\n//}\n//}\n","import { IApiClient } from \"./types/api-client\";\nimport { ISpeaker, ISpeakerData } from \"./types/speaker\";\n\nconst PATH = \"/speakers/\";\n\nexport class Speaker implements ISpeaker {\n  private _projectId: number;\n  private _apiClient: IApiClient;\n\n  constructor(projectId: number, { apiClient }: { apiClient: IApiClient }) {\n    this._projectId = projectId;\n    this._apiClient = apiClient;\n  }\n\n  toString() {\n    return `Roundware Speaker (#${this._projectId})`;\n  }\n\n  async connect({ ...data }): Promise<ISpeakerData[]> {\n    return await this._apiClient.get<ISpeakerData[]>(PATH, {\n      ...data,\n      project_id: this._projectId,\n    });\n  }\n}\n","import booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\n// import pointToLineDistance from './vendor/turf/point-to-line-distance';\nimport pointToLineDistance from \"@turf/point-to-line-distance\";\nimport lineToPolygon from \"@turf/line-to-polygon\";\nimport { cleanAudioURL } from \"./utils\";\nimport { ISpeakerTrack } from \"./types/speaker-track\";\nimport { IAudioContext, IGainNode } from \"standardized-audio-context\";\nimport { Coord, Feature, LineString, Point, Properties } from \"@turf/helpers\";\nimport { PrefetchAudioType } from \"./types\";\nimport { MultiPolygon } from \"@turf/helpers\";\nimport { Polygon } from \"@turf/helpers\";\nimport { ISpeakerData } from \"./types/speaker\";\n\nconst convertLinesToPolygon = (shape: any) => lineToPolygon(shape);\nconst FADE_DURATION_SECONDS = 3;\nconst NEARLY_ZERO = 0.001;\n\n/** A Roundware speaker under the control of the client-side mixer, representing 'A polygonal geographic zone within which an ambient audio stream broadcasts continuously to listeners.\n * Speakers can overlap, causing their audio to be mixed together accordingly.  Volume attenuation happens linearly over a specified distance from the edge of the Speaker’s defined zone.'\n * (quoted from https://github.com/loafofpiecrust/roundware-ios-framework-v2/blob/client-mixing/RWFramework/RWFramework/Playlist/Speaker.swift)\n * */\nexport class SpeakerTrack implements ISpeakerTrack {\n  prefetch: PrefetchAudioType;\n  audioContext: IAudioContext;\n  speakerId: string;\n  maxVolume: number;\n  minVolume: number;\n  attenuationDistanceKm: number;\n  uri: string;\n  listenerPoint: Point;\n  playing: boolean;\n  attenuationBorderPolygon:\n    | Feature<MultiPolygon, { [name: string]: any }>\n    | Feature<Polygon, { [name: string]: any }>;\n  attenuationBorderLineString: Feature<LineString, { [name: string]: any }>;\n  outerBoundary:\n    | Feature<\n        MultiPolygon,\n        {\n          [name: string]: any;\n        }\n      >\n    | Feature<\n        Polygon,\n        {\n          [name: string]: any;\n        }\n      >;\n  currentVolume: number;\n  audio: HTMLAudioElement | undefined;\n  gainNode: IGainNode<IAudioContext> | undefined;\n\n  constructor({\n    audioContext,\n    listenerPoint,\n    prefetchAudio,\n    data,\n  }: {\n    audioContext: IAudioContext;\n    listenerPoint: Point;\n    prefetchAudio: PrefetchAudioType;\n    data: ISpeakerData;\n  }) {\n    const {\n      id: speakerId,\n      maxvolume: maxVolume,\n      minvolume: minVolume,\n      attenuation_border,\n      boundary,\n      attenuation_distance: attenuationDistance,\n      uri,\n    } = data;\n\n    this.prefetch = prefetchAudio;\n    this.audioContext = audioContext;\n    this.speakerId = speakerId;\n    this.maxVolume = maxVolume;\n    this.minVolume = minVolume;\n    this.attenuationDistanceKm = attenuationDistance / 1000;\n    this.uri = uri;\n    this.listenerPoint = listenerPoint;\n    this.playing = false;\n\n    this.attenuationBorderPolygon = convertLinesToPolygon(attenuation_border);\n    this.attenuationBorderLineString = attenuation_border;\n\n    this.outerBoundary = convertLinesToPolygon(boundary);\n    this.currentVolume = NEARLY_ZERO;\n  }\n\n  outerBoundaryContains(point: Coord) {\n    // @ts-ignore\n    return booleanPointInPolygon(point, this.outerBoundary);\n  }\n\n  attenuationShapeContains(point: Coord) {\n    // @ts-ignore\n    return booleanPointInPolygon(point, this.attenuationBorderPolygon);\n  }\n\n  attenuationRatio(atPoint: Coord) {\n    const distToInnerShapeKm = pointToLineDistance(\n      atPoint,\n      this.attenuationBorderLineString,\n      { units: \"kilometers\" }\n    );\n    const ratio = 1 - distToInnerShapeKm / this.attenuationDistanceKm;\n    return ratio;\n  }\n\n  calculateVolume() {\n    const { listenerPoint } = this;\n\n    if (!listenerPoint) {\n      return this.currentVolume;\n    } else if (this.attenuationShapeContains(listenerPoint)) {\n      return this.maxVolume;\n    } else if (this.outerBoundaryContains(listenerPoint)) {\n      const range = this.maxVolume - this.minVolume;\n      const volumeGradient =\n        this.minVolume + range * this.attenuationRatio(listenerPoint);\n      return volumeGradient;\n    } else {\n      return this.minVolume;\n    }\n  }\n\n  // @see https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/createGain\n  async buildAudio() {\n    if (this.audio) return this.audio;\n\n    const { audioContext, uri } = this;\n    const cleanURL = cleanAudioURL(uri);\n\n    let audio: HTMLAudioElement;\n    if (this.prefetch) {\n      // Download the speaker audio fully before playing it.\n      const response = await fetch(cleanURL);\n      const blob = await response.blob();\n      audio = new Audio(URL.createObjectURL(blob));\n    } else {\n      audio = new Audio(cleanURL);\n    }\n    audio.crossOrigin = \"anonymous\";\n    audio.loop = true;\n\n    const audioSrc = audioContext.createMediaElementSource(audio);\n    const gainNode = audioContext.createGain();\n\n    audioSrc.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n\n    this.gainNode = gainNode;\n    this.audio = audio;\n    this.audioContext = audioContext;\n\n    return this.audio;\n  }\n\n  async updateParams(\n    isPlaying: boolean,\n    opts: { listenerPoint: { geometry: Point } }\n  ) {\n    if (opts && opts.listenerPoint) {\n      this.listenerPoint = opts.listenerPoint.geometry;\n    }\n\n    const newVolume = await this.updateVolume();\n    if (!this.audio) throw new Error(`Audio is undefined! use buildAudio()`);\n    if (isPlaying != this.playing) {\n      if (newVolume < 0.05) {\n        this.audio.pause();\n      } else {\n        await this.audio.play();\n      }\n    }\n  }\n\n  async updateVolume() {\n    const newVolume = this.calculateVolume();\n\n    this.currentVolume = newVolume;\n\n    const secondsFromNow =\n      this.audioContext.currentTime + FADE_DURATION_SECONDS;\n\n    await this.buildAudio();\n    if (this.gainNode)\n      this.gainNode.gain.linearRampToValueAtTime(newVolume, secondsFromNow);\n\n    //console.info(`Setting '${this}' volume: ${newVolume.toFixed(2)} over ${FADE_DURATION_SECONDS} seconds`);\n\n    return newVolume;\n  }\n\n  get logline(): string {\n    return `${this} (${this.uri})`;\n  }\n\n  async play() {\n    const newVolume = await this.updateVolume();\n\n    if (newVolume < 0.05) return;\n\n    try {\n      //console.log('Playing',this.logline);\n      if (!this.audio)\n        throw new Error(`Audio is undefined! Please use buildAudio()`);\n      await this.audio.play();\n      this.playing = true;\n    } catch (err) {\n      console.error(\"Unable to play\", this.logline, err);\n    }\n  }\n\n  async pause() {\n    if (!this.playing) return;\n\n    try {\n      //console.log('Pausing',this.logline);\n      if (!this.audio)\n        throw new Error(`Audio is undefined! Please use buildAudio()`);\n      this.audio.pause();\n      this.playing = false;\n    } catch (err) {\n      console.error(\"Unable to pause\", this.logline, err);\n    }\n  }\n\n  toString() {\n    const { speakerId } = this;\n    return `SpeakerTrack (${speakerId})`;\n  }\n}\n","import { ITimedAsset, ITimedAssetData } from \"./types\";\nimport { IApiClient } from \"./types/api-client\";\n\nconst PATH = \"/timedassets/\";\n\nexport class TimedAsset implements ITimedAsset {\n  private _projectId: number;\n  private _apiClient: IApiClient;\n\n  constructor(projectId: number, { apiClient }: { apiClient: IApiClient }) {\n    this._projectId = projectId;\n    this._apiClient = apiClient;\n  }\n\n  toString() {\n    return `Roundware TimedAssets (#${this._projectId})`;\n  }\n\n  async connect({ ...data }) {\n    const options = { ...data, project_id: this._projectId };\n    return await this._apiClient.get<ITimedAssetData[]>(PATH, options);\n  }\n}\n","/** Responsible for identifying the user to the Roundware server and retrieving an auth token **/\n\nimport { IApiClient } from \"./types/api-client\";\nimport { IUser, IUserResponse } from \"./types/user\";\n\nexport class User implements IUser {\n  /** Create a User\n   * @param {Object} options - Various configuration parameters for this user\n   * @param {apiClient} options.apiClient - the API client object to use for server API calls\n   * @param {String} options.deviceId - this value distinguishes a particular user, who may be anonymous, to the server; by default we will fingerprint the browser to get this value, but you can supply your own value (useful if your app has a preexisting authorization scheme)\n   * @param {String} [options.clientType = \"web\"]\n   **/\n  apiClient: IApiClient;\n  deviceId: string;\n  clientType: string;\n  userName: string;\n  constructor({\n    apiClient,\n    deviceId = \"00000000000000\",\n    clientType = \"web\",\n  }: {\n    apiClient: IApiClient;\n    deviceId: string;\n    clientType: string;\n  }) {\n    // TODO need to try to persist deviceId as a random value that can partially serve as \"a unique identifier generated by the client\" that can\n    // used to claim a anonymous user's contributions. Some ideas for implementation: https://clientjs.org/ and https://github.com/Valve/fingerprintjs2\n    this.apiClient = apiClient;\n    this.deviceId = deviceId;\n    this.clientType = clientType;\n    this.userName = \"(unknown)\";\n  }\n\n  /** @returns {String} human-readable representation of this user **/\n  toString(): string {\n    return `User ${this.userName} (deviceId ${this.deviceId})`;\n  }\n\n  /** Make an API call to associate the (possibly anonymous) application user with a Roundware user account.\n   * Upon success, this function receives an auth token, which is passed onto the apiClient object.\n   * @returns {Promise} represents the pending API call **/\n  async connect(): Promise<IUserResponse | {}> {\n    const data = {\n      device_id: this.deviceId,\n      client_type: this.clientType,\n    };\n\n    // TODO need to also handle auth failures\n\n    try {\n      const responseData: IUserResponse =\n        await this.apiClient.post<IUserResponse>(\"/users/\", data);\n      this.userName = responseData.username;\n      this.apiClient.authToken = responseData.token;\n      return responseData;\n    } catch (err) {\n      console.error(\"Auth failure\", err);\n      return {};\n    }\n  }\n}\n","/* global require */\n\nconst { point } = require(\"@turf/helpers\");\nimport { Point } from \"@turf/helpers\";\nimport { AudioContext, IAudioContext } from \"standardized-audio-context\";\n\nconst MATCHES_URI_SCHEME = new RegExp(/^https?:\\/\\//i);\nconst MATCHES_WAV_FILE = new RegExp(/\\.wav$/i);\n\n/**\n * @param  {string} url\n * @returns Cleaned URL\n */\nexport const cleanAudioURL = (url: string): string =>\n  url.replace(MATCHES_URI_SCHEME, \"//\").replace(MATCHES_WAV_FILE, \".mp3\");\n/**\n * @param  {number} {latitude\n * @param  {number} longitude\n * @returns Point\n */\nexport function coordsToPoints({\n  latitude,\n  longitude,\n}: {\n  latitude: number;\n  longitude: number;\n}): Point {\n  // NOTE we need to reverse the order here to make geolocations compatible with Roundware geometries, which have points listed w/ longitude first\n  return point([+longitude, +latitude]); // NOTE we need to reverse the order here to make geolocations compatible with Roundware geometries, which have points listed w/ longitude first\n}\n\n// @see https://stackoverflow.com/a/24403771/308448\nexport const isEmpty = (array: any[]): boolean => !array || array.length < 1;\n\n// @see https://eslint.org/docs/rules/no-prototype-builtins\nexport const hasOwnProperty = (target: unknown, propName: PropertyKey) =>\n  Object.prototype.hasOwnProperty.call(target, propName);\n\n// @see https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_minby-and-_maxby //const makeSelect = (comparator) => (a,b) => comparator(a,b) ? a : b;\n//export const minValue = makeSelect((a,b) => a <= b);\n//const minByValue = makeSelect((a, b) => a.value <= b.value)\n//const maxByValue = makeSelect((a, b) => a.value >= b.value)\n\n// @see https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_random\nexport const random = (a: number = 1, b: number = 0): number => {\n  const lower = Math.min(a, b);\n  const upper = Math.max(a, b);\n\n  return lower + Math.random() * (upper - lower);\n};\n\nexport const randomInt = (a = 1, b = 0) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nconst UNLOCK_AUDIO_EVENTS: [\"touchstart\", \"touchend\", \"mousedown\", \"keydown\"] =\n  [\"touchstart\", \"touchend\", \"mousedown\", \"keydown\"];\n\n/** Helps stabilize WebAudio startup\n @thanks https://www.mattmontag.com/web/unlock-web-audio-in-safari-for-ios-and-macos */\nfunction unlockAudioContext(\n  body: Window[`document`][`body`],\n  audioCtx: IAudioContext\n) {\n  if (audioCtx.state !== \"suspended\") return;\n\n  function unlock() {\n    audioCtx.resume().then(clean);\n  }\n  function clean() {\n    UNLOCK_AUDIO_EVENTS.forEach((e) => body.removeEventListener(e, unlock));\n  }\n\n  UNLOCK_AUDIO_EVENTS.forEach((e) => body.addEventListener(e, unlock, false));\n}\n\nexport function buildAudioContext(windowScope: Window): IAudioContext {\n  const audioContext = new AudioContext();\n  const {\n    document: { body },\n  } = windowScope;\n  unlockAudioContext(body, audioContext);\n\n  return audioContext;\n}\n\nexport const timestamp = {\n  toString: (time = new Date()) => {\n    const hour = time.getHours().toString().padStart(2, \"0\");\n    const mins = time.getMinutes().toString().padStart(2, \"0\");\n    const secs = time.getSeconds().toString().padStart(2, \"0\");\n\n    return [hour, mins, secs].join(\":\");\n  },\n};\n\nexport const getUrlParam = (urlStr: string, paramName: string): string => {\n  const url = new URL(urlStr);\n  const params = new URLSearchParams(url.search);\n  return params.get(paramName) as string;\n};\n\nexport const NO_OP = () => {};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(312);\n"],"sourceRoot":""}